# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2022-05-02 07:14+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: YAML Front Matter: author
#: upstream/_posts/2021-03-15-micrometer-prometheus-openshift.adoc:1
#, fuzzy, no-wrap
msgid "jcarvaja"
msgstr "jcarvaja"

#. type: YAML Front Matter: date
#: upstream/_posts/2021-03-15-micrometer-prometheus-openshift.adoc:1
#, fuzzy, no-wrap
msgid "2021-03-15"
msgstr "2021-03-15"

#. type: YAML Front Matter: layout
#: upstream/_posts/2021-03-15-micrometer-prometheus-openshift.adoc:1
#, fuzzy, no-wrap
msgid "post"
msgstr "Correo electrónico:"

#. type: YAML Front Matter: synopsis
#: upstream/_posts/2021-03-15-micrometer-prometheus-openshift.adoc:1
#, fuzzy, no-wrap
msgid "Expose Quarkus Apps metrics into OpenShift using Micrometer and Prometheus"
msgstr "Exponer las métricas de Quarkus Apps en OpenShift utilizando Micrometer y Prometheus"

#. type: YAML Front Matter: tags
#: upstream/_posts/2021-03-15-micrometer-prometheus-openshift.adoc:1
#, fuzzy, no-wrap
msgid "extension"
msgstr "extensión"

#. type: YAML Front Matter: title
#: upstream/_posts/2021-03-15-micrometer-prometheus-openshift.adoc:1
#, fuzzy, no-wrap
msgid "Monitoring Quarkus apps using Micrometer and Prometheus into OpenShift"
msgstr "Activar la supervisión de los proyectos definidos por el usuario en OpenShift"

#. type: Plain text
#: upstream/_posts/2021-03-15-micrometer-prometheus-openshift.adoc:11
#, fuzzy
msgid "Metrics are the measurements of any aspect of an application such as resource usage or behaviors. We can expose these metrics from our Quarkus applications by using the https://quarkus.io/guides/micrometer[Micrometer] extension via the `/q/metrics` endpoint."
msgstr "Las métricas son las mediciones de cualquier aspecto de una aplicación como el uso de recursos o los comportamientos. Podemos exponer estas métricas desde nuestras aplicaciones Quarkus utilizando la extensión  link:https://quarkus.io/guides/micrometer[Micrometer] a través del endpoint `/q/metrics`."

#. type: Plain text
#: upstream/_posts/2021-03-15-micrometer-prometheus-openshift.adoc:13
#, fuzzy
msgid "What metrics will be exposed? Only by adding the Micrometer extension, a lot of metrics are exposed by default for example metrics about the JVM engine like the number of current live threads `jvm_threads_live_threads` or metrics about the system itself like the current CPU usage `system_cpu_usage`. Additionally, more metrics will automatically be exposed depending on other Quarkus extensions we might be using. For example, if we are using a Quarkus REST extension such as Resteasy, it will automatically expose metrics about your running services:"
msgstr "¿Qué métricas se exponen? Sólo añadiendo la extensión Micrometer, se exponen por defecto muchas métricas, por ejemplo, métricas sobre el motor JVM como el número de hilos vivos actuales `jvm_threads_live_threads` o métricas sobre el propio sistema como el uso actual de la CPU `system_cpu_usage`. Además, se expondrán automáticamente más métricas dependiendo de otras extensiones de Quarkus que podamos estar utilizando. Por ejemplo, si estamos utilizando una extensión REST de Quarkus como Resteasy, ésta expondrá automáticamente métricas sobre sus servicios en ejecución:"

#. type: Plain text
#: upstream/_posts/2021-03-15-micrometer-prometheus-openshift.adoc:18
#, fuzzy
msgid "``` http_server_requests_seconds_count{method=\"GET\",outcome=\"SUCCESS\",status=\"200\",uri=\"/hello\",} 1.0 http_server_requests_seconds_sum{method=\"GET\",outcome=\"SUCCESS\",status=\"200\",uri=\"/hello\",} 0.018198043 ```"
msgstr "<pre class=\"highlight\"> ``</pre>"

#. type: Plain text
#: upstream/_posts/2021-03-15-micrometer-prometheus-openshift.adoc:20
#, fuzzy
msgid "The same will happen if we're using the Kafka extension. All this configuration is well documented in https://quarkus.io/guides/micrometer[the Quarkus Micrometer guide]."
msgstr "Lo mismo ocurrirá si utilizamos la extensión Kafka. Toda esta configuración está bien documentada en  link:https://quarkus.io/guides/micrometer[la guía de Quarkus Micrometer]."

#. type: Plain text
#: upstream/_posts/2021-03-15-micrometer-prometheus-openshift.adoc:22
#, fuzzy
msgid "__How are these metrics consumed?__ As said, Micrometer exposes the metrics on the `/q/metrics` endpoint in order to be consumed by third parties like https://prometheus.io/[Prometheus]. OpenShift provides an embedded Prometheus instance that we can use. So, let's see what we need to do to integrate our Quarkus Applications metrics and the Prometheus embedded instance provided in OpenShift."
msgstr "_¿Cómo se consumen estas métricas?_ Como hemos dicho, Micrometer expone las métricas en el endpoint `/q/metrics` para que sean consumidas por terceros como  link:https://prometheus.io/[Prometheus]. OpenShift proporciona una instancia de Prometheus incrustada que podemos utilizar. Por lo tanto, vamos a ver lo que tenemos que hacer para integrar nuestras métricas de Quarkus Applications y la instancia incrustada de Prometheus proporcionada en OpenShift."

#. type: Plain text
#: upstream/_posts/2021-03-15-micrometer-prometheus-openshift.adoc:24
#, fuzzy
msgid "Basically, we need to complete the next following steps:"
msgstr "Básicamente, tenemos que completar los siguientes pasos:"

#. type: Plain text
#: upstream/_posts/2021-03-15-micrometer-prometheus-openshift.adoc:26
#, fuzzy
msgid "Enable Monitoring for user-defined projects in OpenShift"
msgstr "Activar la supervisión de los proyectos definidos por el usuario en OpenShift"

#. type: Plain text
#: upstream/_posts/2021-03-15-micrometer-prometheus-openshift.adoc:27
#, fuzzy
msgid "Deploy our Quarkus application"
msgstr "Desplegar nuestra aplicación Quarkus"

#. type: Plain text
#: upstream/_posts/2021-03-15-micrometer-prometheus-openshift.adoc:28
#, fuzzy
msgid "Create a Service monitor in our project"
msgstr "Crear un monitor de servicio en nuestro proyecto"

#. type: Title ==
#: upstream/_posts/2021-03-15-micrometer-prometheus-openshift.adoc:29
#, fuzzy, no-wrap
msgid "Requirements"
msgstr "Requisitos"

#. type: Plain text
#: upstream/_posts/2021-03-15-micrometer-prometheus-openshift.adoc:32
#, fuzzy
msgid "https://docs.openshift.com/container-platform/4.7/cli_reference/openshift_cli/getting-started-cli.html[Openshift CLI]"
msgstr "link:https://docs.openshift.com/container-platform/4.7/cli_reference/openshift_cli/getting-started-cli.html[CLI de Openshift]"

#. type: Plain text
#: upstream/_posts/2021-03-15-micrometer-prometheus-openshift.adoc:33
#, fuzzy
msgid "An Openshift instance"
msgstr "Una instancia de Openshift"

#. type: Title ==
#: upstream/_posts/2021-03-15-micrometer-prometheus-openshift.adoc:34
#, fuzzy, no-wrap
msgid "Step 1 - Enable Monitoring for user-defined projects in OpenShift"
msgstr "Paso 1 - Activar la supervisión de los proyectos definidos por el usuario en OpenShift"

#. type: Plain text
#: upstream/_posts/2021-03-15-micrometer-prometheus-openshift.adoc:37
#, fuzzy
msgid "In order to enable the Monitoring for user-defined projects, we need to follow the instructions https://docs.openshift.com/container-platform/4.7/monitoring/enabling-monitoring-for-user-defined-projects.html[from OpenShift documentation]."
msgstr "Para habilitar la monitorización de los proyectos definidos por el usuario, debemos seguir las instrucciones de  link:https://docs.openshift.com/container-platform/4.7/monitoring/enabling-monitoring-for-user-defined-projects.html[la documentación de OpenShift]."

#. type: Plain text
#: upstream/_posts/2021-03-15-micrometer-prometheus-openshift.adoc:39
#, fuzzy
msgid "In essence, we need to create a ConfigMap in the namespace `openshift-monitoring`."
msgstr "En esencia, necesitamos crear un ConfigMap en el espacio de nombres `openshift-monitoring`."

#. type: Plain text
#: upstream/_posts/2021-03-15-micrometer-prometheus-openshift.adoc:41
#, fuzzy
msgid "`cluster-monitoring-config.yaml`:"
msgstr "`cluster-monitoring-config.yaml`:"

#. type: delimited block -
#: upstream/_posts/2021-03-15-micrometer-prometheus-openshift.adoc:51
#, no-wrap
msgid ""
"apiVersion: v1\n"
"kind: ConfigMap\n"
"metadata:\n"
"    name: cluster-monitoring-config\n"
"    namespace: openshift-monitoring\n"
"data:\n"
"    config.yaml: |\n"
"    enableUserWorkload: true\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2021-03-15-micrometer-prometheus-openshift.adoc:54
#: upstream/_posts/2021-03-15-micrometer-prometheus-openshift.adoc:198
#, fuzzy
msgid "And apply it:"
msgstr "Y aplícalo:"

#. type: delimited block -
#: upstream/_posts/2021-03-15-micrometer-prometheus-openshift.adoc:58
#, no-wrap
msgid "oc apply -f cluster-monitoring-config.yaml\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2021-03-15-micrometer-prometheus-openshift.adoc:61
#, fuzzy
msgid "For 4.5 or previous versions of OpenShift, you need to use instead:"
msgstr "Para la versión 4.5 o anteriores de OpenShift, es necesario utilizar en su lugar:"

#. type: delimited block -
#: upstream/_posts/2021-03-15-micrometer-prometheus-openshift.adoc:73
#, no-wrap
msgid ""
"apiVersion: v1\n"
"kind: ConfigMap\n"
"metadata:\n"
"    name: cluster-monitoring-config\n"
"    namespace: openshift-monitoring\n"
"data:\n"
"    config.yaml: |\n"
"    techPreviewUserWorkload:\n"
"        enabled: true\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2021-03-15-micrometer-prometheus-openshift.adoc:76
#, fuzzy
msgid "Openshift will automatically create the `openshift-user-workload-monitoring` namespace and deploy the required resources for Prometheus to it."
msgstr "Openshift creará automáticamente el espacio de nombres `openshift-user-workload-monitoring` y desplegará en él los recursos necesarios para Prometheus."

#. type: Title ==
#: upstream/_posts/2021-03-15-micrometer-prometheus-openshift.adoc:77
#, fuzzy, no-wrap
msgid "2. Deploy our Quarkus application"
msgstr "<li> <p>Desplegar nuestra aplicación Quarkus</p> </li>"

#. type: Plain text
#: upstream/_posts/2021-03-15-micrometer-prometheus-openshift.adoc:80
#, fuzzy
msgid "After the required infrastructure in OpenShift is ready, then let's continue with the Quarkus application. We'll implement a REST API and enable micrometer with prometheus which requires the addition of two Quarkus extensions to our `pom.xml` file:"
msgstr "Después de que la infraestructura requerida en OpenShift esté lista, entonces vamos a continuar con la aplicación Quarkus. Implementaremos una API REST y habilitaremos micrometer con prometheus, lo que requiere la adición de dos extensiones de Quarkus a nuestro archivo `pom.xml`:"

#. type: delimited block -
#: upstream/_posts/2021-03-15-micrometer-prometheus-openshift.adoc:91
#, no-wrap
msgid ""
"<dependency>\n"
"    <groupId>io.quarkus</groupId>\n"
"    <artifactId>quarkus-resteasy</artifactId>\n"
"</dependency>\n"
"<dependency>\n"
"    <groupId>io.quarkus</groupId>\n"
"    <artifactId>quarkus-micrometer-registry-prometheus</artifactId>\n"
"</dependency>\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2021-03-15-micrometer-prometheus-openshift.adoc:94
#, fuzzy
msgid "And we'll add the Greeting resource:"
msgstr "Y añadiremos el recurso del saludo:"

#. type: delimited block -
#: upstream/_posts/2021-03-15-micrometer-prometheus-openshift.adoc:101
#, no-wrap
msgid ""
"import javax.inject.Inject;\n"
"import javax.ws.rs.GET;\n"
"import javax.ws.rs.Path;\n"
"import javax.ws.rs.PathParam;\n"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2021-03-15-micrometer-prometheus-openshift.adoc:104
#, no-wrap
msgid ""
"import io.micrometer.core.instrument.MeterRegistry;\n"
"import io.micrometer.core.instrument.Tags;\n"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2021-03-15-micrometer-prometheus-openshift.adoc:107
#, no-wrap
msgid ""
"@Path(\"/hello\")\n"
"public class GreetingsResource {\n"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2021-03-15-micrometer-prometheus-openshift.adoc:110
#, no-wrap
msgid ""
"    @Inject\n"
"    MeterRegistry registry;\n"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2021-03-15-micrometer-prometheus-openshift.adoc:115
#, no-wrap
msgid ""
"    @GET\n"
"    @Path(\"/{name}\")\n"
"    public String sayHello(@PathParam(value = \"name\") String name) {\n"
"        registry.counter(\"greeting_counter\", Tags.of(\"name\", name)).increment();\n"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2021-03-15-micrometer-prometheus-openshift.adoc:119
#, no-wrap
msgid ""
"        return \"Hello!\";\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2021-03-15-micrometer-prometheus-openshift.adoc:122
#, fuzzy
msgid "As we can see, we use the micrometer registry facade to create a counter with a tag by name that will be incremented every time it's invoked."
msgstr "Como vemos, utilizamos la fachada del registro micrométrico para crear un contador con una etiqueta por nombre que se incrementará cada vez que sea invocado."

#. type: Plain text
#: upstream/_posts/2021-03-15-micrometer-prometheus-openshift.adoc:124
#, fuzzy
msgid "Let's try this application by running it:"
msgstr "Vamos a probar esta aplicación ejecutándola:"

#. type: delimited block -
#: upstream/_posts/2021-03-15-micrometer-prometheus-openshift.adoc:128
#, no-wrap
msgid "mvn compile quarkus:dev\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2021-03-15-micrometer-prometheus-openshift.adoc:131
#, fuzzy
msgid "Now, we should be able to call our service:"
msgstr "Ahora, deberíamos poder llamar a nuestro servicio:"

#. type: delimited block -
#: upstream/_posts/2021-03-15-micrometer-prometheus-openshift.adoc:135
#, no-wrap
msgid "curl http://localhost:8080/hello/quarkus\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2021-03-15-micrometer-prometheus-openshift.adoc:138
#, fuzzy
msgid "And it should return `Hello!`. So good so far, we can also see the metrics in `http://localhost:8080/q/metrics` where should see our `greeting_counter` counter:"
msgstr "Y debería devolver `Hello!`. Hasta aquí todo bien, también podemos ver las métricas en `&lt;a href=\"http://localhost:8080/q/metrics\" class=\"bare\"&gt;http://localhost:8080/q/metrics&lt;/a&gt;` donde deberíamos ver nuestro contador `greeting_counter`:"

#. type: delimited block -
#: upstream/_posts/2021-03-15-micrometer-prometheus-openshift.adoc:144
#, no-wrap
msgid ""
"# HELP greeting_counter_total  \n"
"# TYPE greeting_counter_total counter\n"
"greeting_counter_total{name=\"quarkus\",} 1.0\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2021-03-15-micrometer-prometheus-openshift.adoc:147
#, fuzzy
msgid "Next, we need to deploy our Quarkus application into OpenShift. For ease this step, Quarkus provides a super useful extension called `quarkus-openshift`, let's add it into our `pom.xml` file:"
msgstr "A continuación, tenemos que desplegar nuestra aplicación Quarkus en OpenShift. Para facilitar este paso, Quarkus proporciona una extensión súper útil llamada `quarkus-openshift`, vamos a añadirla en nuestro archivo `pom.xml`:"

#. type: delimited block -
#: upstream/_posts/2021-03-15-micrometer-prometheus-openshift.adoc:154
#, no-wrap
msgid ""
"<dependency>\n"
"    <groupId>io.quarkus</groupId>\n"
"    <artifactId>quarkus-openshift</artifactId>\n"
"</dependency>\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2021-03-15-micrometer-prometheus-openshift.adoc:157
#, fuzzy
msgid "So, let's deploy our application into a newly created project `my-project` in OpenShift:"
msgstr "Así que vamos a desplegar nuestra aplicación en un proyecto recién creado `my-project` en OpenShift:"

#. type: delimited block -
#: upstream/_posts/2021-03-15-micrometer-prometheus-openshift.adoc:162
#, no-wrap
msgid ""
"oc new-project my-project\n"
"mvn clean package -Dquarkus.kubernetes.deploy=true -Dquarkus.openshift.expose=true -Dquarkus.openshift.labels.app-with-metrics=quarkus-app\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2021-03-15-micrometer-prometheus-openshift.adoc:165
#, fuzzy
msgid "The label `app-with-metrics` will be used in a later step to select the applications to monitor by OpenShift."
msgstr "La etiqueta `app-with-metrics` se utilizará en un paso posterior para seleccionar las aplicaciones a monitorizar por OpenShift."

#. type: Title ==
#: upstream/_posts/2021-03-15-micrometer-prometheus-openshift.adoc:166
#, fuzzy, no-wrap
msgid "3. Create a Service monitor in our project"
msgstr "<li> <p>Crear un monitor de servicio en nuestro proyecto</p> </li>"

#. type: Plain text
#: upstream/_posts/2021-03-15-micrometer-prometheus-openshift.adoc:169
#, fuzzy
msgid "Before moving forward, let's explain first how Prometheus works. Prometheus uses a pull model to get metrics from applications. This means that Prometheus will scrape or watch endpoints to pull metrics from."
msgstr "Antes de avanzar, vamos a explicar primero cómo funciona Prometheus. Prometheus utiliza un modelo de extracción para obtener métricas de las aplicaciones. Esto significa que Prometheus raspará o vigilará los puntos finales para extraer las métricas."

#. type: Plain text
#: upstream/_posts/2021-03-15-micrometer-prometheus-openshift.adoc:171
#, fuzzy
msgid "From the previous step, our service is now running in OpenShift, but we didn't configure anything in Prometheus to scrape our service yet. This is done by the Service Monitor resource:"
msgstr "Desde el paso anterior, nuestro servicio se está ejecutando en OpenShift, pero aún no hemos configurado nada en Prometheus para raspar nuestro servicio. Esto lo hace el recurso Service Monitor:"

#. type: Plain text
#: upstream/_posts/2021-03-15-micrometer-prometheus-openshift.adoc:173
#, fuzzy
msgid "`service-monitor.yaml`:"
msgstr "`service-monitor.yaml`:"

#. type: delimited block -
#: upstream/_posts/2021-03-15-micrometer-prometheus-openshift.adoc:191
#, no-wrap
msgid ""
"apiVersion: monitoring.coreos.com/v1\n"
"kind: ServiceMonitor\n"
"metadata:\n"
"  labels:\n"
"    k8s-app: prometheus-app-monitor\n"
"  name: prometheus-app-monitor\n"
"  namespace: my-project\n"
"spec:\n"
"  endpoints:\n"
"  - interval: 30s\n"
"    targetPort: 8080\n"
"    path: /q/metrics\n"
"    scheme: http\n"
"  selector:\n"
"    matchLabels:\n"
"      app-with-metrics: 'quarkus-app'\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2021-03-15-micrometer-prometheus-openshift.adoc:194
#, fuzzy
msgid "The path `/q/metrics` is the default metrics endpoint in Quarkus."
msgstr "La ruta `/q/metrics` es el punto final de las métricas por defecto en Quarkus."

#. type: Plain text
#: upstream/_posts/2021-03-15-micrometer-prometheus-openshift.adoc:196
#, fuzzy
msgid "We could configure the `/metrics` endpoint Prometheus expects in `application.properties` instead of adding the path attribute above using the following property: `quarkus.micrometer.export.prometheus.path=/metrics`."
msgstr "Podríamos configurar el endpoint de `/metrics` que Prometheus espera en `application.properties` en lugar de añadir el atributo de la ruta anterior utilizando la siguiente propiedad: `quarkus.micrometer.export.prometheus.path=/metrics`."

#. type: delimited block -
#: upstream/_posts/2021-03-15-micrometer-prometheus-openshift.adoc:202
#, no-wrap
msgid "oc apply -f service-monitor.yaml\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2021-03-15-micrometer-prometheus-openshift.adoc:205
#, fuzzy
msgid "What we have just done is to create a Service Monitor named `prometheus-app-monitor` that will select apps with the label `app-with-metrics: quarkus-app` that was added in the previous step. Then, OpenShift will call the endpoint `/q/metrics` for all the services labeled with `app-with-metrics: quarkus-app` every 30 seconds."
msgstr "Lo que acabamos de hacer es crear un Monitor de Servicio llamado `prometheus-app-monitor` que seleccionará las aplicaciones con la etiqueta `app-with-metrics: quarkus-app` que se añadió en el paso anterior. Entonces, OpenShift llamará al endpoint `/q/metrics` para todos los servicios etiquetados con `app-with-metrics: quarkus-app` cada 30 segundos."

#. type: Title ==
#: upstream/_posts/2021-03-15-micrometer-prometheus-openshift.adoc:206
#, fuzzy, no-wrap
msgid "Finally, let's start using it!"
msgstr "Por último, ¡empecemos a utilizarlo!"

#. type: Plain text
#: upstream/_posts/2021-03-15-micrometer-prometheus-openshift.adoc:209
#, fuzzy
msgid "First, we need to call our greetings service: `http://quarkus-micrometer-my-project.ocp.host/hello/quarkus`. This will increment the `greeting_counter_total` counter. But where can we see the metrics? Let's browse to OpenShift Console in the `Developer > Monitoring` view, select `Metrics`, then `Custom Query` and type `greeting_counter_total{name = \"quarkus\"}`, we should see now:"
msgstr "En primer lugar, tenemos que llamar a nuestro servicio de saludos: `&lt;a href=\"http://quarkus-micrometer-my-project.ocp.host/hello/quarkus\" class=\"bare\"&gt;http://quarkus-micrometer-my-project.ocp.host/hello/quarkus&lt;/a&gt;`. Esto incrementará el contador de `greeting_counter_total`. ¿Pero dónde podemos ver las métricas? Naveguemos a la Consola de OpenShift en la vista `Developer &amp;gt; Monitoring`, seleccionemos `Metrics`, luego `Custom Query` y escribamos `greeting_counter_total{name = \"quarkus\"}`, deberíamos ver ahora:"

#. type: Target for macro image
#: upstream/_posts/2021-03-15-micrometer-prometheus-openshift.adoc:210
#, no-wrap
msgid "/assets/images/posts/micrometer-openshift/micrometer-quarkus-io.png"
msgstr ""

#. type: Plain text
#: upstream/_posts/2021-03-15-micrometer-prometheus-openshift.adoc:212
#, fuzzy
msgid "Great! We are now exposing our Quarkus Application metrics in OpenShift!"
msgstr "¡Genial! ¡Ahora estamos exponiendo las métricas de nuestra aplicación Quarkus en OpenShift!"

#, fuzzy
#~ msgid "---\n"
#~ msgstr "---\n"

#, fuzzy
#~ msgid ""
#~ "layout: post\n"
#~ "title: Monitoring Quarkus apps using Micrometer and Prometheus into OpenShift \n"
#~ "date: 2021-03-15\n"
#~ "tags: extension\n"
#~ "synopsis: Expose Quarkus Apps metrics into OpenShift using Micrometer and Prometheus\n"
#~ "author: jcarvaja\n"
#~ "---\n"
#~ msgstr ""
#~ "layout: post\n"
#~ "title: Monitorización de aplicaciones Quarkus con Micrometer y Prometheus en OpenShift\n"
#~ "date: 2021-03-15\n"
#~ "tags: extension\n"
#~ "synopsis: Exponer las métricas de Quarkus Apps en OpenShift utilizando Micrometer y Prometheus\n"
#~ "author: jcarvaja\n"
#~ "---\n"
