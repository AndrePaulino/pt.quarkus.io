# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2022-05-02 07:14+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: YAML Front Matter: author
#: upstream/_posts/2020-12-08-resteasy-reactive.adoc:1
#, fuzzy, no-wrap
msgid "geoand"
msgstr "geoy"

#. type: YAML Front Matter: date
#: upstream/_posts/2020-12-08-resteasy-reactive.adoc:1
#, fuzzy, no-wrap
msgid "2020-12-07"
msgstr "2020-12-07"

#. type: YAML Front Matter: layout
#: upstream/_posts/2020-12-08-resteasy-reactive.adoc:1
#, fuzzy, no-wrap
msgid "post"
msgstr "Correo electrónico:"

#. type: YAML Front Matter: synopsis
#: upstream/_posts/2020-12-08-resteasy-reactive.adoc:1
#, fuzzy, no-wrap
msgid "RESTEasy Reactive is ready to be tested"
msgstr "RESTEasy Reactive está listo para ser probado"

#. type: YAML Front Matter: tags
#: upstream/_posts/2020-12-08-resteasy-reactive.adoc:1
#, fuzzy, no-wrap
msgid "reactive web rest resteasy"
msgstr "web reactiva resteasy"

#. type: YAML Front Matter: title
#: upstream/_posts/2020-12-08-resteasy-reactive.adoc:1
#, fuzzy, no-wrap
msgid "Announcing RESTEasy Reactive"
msgstr "Anuncio de RESTEasy Reactive"

#. type: Plain text
#: upstream/_posts/2020-12-08-resteasy-reactive.adoc:12
#, fuzzy
msgid "It gives the Quarkus and RESTEasy teams great pleasure to announce that RESTEasy Reactive integration in Quarkus has landed in the main Quarkus repo footnote:disclaimer[Currently the main RESTEasy Reactive component resides at https://github.com/quarkusio/quarkus/tree/main/independent-projects/resteasy-reactive in the main Quarkus repository; the plan is however that once things settle, this code will move to https://github.com/resteasy/resteasy-reactive. This move should not affect users of the quarkus-resteasy-reactive extensions in any way, just a heads up if anyone reads this blog post in the future and can’t find it.] and will be part of the next Quarkus release 1.11."
msgstr "Es un gran placer para los equipos de Quarkus y RESTEasy anunciar que la integración de RESTEasy Reactive en Quarkus ha aterrizado en el repo principal de Quarkus <sup class=\"footnote\" id=\"_footnote_disclaimer\">[ link:#_footnotedef_1[1, id=_footnoteref_1, role=footnote, title=View footnote.]</sup> ] y formará parte de la próxima versión 1.11 de Quarkus."

#. type: Plain text
#: upstream/_posts/2020-12-08-resteasy-reactive.adoc:15
#, fuzzy
msgid "We are looking forward to everyone testing it and providing us as much feedback as possible.  In typical Quarkus fashion, the project is consumable as a new set of extensions."
msgstr "Estamos deseando que todo el mundo lo pruebe y nos proporcione todos los comentarios posibles. Como es típico en Quarkus, el proyecto es consumible como un nuevo conjunto de extensiones."

#. type: Title ==
#: upstream/_posts/2020-12-08-resteasy-reactive.adoc:16
#, fuzzy, no-wrap
msgid "What is it?"
msgstr "¿Qué es?"

#. type: Plain text
#: upstream/_posts/2020-12-08-resteasy-reactive.adoc:20
#, fuzzy
msgid "As you probably guessed from the name, this work is a *new JAX-RS implementation* written from the ground up to work on our common *Vert.x* layer and is thus fully *reactive*, while also being very *tightly integrated with Quarkus* and consequently moving a lot of framework specific work (like annotation scanning and metamodel generation) to *build time*."
msgstr "Como probablemente hayas adivinado por el nombre, este trabajo es una *nueva implementación de JAX-RS* escrita desde cero para trabajar en nuestra capa común *Vert.x* y, por lo tanto, es totalmente *reactiva*, a la vez que se *integra muy estrechamente con Quarkus* y, en consecuencia, traslada gran parte del trabajo específico del marco (como el escaneo de anotaciones y la generación de metamodelos) al *tiempo de construcción*."

#. type: Title ==
#: upstream/_posts/2020-12-08-resteasy-reactive.adoc:21
#, fuzzy, no-wrap
msgid "Why should I care?"
msgstr "¿Por qué debería importarme?"

#. type: Plain text
#: upstream/_posts/2020-12-08-resteasy-reactive.adoc:24
#, fuzzy
msgid "The simplest answer is that you can continue to leverage the widely used and very powerful JAX-RS APIs to expose a REST layer for your application, while gaining a significant improvement in the maximum throughput the application can achieve. The application should also start slightly faster and consume a little less memory."
msgstr "La respuesta más sencilla es que puedes seguir aprovechando las muy utilizadas y potentes APIs de JAX-RS para exponer una capa REST para tu aplicación, al tiempo que obtienes una mejora significativa en el rendimiento máximo que puede alcanzar la aplicación. La aplicación también debería iniciarse ligeramente más rápido y consumir un poco menos de memoria."

#. type: Plain text
#: upstream/_posts/2020-12-08-resteasy-reactive.adoc:26
#, fuzzy
msgid "Our benchmarks reveal that the measurable performance with this new extension is almost identical to what we would achieve using Quarkus' Reactive Routes API (which is a very interesting API in its own right, but is generally more low level - not to mention the fact that it's a new API developers would need to learn)."
msgstr "Nuestras pruebas de referencia revelan que el rendimiento medible con esta nueva extensión es casi idéntico al que conseguiríamos utilizando la API de rutas reactivas de Quarkus (que es una API muy interesante por derecho propio, pero que en general es de más bajo nivel, por no mencionar el hecho de que es una nueva API que los desarrolladores tendrían que aprender)."

#. type: Plain text
#: upstream/_posts/2020-12-08-resteasy-reactive.adoc:28
#, fuzzy
msgid "Furthermore, when comparing our results to other competing enterprise Java frameworks that provide annotation based REST layers, Quarkus provided as much as double the throughput depending on the benchmark."
msgstr "Además, al comparar nuestros resultados con los de otros marcos Java empresariales de la competencia que proporcionan capas REST basadas en anotaciones, Quarkus proporcionó hasta el doble de rendimiento dependiendo de la referencia."

#. type: Title ==
#: upstream/_posts/2020-12-08-resteasy-reactive.adoc:29
#, fuzzy, no-wrap
msgid "What other benefits are there?"
msgstr "¿Qué otras ventajas hay?"

#. type: Plain text
#: upstream/_posts/2020-12-08-resteasy-reactive.adoc:34
#, fuzzy
msgid "As if the familiar API and the much improved runtime characteristics of the new extension weren't enough, we have added some really exciting and convenient new features (which are not part of the JAX-RS spec) that have either been requested by the community, or are things we feel improve the developer experience and soften some of the spec’s rough edge.  These new features are:"
msgstr "Como si la API familiar y las características de tiempo de ejecución muy mejoradas de la nueva extensión no fueran suficientes, hemos añadido algunas características nuevas realmente emocionantes y convenientes (que no forman parte de la especificación JAX-RS) que han sido solicitadas por la comunidad, o son cosas que creemos que mejoran la experiencia del desarrollador y suavizan algunas de las asperezas de la especificación. Estas nuevas características son:"

#. type: Labeled list
#: upstream/_posts/2020-12-08-resteasy-reactive.adoc:35
#, fuzzy, no-wrap
msgid "Non-blocking by default"
msgstr "Sin bloqueo por defecto"

#. type: Plain text
#: upstream/_posts/2020-12-08-resteasy-reactive.adoc:38
#, fuzzy
msgid "All endpoints are now running on the IO thread by default. You can use `@Blocking` to change that."
msgstr "Todos los puntos finales se ejecutan ahora en el hilo IO por defecto. Puedes usar `@Blocking` para cambiar eso."

#. type: Labeled list
#: upstream/_posts/2020-12-08-resteasy-reactive.adoc:39
#, fuzzy, no-wrap
msgid "Scoring system"
msgstr "Sistema de puntuación"

#. type: Plain text
#: upstream/_posts/2020-12-08-resteasy-reactive.adoc:42
#, fuzzy
msgid "On dev-mode startup, the application will show you a list of your endpoints, along with a performance score telling you why your endpoint is slower than an optimal version. This helps a lot in figuring out how to improve REST performance."
msgstr "Al iniciar el modo de desarrollo, la aplicación le mostrará una lista de sus puntos finales, junto con una puntuación de rendimiento que le indica por qué su punto final es más lento que una versión óptima. Esto ayuda mucho a averiguar cómo mejorar el rendimiento de REST."

#. type: Labeled list
#: upstream/_posts/2020-12-08-resteasy-reactive.adoc:43
#, fuzzy, no-wrap
msgid "New request/response filter design"
msgstr "Nuevo diseño de filtro de solicitud/respuesta"

#. type: Plain text
#: upstream/_posts/2020-12-08-resteasy-reactive.adoc:46
#, fuzzy
msgid "JAX-RS filters require implementing an interface and injecting context objects as fields, which is costly and inflexible. Based on our success in the Quarkus build system, filters are now simply annotated methods and any parameter is automatically injected:"
msgstr "Los filtros JAX-RS requieren la implementación de una interfaz y la inyección de objetos de contexto como campos, lo cual es costoso e inflexible. Basándonos en nuestro éxito en el sistema de construcción Quarkus, los filtros son ahora simplemente métodos anotados y cualquier parámetro se inyecta automáticamente:"

#. type: delimited block -
#: upstream/_posts/2020-12-08-resteasy-reactive.adoc:50
#, no-wrap
msgid "public class CustomContainerRequestFilter {\n"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2020-12-08-resteasy-reactive.adoc:57
#, no-wrap
msgid ""
"   @ServerRequestFilter\n"
"   public void whatever(UriInfo uriInfo, HttpHeaders httpHeaders, ContainerRequestContext requestContext) {\n"
"       String customHeaderValue = uriInfo.getPath() + \"-\" + httpHeaders.getHeaderString(\"some-input\");\n"
"       requestContext.getHeaders().putSingle(\"custom-header\", customHeaderValue);\n"
"   }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2020-12-08-resteasy-reactive.adoc:60
#, fuzzy
msgid "Furthermore, if filters need to perform blocking operations, then they can return `Uni<Void>` and RESTEasy Reactive will not block the event-loop thread while executing the filter."
msgstr "Además, si los filtros necesitan realizar operaciones de bloqueo, pueden devolver `Uni&amp;lt;Void&amp;gt;` y RESTEasy Reactive no bloqueará el hilo del bucle de eventos mientras se ejecuta el filtro."

#. type: Plain text
#: upstream/_posts/2020-12-08-resteasy-reactive.adoc:62
#, fuzzy
msgid "Finally, although we haven’t done it yet, this approach could easily be extended to other types of JAX-RS Providers thus completely forgoing the need to use `@Context` in their code."
msgstr "Por último, aunque aún no lo hemos hecho, este enfoque podría extenderse fácilmente a otros tipos de Proveedores JAX-RS, renunciando así por completo a la necesidad de utilizar `@Context` en su código."

#. type: Labeled list
#: upstream/_posts/2020-12-08-resteasy-reactive.adoc:63
#, fuzzy, no-wrap
msgid "New `*Param` annotations"
msgstr "Nuevas anotaciones en `*Param`"

#. type: Plain text
#: upstream/_posts/2020-12-08-resteasy-reactive.adoc:67
#, fuzzy
msgid "These annotations are meant to be used instead of the JAX-RS `@PathParam`, `@QueryParam` etc. annotations, without having the need to specify a name.  The reason we chose not to reuse the same annotation names is to avoid conflicting with either JAX-RS or other EE specs:"
msgstr "Estas anotaciones están pensadas para ser utilizadas en lugar de las anotaciones JAX-RS `@PathParam`, `@QueryParam` etc., sin necesidad de especificar un nombre. La razón por la que decidimos no reutilizar los mismos nombres de anotaciones es para evitar conflictos con JAX-RS u otras especificaciones de EE:"

#. type: delimited block -
#: upstream/_posts/2020-12-08-resteasy-reactive.adoc:80
#, no-wrap
msgid ""
"@POST\n"
"@Path(\"params/{p}\")\n"
"public String params(@RestPath String p,\n"
"                    @RestQuery String q,\n"
"                    @RestHeader int h,\n"
"                    @RestForm String f,\n"
"                    @RestMatrix String m,\n"
"                    @RestCookie String c) {\n"
"   return \"params: p: \" + p + \", q: \" + q + \", h: \" + h + \", f: \" + f + \", m: \" + m + \", c: \" + c;\n"
"}\n"
msgstr ""

#. type: Labeled list
#: upstream/_posts/2020-12-08-resteasy-reactive.adoc:82
#, fuzzy, no-wrap
msgid "Simpler parameter and context injection"
msgstr "Simplificación de la inyección de parámetros y contextos"

#. type: Plain text
#: upstream/_posts/2020-12-08-resteasy-reactive.adoc:85
#, fuzzy
msgid "With RESTEasy Reactive you don’t even need to use `@PathParam` or `@RestPath` if your parameter has the same name as a path parameter, and similarly you can skip `@Context` for all the known context types, which makes it even simpler:"
msgstr "Con RESTEasy Reactive ni siquiera es necesario utilizar `@PathParam` o `@RestPath` si su parámetro tiene el mismo nombre que un parámetro de ruta, y del mismo modo puede omitir `@Context` para todos los tipos de contexto conocidos, lo que lo hace aún más sencillo:"

#. type: delimited block -
#: upstream/_posts/2020-12-08-resteasy-reactive.adoc:93
#, no-wrap
msgid ""
"@POST\n"
"@Path(\"params/{p}\")\n"
"public String params(String p, UriInfo info) {\n"
"   return \"params: p: \" + p + \", info: \" + info;\n"
"}\n"
msgstr ""

#. type: Labeled list
#: upstream/_posts/2020-12-08-resteasy-reactive.adoc:95
#, fuzzy, no-wrap
msgid "New optimal message body reader / writer"
msgstr "Nuevo lector/escritor de cuerpo de mensaje óptimo"

#. type: Plain text
#: upstream/_posts/2020-12-08-resteasy-reactive.adoc:98
#, fuzzy
msgid "If no filters and interceptors are invoked when an endpoint is serviced, you can use more efficient message body writers that directly write to vert.x and don’t require reflection and annotations:"
msgstr "Si no se invocan filtros e interceptores cuando se atiende un punto final, se pueden utilizar escritores de cuerpos de mensajes más eficientes que escriban directamente en vert.x y no requieran reflexión y anotaciones:"

#. type: delimited block -
#: upstream/_posts/2020-12-08-resteasy-reactive.adoc:104
#, no-wrap
msgid ""
"@Provider\n"
"public class ServerVertxBufferMessageBodyWriter extends VertxBufferMessageBodyWriter\n"
"       implements ServerMessageBodyWriter<Buffer> {\n"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2020-12-08-resteasy-reactive.adoc:109
#, no-wrap
msgid ""
"   @Override\n"
"   public boolean isWriteable(Class<?> type, ResteasyReactiveResourceInfo target, MediaType mediaType) {\n"
"       return true;\n"
"   }\n"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2020-12-08-resteasy-reactive.adoc:115
#, no-wrap
msgid ""
"   @Override\n"
"   public void writeResponse(Buffer buffer, ServerRequestContext context) {\n"
"       context.serverResponse().end(buffer.getBytes());\n"
"   }\n"
"}\n"
msgstr ""

#. type: Labeled list
#: upstream/_posts/2020-12-08-resteasy-reactive.adoc:118
#, fuzzy, no-wrap
msgid "Default content types"
msgstr "Tipos de contenido por defecto"

#. type: Plain text
#: upstream/_posts/2020-12-08-resteasy-reactive.adoc:121
#, fuzzy
msgid "Endpoints that return a String default to producing text/plain. We plan to do the same for JSON and other types."
msgstr "Los puntos finales que devuelven una cadena producen por defecto text/plain. Planeamos hacer lo mismo para JSON y otros tipos."

#. type: Labeled list
#: upstream/_posts/2020-12-08-resteasy-reactive.adoc:122
#, fuzzy, no-wrap
msgid "CDI Integration"
msgstr "Integración del CDI"

#. type: Plain text
#: upstream/_posts/2020-12-08-resteasy-reactive.adoc:125
#, fuzzy
msgid "All injections via JAX-RS’s @Context are delegated to Arc. This provides users with the benefits of build time injection that Arc brings to all other parts of Quarkus."
msgstr "Todas las inyecciones a través del @Context de JAX-RS se delegan en Arc. Esto proporciona a los usuarios los beneficios de la inyección en tiempo de construcción que Arc aporta a todas las demás partes de Quarkus."

#. type: Labeled list
#: upstream/_posts/2020-12-08-resteasy-reactive.adoc:126
#, fuzzy, no-wrap
msgid "Per-class Exception Mapper"
msgstr "Mapeador de excepciones por clase"

#. type: Plain text
#: upstream/_posts/2020-12-08-resteasy-reactive.adoc:129
#, fuzzy
msgid "In the JAX-RS specification there’s no way to handle exceptions differently for a specific JAX-RS Resource Class - all exception mapping is done in a global manner."
msgstr "En la especificación JAX-RS no hay forma de manejar las excepciones de manera diferente para una Clase de Recurso JAX-RS específica - todo el mapeo de excepciones se hace de manera global."

#. type: Plain text
#: upstream/_posts/2020-12-08-resteasy-reactive.adoc:131
#, fuzzy
msgid "In RESTEasy Reactive however you can simply do something like:"
msgstr "Sin embargo, en RESTEasy Reactive puedes hacer simplemente algo como:"

#. type: delimited block -
#: upstream/_posts/2020-12-08-resteasy-reactive.adoc:136
#, no-wrap
msgid ""
"@Path(\"first\")\n"
"public class FirstResource {\n"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2020-12-08-resteasy-reactive.adoc:149
#, no-wrap
msgid ""
"   @GET\n"
"   @Produces(\"text/plain\")\n"
"   public String throwsVariousExceptions(@RestQuery String name) {\n"
"       if (name.startsWith(\"IllegalArgument\")) {\n"
"           throw new IllegalArgumentException();\n"
"       } else if (name.startsWith(\"IllegalState\")) {\n"
"           throw new IllegalStateException(\"IllegalState\");\n"
"       } else if (name.startsWith(\"My\")) {\n"
"           throw new MyException();\n"
"       }\n"
"       throw new RuntimeException();\n"
"   }\n"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2020-12-08-resteasy-reactive.adoc:154
#, no-wrap
msgid ""
"   @ServerExceptionMapper({ IllegalStateException.class, IllegalArgumentException.class })\n"
"   public Response handleIllegal() {\n"
"       return Response.status(409).build();\n"
"   }\n"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2020-12-08-resteasy-reactive.adoc:161
#, no-wrap
msgid ""
"   @ServerExceptionMapper(MyException.class)\n"
"   public Response handleMy(SimpleResourceInfo simplifiedResourceInfo, MyException myException,\n"
"           ContainerRequestContext containerRequestContext, UriInfo uriInfo, HttpHeaders httpHeaders, Request request) {\n"
"       return Response.status(410).entity(uriInfo.getPath() + \"->\" + simplifiedResourceInfo.getMethodName()).build();\n"
"   }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2020-12-08-resteasy-reactive.adoc:164
#, fuzzy
msgid "in order to customize the exception handling of certain Resource Classes."
msgstr "para personalizar el manejo de excepciones de ciertas Clases de Recursos."

#. type: Plain text
#: upstream/_posts/2020-12-08-resteasy-reactive.adoc:167
#, fuzzy
msgid "Also note that `@ServerExceptionMapper` can be used to handle exceptions in a global manner, just as JAX-RS does with `ExceptionMapper`.  To do that, simply annotate a method that does not belong to a Resource class with `@ServerExceptionMapper`."
msgstr "También hay que tener en cuenta que `@ServerExceptionMapper` se puede utilizar para manejar excepciones de forma global, al igual que JAX-RS hace con `ExceptionMapper`. Para ello, basta con anotar un método que no pertenezca a una clase Resource con `@ServerExceptionMapper`."

#. type: Title ==
#: upstream/_posts/2020-12-08-resteasy-reactive.adoc:168
#, fuzzy, no-wrap
msgid "Do other extensions work with it?"
msgstr "¿Funcionan otras extensiones con él?"

#. type: Plain text
#: upstream/_posts/2020-12-08-resteasy-reactive.adoc:170
#, fuzzy
msgid "Absolutely!"
msgstr "Por supuesto."

#. type: Plain text
#: upstream/_posts/2020-12-08-resteasy-reactive.adoc:172
#, fuzzy
msgid "The extensions that integrate with the existing quarkus-resteasy extension also integrate with quarkus-resteasy-reactive extensions. So you can continue to use _CDI_, _Security_, _Metrics_, _JSON_, _Qute_, _Bean Validation_, _OpenAPI_ and enjoy a great out of the box and complete development experience."
msgstr "Las extensiones que se integran con la extensión quarkus-resteasy existente también se integran con las extensiones quarkus-resteasy-reactive. Así que puedes seguir utilizando _CDI_, _Seguridad_, _Métricas_, _JSON_, _Qute_, _Bean Validation_, _OpenAPI_ y disfrutar de una gran experiencia de desarrollo fuera de la caja y completa."

#. type: Title ==
#: upstream/_posts/2020-12-08-resteasy-reactive.adoc:173
#, fuzzy, no-wrap
msgid "How can I try it out?"
msgstr "¿Cómo puedo probarlo?"

#. type: Plain text
#: upstream/_posts/2020-12-08-resteasy-reactive.adoc:176
#, fuzzy
msgid "The project has landed in the Quarkus master branch, so if you’re eager to try it out, you'll have to build Quarkus from source by following https://github.com/quarkusio/quarkus/blob/master/CONTRIBUTING.md#building-master[this] and use the proper BOM and version following https://github.com/quarkusio/quarkus/blob/master/CONTRIBUTING.md#updating-the-version[this]."
msgstr "El proyecto ha aterrizado en la rama maestra de Quarkus, así que si estás ansioso por probarlo, tendrás que construir Quarkus desde el código fuente siguiendo  link:https://github.com/quarkusio/quarkus/blob/master/CONTRIBUTING.md#building-master[esto] y utilizar la lista de materiales y la versión adecuada siguiendo  link:https://github.com/quarkusio/quarkus/blob/master/CONTRIBUTING.md#updating-the-version[esto]."

#. type: Plain text
#: upstream/_posts/2020-12-08-resteasy-reactive.adoc:179
#, fuzzy
msgid "Furthermore, you can also use Maven Snapshots (as Quarkus snapshot builds are uploaded to Sonatype once a day), by specifying version `999-SNAPSHOT` as the Quarkus version and using `quarkus-bom` instead of `quarkus-universe-bom` as the BOM.  There are various ways to enable snapshot versions in Maven. https://stackoverflow.com/a/7717234/2504224[This] StackOverflow answer shows configuration that can be used either on a per project basis or globally."
msgstr "Además, también puedes utilizar Maven Snapshots (ya que las construcciones de Quarkus snapshot se suben a Sonatype una vez al día), especificando la versión `999-SNAPSHOT` como la versión de Quarkus y utilizando `quarkus-bom` en lugar de `quarkus-universe-bom` como la lista de materiales. Hay varias formas de habilitar las versiones instantáneas en Maven.  link:https://stackoverflow.com/a/7717234/2504224[Esta] respuesta de StackOverflow muestra la configuración que se puede utilizar tanto por proyecto como globalmente."

#. type: Plain text
#: upstream/_posts/2020-12-08-resteasy-reactive.adoc:181
#, fuzzy
msgid "The available RESTEasy Reactive extensions are:"
msgstr "Las extensiones disponibles de RESTEasy Reactive son:"

#. type: Plain text
#: upstream/_posts/2020-12-08-resteasy-reactive.adoc:183
#, fuzzy
msgid "quarkus-resteasy-reactive"
msgstr "quarkus-resteasy-reactive"

#. type: Plain text
#: upstream/_posts/2020-12-08-resteasy-reactive.adoc:184
#, fuzzy
msgid "quarkus-resteasy-reactive-jackson"
msgstr "quarkus-resteasy-reactive-jackson"

#. type: Plain text
#: upstream/_posts/2020-12-08-resteasy-reactive.adoc:185
#, fuzzy
msgid "quarkus-resteasy-reactive-jsonb"
msgstr "quarkus-resteasy-reactive-jsonb"

#. type: Plain text
#: upstream/_posts/2020-12-08-resteasy-reactive.adoc:186
#, fuzzy
msgid "quarkus-resteasy-reactive-qute"
msgstr "quarkus-resteasy-reactive-qute"

#. type: Plain text
#: upstream/_posts/2020-12-08-resteasy-reactive.adoc:188
#, fuzzy
msgid "These extensions are the equivalent to the existing _quarkus-resteasy_* extensions, so simply switching from _quarkus-resteasy-jackson_ to _quarkus-resteasy-reactive-jackson_ in your application should allow you to try RESTEasy Reactive with Jackson integration."
msgstr "Estas extensiones son el equivalente a las extensiones existentes de _quarkus-resteasy*_, por lo que el simple hecho de cambiar de _quarkus-resteasy-jackson_ a _quarkus-resteasy-reactive-jackson_ en su aplicación debería permitirle probar RESTEasy Reactive con la integración de Jackson."

#. type: Plain text
#: upstream/_posts/2020-12-08-resteasy-reactive.adoc:190
#, fuzzy
msgid "Furthermore, the _quarkus-jaxrs-client_ extension can be used if you need to use the JAX-RS client (this is not the declarative MicroProfile REST Client, but the programmatic client specified by the JAX-RS spec)."
msgstr "Además, se puede utilizar la extensión _quarkus-jaxrs-client_ si se necesita utilizar el cliente JAX-RS (no es el cliente REST declarativo de MicroProfile, sino el cliente programático especificado por la especificación JAX-RS)."

#. type: Title ==
#: upstream/_posts/2020-12-08-resteasy-reactive.adoc:191
#, fuzzy, no-wrap
msgid "What should I be careful of?"
msgstr "¿De qué debo tener cuidado?"

#. type: Plain text
#: upstream/_posts/2020-12-08-resteasy-reactive.adoc:195
#, fuzzy
msgid "The first thing to note is that for the time being this set of extensions is currently considered experimental. Although the project passes almost the entirety of the JAX-RS TCK, it’s just the first release, so keep in mind that it might have more bugs than a typical battle hardened library, while some of the new APIs and SPIs might break.  Despite this being a first release, we do envision this work becoming the default REST layer for Quarkus in the near future."
msgstr "Lo primero que hay que tener en cuenta es que por el momento este conjunto de extensiones se considera experimental. Aunque el proyecto pasa casi la totalidad del TCK de JAX-RS, es sólo la primera versión, así que ten en cuenta que podría tener más errores que una biblioteca típica de batalla, mientras que algunas de las nuevas APIs y SPIs podrían romperse. A pesar de ser una primera versión, prevemos que este trabajo se convierta en la capa REST por defecto de Quarkus en un futuro próximo."

#. type: Plain text
#: upstream/_posts/2020-12-08-resteasy-reactive.adoc:198
#, fuzzy
msgid "As mentioned in the new features section, requests are served on the event-loop threads by default. This ensures maximum throughput, but also means that no blocking work should be performed on these threads. If you use Blocking IO (for example by accessing a database with Hibernate Panache), be sure to use the `@Blocking` annotation on either the method or the class.  This will ensure that the request will be served on a worker thread. It goes without saying that we are also very interested in hearing your feedback about this default."
msgstr "Como se mencionó en la sección de nuevas características, las peticiones se sirven en los hilos del bucle de eventos por defecto. Esto asegura el máximo rendimiento, pero también significa que no se debe realizar ningún trabajo de bloqueo en estos hilos. Si utiliza IO bloqueante (por ejemplo, accediendo a una base de datos con Hibernate Panache), asegúrese de utilizar la anotación `@Blocking` en el método o en la clase. Esto asegurará que la petición se sirva en un hilo de trabajo. No hace falta decir que también estamos muy interesados en escuchar sus comentarios sobre este defecto."

#. type: Plain text
#: upstream/_posts/2020-12-08-resteasy-reactive.adoc:201
#, fuzzy
msgid "There are no docs yet. Docs will be added before the formal 1.11 release and will be progressively enhanced.  This email should contain all the information you need to get started, but should you run into any trouble, we are available to help on any of the usual channels (Zulip chat, mailing list, GitHub Issues, StackOverflow)."
msgstr "Todavía no hay documentación. Los documentos se añadirán antes del lanzamiento formal de la versión 1.11 y se irán mejorando progresivamente. Este correo debería contener toda la información que necesitas para empezar, pero si te encuentras con algún problema, estamos disponibles para ayudarte en cualquiera de los canales habituales (chat de Zulip, lista de correo, GitHub Issues, StackOverflow)."

#. type: Title ==
#: upstream/_posts/2020-12-08-resteasy-reactive.adoc:202
#, fuzzy, no-wrap
msgid "What JAX-RS features are missing?"
msgstr "¿Qué características de JAX-RS faltan?"

#. type: Plain text
#: upstream/_posts/2020-12-08-resteasy-reactive.adoc:206
#, fuzzy
msgid "We decided to focus on what most users need from a modern REST layer instead of implementing every single feature required by the JAX-RS TCK.  So in that vein, there is no XML support in RESTEasy Reactive, while various arcane features of the spec are also not supported (like _javax.activation.DataSource_, _javax.annotation.ManagedBean_, _javax.ws.rs.core.StreamingOutput_)."
msgstr "Decidimos centrarnos en lo que la mayoría de los usuarios necesitan de una capa REST moderna en lugar de implementar todas las características requeridas por el JAX-RS TCK. Así que en ese sentido, no hay soporte XML en RESTEasy Reactive, mientras que varias características arcanas de la especificación tampoco son compatibles (como _javax.activation.DataSource_, _javax.annotation.ManagedBean_, _javax.ws.rs.core.StreamingOutput_)."

#. type: Plain text
#: upstream/_posts/2020-12-08-resteasy-reactive.adoc:208
#, fuzzy
msgid "Furthermore, worth noting is that the first release will not contain an implementation of the MicroProfile REST Client based on the new JAX-RS Client (for which there is a dedicated extension). This will most likely change in the near future."
msgstr "Además, cabe destacar que la primera versión no contendrá una implementación del cliente REST de MicroProfile basada en el nuevo cliente JAX-RS (para el que existe una extensión dedicada). Es muy probable que esto cambie en un futuro próximo."

#. type: Title ==
#: upstream/_posts/2020-12-08-resteasy-reactive.adoc:210
#, fuzzy, no-wrap
msgid "What's next?"
msgstr "¿Qué es lo siguiente?"

#. type: Plain text
#: upstream/_posts/2020-12-08-resteasy-reactive.adoc:212
#, fuzzy
msgid "Although the new extensions will be available with the regular _1.11_ release, we are considering doing a `1.11.0.Alpha1` release to make it as easy as possible for you to try out the new extensions and provide early feedback."
msgstr "Aunque las nuevas extensiones estarán disponibles con el lanzamiento regular de _la versión 1.11_, estamos considerando la posibilidad de hacer un lanzamiento en `1.11.0.Alpha1` para que sea lo más fácil posible para usted probar las nuevas extensiones y proporcionar comentarios tempranos."

#. type: Plain text
#: upstream/_posts/2020-12-08-resteasy-reactive.adoc:213
#, fuzzy
msgid "We are very much looking forward to hearing your thoughts about and experience using RESTEasy Reactive in Quarkus and plan to put it to good use to further improve the project."
msgstr "Estamos deseando escuchar tu opinión y experiencia en el uso de RESTEasy Reactive en Quarkus y planeamos darle un buen uso para seguir mejorando el proyecto."

#, fuzzy
#~ msgid "---\n"
#~ msgstr "---\n"

#, fuzzy
#~ msgid ""
#~ "layout: post\n"
#~ "title: Announcing RESTEasy Reactive\n"
#~ "date: 2020-12-07\n"
#~ "tags: reactive web rest resteasy\n"
#~ "synopsis: RESTEasy Reactive is ready to be tested\n"
#~ "author: geoand\n"
#~ "---\n"
#~ msgstr ""
#~ "layout: post\n"
#~ "title: Anuncio de RESTEasy Reactive\n"
#~ "date: 2020-12-07\n"
#~ "tags: reactive web rest resteasy\n"
#~ "synopsis: RESTEasy Reactive está listo para ser probado\n"
#~ "author: geoand\n"
#~ "---\n"
