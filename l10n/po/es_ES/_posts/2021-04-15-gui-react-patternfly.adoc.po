# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2022-05-02 07:14+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: YAML Front Matter: author
#: upstream/_posts/2021-04-15-gui-react-patternfly.adoc:1
#, fuzzy, no-wrap
msgid "dbrintzi"
msgstr "dbrintzi"

#. type: YAML Front Matter: date
#: upstream/_posts/2021-04-15-gui-react-patternfly.adoc:1
#, fuzzy, no-wrap
msgid "2021-04-15"
msgstr "2021-04-15"

#. type: YAML Front Matter: layout
#: upstream/_posts/2021-04-15-gui-react-patternfly.adoc:1
#, fuzzy, no-wrap
msgid "post"
msgstr "Correo electrónico:"

#. type: YAML Front Matter: synopsis
#: upstream/_posts/2021-04-15-gui-react-patternfly.adoc:1
#, fuzzy, no-wrap
msgid "Find out how to easily integrate the React and Patternfly GUI frameworks into your projects for development as well as production"
msgstr ""
"layout: post\n"
"title: Añadir Eyecandy a su aplicación Quarkus con React y Patternfly\n"
"date: 2021-04-15\n"
"tags: web gui react patternfly\n"
"synopsis: Descubra cómo integrar fácilmente los frameworks de interfaz gráfica de usuario de React y Patternfly en sus proyectos tanto de desarrollo como de producción\n"
"author: dbrintzi\n"
"---\n"

#. type: YAML Front Matter: tags
#: upstream/_posts/2021-04-15-gui-react-patternfly.adoc:1
#, fuzzy, no-wrap
msgid "web gui react patternfly"
msgstr "web gui react patternfly"

#. type: YAML Front Matter: title
#: upstream/_posts/2021-04-15-gui-react-patternfly.adoc:1
#, fuzzy, no-wrap
msgid "Adding Eyecandy to your Quarkus App with React and Patternfly"
msgstr "Añadir Eyecandy a su aplicación Quarkus con React y Patternfly"

#. type: Plain text
#: upstream/_posts/2021-04-15-gui-react-patternfly.adoc:11
#, fuzzy
msgid "A common pattern for containerized and distributed Quarkus applications is to serve as an efficient and scalable backend for a separate frontend application.  In the Kubernetes world a frontend application could be a pure web layer pod such as React, Angular or Vue.js, delegating all REST calls to these Quarkus service layer pods."
msgstr "Un patrón común para las aplicaciones de Quarkus en contenedores y distribuidas es servir como un backend eficiente y escalable para una aplicación frontend separada. En el mundo de Kubernetes, una aplicación frontend podría ser un pod de capa web pura como React, Angular o Vue.js, delegando todas las llamadas REST a estos pods de capa de servicio de Quarkus."

#. type: Target for macro image
#: upstream/_posts/2021-04-15-gui-react-patternfly.adoc:13
#, no-wrap
msgid "/assets/images/posts/gui-react-patternfly/frontend_pod_pattern.png"
msgstr ""

#. type: Plain text
#: upstream/_posts/2021-04-15-gui-react-patternfly.adoc:16
#, fuzzy
msgid "While this approach has the benefit of independent container scaling as well as an independent lifecycle it may sometimes be over engineered for small applications."
msgstr "Aunque este enfoque tiene la ventaja de escalar los contenedores de forma independiente, así como un ciclo de vida independiente, a veces puede estar sobredimensionado para aplicaciones pequeñas."

#. type: Plain text
#: upstream/_posts/2021-04-15-gui-react-patternfly.adoc:18
#, fuzzy
msgid "Perhaps you just want to create a small self-contained CRUD application without compromising in modern web GUI technologies? We have seen how to achieve this with https://quarkus.io/blog/quarkus-and-web-ui-development-mode/[Angular] but what about React which at least according to GitHub stars has surpassed Angular in terms of popularity? It is all about choice and I will show you how you can not only integrate React but also use a web component framework called https://www.patternfly.org/[Patternfly].  Patternfly is a collection of patterns, components and styles for creating rich, consistent and interactive GUIs."
msgstr "¿Quizás sólo quieres crear una pequeña aplicación CRUD autocontenida sin comprometerte en las modernas tecnologías web GUI? Hemos visto cómo lograr esto con  link:https://quarkus.io/blog/quarkus-and-web-ui-development-mode/[Angular] pero ¿qué pasa con React que al menos según las estrellas de GitHub ha superado a Angular en términos de popularidad? Todo es cuestión de elegir y te mostraré cómo puedes no sólo integrar React sino también utilizar un framework de componentes web llamado  link:https://www.patternfly.org/[Patternfly]. Patternfly es una colección de patrones, componentes y estilos para crear GUIs ricas, consistentes e interactivas."

#. type: Plain text
#: upstream/_posts/2021-04-15-gui-react-patternfly.adoc:20
#, fuzzy
msgid "Let's create a Quarkus App with a REST endpoint that serves atomic particle objects to be displayed in a React/Patternfly table.  The sourcecode for the final application can be found https://github.com/nexus-Six/quarkus-gui-react-patternfly[here]."
msgstr "Vamos a crear una aplicación Quarkus con un endpoint REST que sirva objetos de partículas atómicas para ser mostrados en una tabla React/Patternfly. El código fuente de la aplicación final se puede encontrar  link:https://github.com/nexus-Six/quarkus-gui-react-patternfly[aquí]."

#. type: Title ==
#: upstream/_posts/2021-04-15-gui-react-patternfly.adoc:21
#, fuzzy, no-wrap
msgid "Step 1 - Generate the Quarkus Project"
msgstr "Paso 1 - Generar el proyecto Quarkus"

#. type: Plain text
#: upstream/_posts/2021-04-15-gui-react-patternfly.adoc:24
#, fuzzy
msgid "To generate a starter project go to https://code.quarkus.io. Enter 'io.quarkus' as Maven Group and 'quarkus-react' as Artifact.  In the list of extensions choose *RESTEasy JAX-RS* and *RESTEasy JSON-B*. Then generate and download the project, unzip it on your local machine and open the project folder in your favorite IDE."
msgstr "Para generar un proyecto inicial ve a  https://code.quarkus.io  Introduce 'io.quarkus' como Grupo Maven y 'quarkus-react' como Artefacto. En la lista de extensiones elige RESTEasy *JAX-RS* y *RESTEasy JSON-B*. A continuación, genera y descarga el proyecto, descomprímelo en tu máquina local y abre la carpeta del proyecto en tu IDE favorito."

#. type: Title ==
#: upstream/_posts/2021-04-15-gui-react-patternfly.adoc:25
#, fuzzy, no-wrap
msgid "Step 2 - Add the Quarkus REST Endpoint"
msgstr "Paso 2 - Añadir el punto final REST de Quarkus"

#. type: Plain text
#: upstream/_posts/2021-04-15-gui-react-patternfly.adoc:28
#, fuzzy
msgid "In the Java package folder /src/main/java/io/quarkus where the sample *GreetingResource.java* resides, create a new bean class called *Particle.java* with the following content:"
msgstr "En la carpeta del paquete Java /src/main/java/io/quarkus donde reside el *GreetingResource.java* de ejemplo, cree una nueva clase bean llamada *Particle.java* con el siguiente contenido:"

#. type: delimited block -
#: upstream/_posts/2021-04-15-gui-react-patternfly.adoc:32
#: upstream/_posts/2021-04-15-gui-react-patternfly.adoc:55
#, no-wrap
msgid "package io.quarkus;\n"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2021-04-15-gui-react-patternfly.adoc:34
#, no-wrap
msgid "public class Particle {\n"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2021-04-15-gui-react-patternfly.adoc:36
#, no-wrap
msgid "    private String name;\n"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2021-04-15-gui-react-patternfly.adoc:41
#, no-wrap
msgid ""
"    public void setName(String name)\n"
"    {\n"
"        this.name = name;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2021-04-15-gui-react-patternfly.adoc:46
#, no-wrap
msgid ""
"    public String getName()\n"
"    {\n"
"        return this.name;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2021-04-15-gui-react-patternfly.adoc:48
#, no-wrap
msgid "}\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2021-04-15-gui-react-patternfly.adoc:51
#, fuzzy
msgid "Now create a new REST resource class called *ParticleResource.java* where we return some test particles (neglecting any atomic physics implications here)."
msgstr "Ahora creamos una nueva clase de recurso REST llamada *ParticleResource.java* donde devolvemos algunas partículas de prueba (descuidando aquí cualquier implicación de la física atómica)."

#. type: delimited block -
#: upstream/_posts/2021-04-15-gui-react-patternfly.adoc:59
#, no-wrap
msgid ""
"import java.util.Collections;\n"
"import java.util.LinkedHashMap;\n"
"import java.util.Set;\n"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2021-04-15-gui-react-patternfly.adoc:62
#, no-wrap
msgid ""
"import javax.ws.rs.GET;\n"
"import javax.ws.rs.Path;\n"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2021-04-15-gui-react-patternfly.adoc:65
#, no-wrap
msgid ""
"@Path(\"/particles\")\n"
"public class ParticleResource {\n"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2021-04-15-gui-react-patternfly.adoc:68
#, no-wrap
msgid ""
"    @GET\n"
"    public Set<Particle> getUsers() {\n"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2021-04-15-gui-react-patternfly.adoc:70
#, no-wrap
msgid "        Set <Particle> particleList = Collections.newSetFromMap(Collections.synchronizedMap(new LinkedHashMap<>()));\n"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2021-04-15-gui-react-patternfly.adoc:74
#, no-wrap
msgid ""
"        Particle particle = new Particle();\n"
"        particle.setName(\"Graviton\");\n"
"        particleList.add(particle);\n"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2021-04-15-gui-react-patternfly.adoc:81
#, no-wrap
msgid ""
"        Particle particle2 = new Particle();\n"
"        particle2.setName(\"Pentaquark\");\n"
"        particleList.add(particle2);        \n"
"        return particleList;\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2021-04-15-gui-react-patternfly.adoc:84
#, fuzzy
msgid "Test if everything works by starting up Quarkus in dev mode:"
msgstr "Prueba si todo funciona iniciando Quarkus en modo dev:"

#. type: delimited block -
#: upstream/_posts/2021-04-15-gui-react-patternfly.adoc:88
#, no-wrap
msgid "$ mvn quarkus:dev\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2021-04-15-gui-react-patternfly.adoc:91
#, fuzzy
msgid "In a new terminal call the endpoint to see your particle response:"
msgstr "En un nuevo terminal llame al punto final para ver la respuesta de su partícula:"

#. type: delimited block -
#: upstream/_posts/2021-04-15-gui-react-patternfly.adoc:95
#, no-wrap
msgid "$ curl http://localhost:8080/particles\n"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2021-04-15-gui-react-patternfly.adoc:97
#, no-wrap
msgid "[{\"name\":\"Graviton\"},{\"name\":\"Pentaquark\"}]                                              \n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2021-04-15-gui-react-patternfly.adoc:100
#, fuzzy
msgid "Our Quarkus data layer is now ready, so let's create the React GUI next."
msgstr "Nuestra capa de datos de Quarkus ya está lista, así que vamos a crear la GUI de React a continuación."

#. type: Title ==
#: upstream/_posts/2021-04-15-gui-react-patternfly.adoc:101
#, fuzzy, no-wrap
msgid "Step 3 - Generate the React Project"
msgstr "Paso 3 - Generar el proyecto React"

#. type: Plain text
#: upstream/_posts/2021-04-15-gui-react-patternfly.adoc:104
#, fuzzy
msgid "Make sure you have installed *Node.js* and *npm* on your system.  Refer to the https://nodejs.org/en/download/[official documentation] for more information if required."
msgstr "Asegúrate de haber instalado *Node.js* y *npm* en tu sistema. Consulte la  link:https://nodejs.org/en/download/[documentación] oficial para obtener más información si es necesario."

#. type: Plain text
#: upstream/_posts/2021-04-15-gui-react-patternfly.adoc:106
#, fuzzy
msgid "Create a new folder in your project /src/main/*webapp* which will be the base folder for your React project. Now open another terminal in this folder, run the React project initializer and then add the Patternfly node module:"
msgstr "Crea una nueva carpeta en tu proyecto /src/main/webapp que será la carpeta base de tu proyecto React. Ahora abre otra terminal en esta carpeta, ejecuta el inicializador del proyecto React y luego añade el módulo de nodo Patternfly:"

#. type: delimited block -
#: upstream/_posts/2021-04-15-gui-react-patternfly.adoc:111
#, no-wrap
msgid ""
"$ npx create-react-app .\n"
"$ npm install @patternfly/patternfly --save\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2021-04-15-gui-react-patternfly.adoc:114
#, fuzzy
msgid "When starting the React app it will run on port 3000 by default. When we then try to access our Quarkus endpoint on port 8080 the browser will prevent this due to https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS[CORS security policies].  In production this will not matter as the compiled static React app will be served from Quarkus over port 8080 as well but during development this is an issue."
msgstr "Al iniciar la aplicación React se ejecutará en el puerto 3000 por defecto. Cuando intentamos acceder a nuestro endpoint de Quarkus en el puerto 8080 el navegador lo impedirá debido a  link:https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS[las políticas de seguridad CORS]. En producción esto no importará ya que la aplicación React estática compilada será servida desde Quarkus a través del puerto 8080 también, pero durante el desarrollo esto es un problema."

#. type: Plain text
#: upstream/_posts/2021-04-15-gui-react-patternfly.adoc:116
#, fuzzy
msgid "Fortunately React has a neat little feature called *proxy* which forwards all requests for unknown endpoints to another URL. In the */webapp* folder open the file *package.json* and add the proxy line forwarding everything to our Quarkus port on 8080:"
msgstr "Afortunadamente React tiene una pequeña característica llamada *proxy* que reenvía todas las solicitudes de puntos finales desconocidos a otra URL. En la carpeta */webapp* abre el archivo *package.json* y añade la línea proxy reenviando todo a nuestro puerto Quarkus en 8080:"

#. type: delimited block -
#: upstream/_posts/2021-04-15-gui-react-patternfly.adoc:158
#, no-wrap
msgid ""
"{\n"
"  \"name\": \"webapp\",\n"
"  \"version\": \"0.1.0\",\n"
"  \"private\": true,\n"
"  \"dependencies\": {\n"
"    \"@testing-library/jest-dom\": \"^5.11.4\",\n"
"    \"@testing-library/react\": \"^11.1.0\",\n"
"    \"@testing-library/user-event\": \"^12.1.10\",\n"
"    \"react\": \"^17.0.1\",\n"
"    \"react-dom\": \"^17.0.1\",\n"
"    \"react-scripts\": \"4.0.3\",\n"
"    \"web-vitals\": \"^1.0.1\"\n"
"  },\n"
"  \"scripts\": {\n"
"    \"start\": \"react-scripts start\",\n"
"    \"build\": \"react-scripts build\",\n"
"    \"test\": \"react-scripts test\",\n"
"    \"eject\": \"react-scripts eject\"\n"
"  },\n"
"  \"proxy\": \"http://localhost:8080/\",\n"
"  \"eslintConfig\": {\n"
"    \"extends\": [\n"
"      \"react-app\",\n"
"      \"react-app/jest\"\n"
"    ]\n"
"  },\n"
"  \"browserslist\": {\n"
"    \"production\": [\n"
"      \">0.2%\",\n"
"      \"not dead\",\n"
"      \"not op_mini all\"\n"
"    ],\n"
"    \"development\": [\n"
"      \"last 1 chrome version\",\n"
"      \"last 1 firefox version\",\n"
"      \"last 1 safari version\"\n"
"    ]\n"
"  }\n"
"}\n"
msgstr ""

#. type: Title ==
#: upstream/_posts/2021-04-15-gui-react-patternfly.adoc:161
#, fuzzy, no-wrap
msgid "Step 4 - Create a Patternfly Table Component to Populate with our Data"
msgstr "Paso 4 - Crear un componente de tabla Patternfly para rellenar con nuestros datos"

#. type: Plain text
#: upstream/_posts/2021-04-15-gui-react-patternfly.adoc:164
#, fuzzy
msgid "Import the Patternfly CSS in the React project in */webapp/src/index.js*"
msgstr "Importar el CSS de Patternfly en el proyecto React en */webapp/src/index.js*"

#. type: delimited block -
#: upstream/_posts/2021-04-15-gui-react-patternfly.adoc:172
#, no-wrap
msgid ""
"...\n"
"import './index.css';\n"
"import '@patternfly/patternfly/patternfly.css';\n"
"import App from './App';\n"
"...\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2021-04-15-gui-react-patternfly.adoc:175
#, fuzzy
msgid "In /webapp/src create a new folder called *components*, inside create a file called *particles.js* and generate a Patternfly table by looping over a list of particle objects:"
msgstr "En /webapp/src crea una nueva carpeta llamada *components*, dentro crea un archivo llamado *particles.js* y genera una tabla Patternfly haciendo un bucle sobre una lista de objetos partícula:"

#. type: delimited block -
#: upstream/_posts/2021-04-15-gui-react-patternfly.adoc:179
#, no-wrap
msgid "import React from 'react'\n"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2021-04-15-gui-react-patternfly.adoc:200
#, no-wrap
msgid ""
"const Particles = ({ particles }) => {\n"
"    return (\n"
"        <div>\n"
"            <center><h1>Particles List</h1></center>\n"
"            <table class=\"pf-c-table pf-m-grid-md\" role=\"grid\" aria-label=\"Supersonic Subatomic Particles\" id=\"table-basic\">\n"
"                <caption>Supersonic Subatomic Particles</caption>\n"
"                <thead>\n"
"                    <tr role=\"row\">\n"
"                        <th role=\"columnheader\" scope=\"col\">Name</th>\n"
"                    </tr>\n"
"                </thead>\n"
"                {particles.map((particle) => (\n"
"                    <tbody role=\"rowgroup\">\n"
"                        <tr role=\"row\">\n"
"                            <td role=\"cell\" data-label=\"Particle name\">{particle.name}</td>\n"
"                        </tr>\n"
"                    </tbody>\n"
"                ))}\n"
"            </table>\n"
"        </div>\n"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2021-04-15-gui-react-patternfly.adoc:203
#, no-wrap
msgid ""
"    )\n"
"};\n"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2021-04-15-gui-react-patternfly.adoc:205
#, no-wrap
msgid "export default Particles\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2021-04-15-gui-react-patternfly.adoc:208
#, fuzzy
msgid "Next adjust */webapp/src/App.js* to call our Quarkus service endpoint and render our particle component with the response data:"
msgstr "A continuación ajustamos */webapp/src/App.js* para llamar a nuestro endpoint del servicio Quarkus y renderizar nuestro componente de partículas con los datos de respuesta:"

#. type: delimited block -
#: upstream/_posts/2021-04-15-gui-react-patternfly.adoc:213
#, no-wrap
msgid ""
"import React, {Component} from 'react';\n"
"import Particles from './components/particles'\n"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2021-04-15-gui-react-patternfly.adoc:218
#, no-wrap
msgid ""
"class App extends Component {\n"
"  state = {\n"
"    particles: []\n"
"  }\n"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2021-04-15-gui-react-patternfly.adoc:227
#, no-wrap
msgid ""
"  componentDidMount() {\n"
"    fetch('/particles')\n"
"    .then(res => res.json())\n"
"    .then((data) => {\n"
"      this.setState({ particles: data })\n"
"    })\n"
"    .catch(console.log)\n"
"  }\n"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2021-04-15-gui-react-patternfly.adoc:234
#, no-wrap
msgid ""
"  render () {\n"
"    return (     \n"
"      <Particles particles={this.state.particles} />         \n"
"    );\n"
"  }\n"
"}\n"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2021-04-15-gui-react-patternfly.adoc:236
#, no-wrap
msgid "export default App;\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2021-04-15-gui-react-patternfly.adoc:239
#, fuzzy
msgid "We are now ready to test our GUI in React development mode."
msgstr "Ahora estamos listos para probar nuestra GUI en el modo de desarrollo de React."

#. type: Plain text
#: upstream/_posts/2021-04-15-gui-react-patternfly.adoc:241
#, fuzzy
msgid "Make sure Quarkus is still running in another terminal."
msgstr "Asegúrate de que Quarkus sigue ejecutándose en otra terminal."

#. type: Plain text
#: upstream/_posts/2021-04-15-gui-react-patternfly.adoc:243
#, fuzzy
msgid "In the */webapp* folder execute :"
msgstr "En la carpeta */webapp* ejecute :"

#. type: delimited block -
#: upstream/_posts/2021-04-15-gui-react-patternfly.adoc:247
#, no-wrap
msgid "$ npm start\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2021-04-15-gui-react-patternfly.adoc:250
#, fuzzy
msgid "A browser will open to http://localhost:3000.  If not navigate to that URL.  You should see our table dynamically populated from your Quarkus particle backend.  In the developer tools of your browser you will see that the data is actually retrieved from http://localhost:3000/particles"
msgstr "Se abrirá un navegador a  http://localhost:3000  Si no se navega a esa URL. Deberías ver nuestra tabla poblada dinámicamente desde tu backend de partículas de Quarkus. En las herramientas de desarrollo de tu navegador verás que los datos se recuperan realmente de  http://localhost:3000/particles"

#. type: Target for macro image
#: upstream/_posts/2021-04-15-gui-react-patternfly.adoc:251
#, no-wrap
msgid "/assets/images/posts/gui-react-patternfly/patternfly_table.png"
msgstr ""

#. type: Plain text
#: upstream/_posts/2021-04-15-gui-react-patternfly.adoc:254
#, fuzzy
msgid "We are running in a double developer mode now. Any changes made to either your Java or Javascript code will be applied immediately.  Isn't that developer bliss?"
msgstr "Ahora estamos funcionando en modo doblemente desarrollador. Cualquier cambio realizado en el código Java o Javascript se aplicará inmediatamente. ¿No es eso la felicidad del desarrollador?"

#. type: Plain text
#: upstream/_posts/2021-04-15-gui-react-patternfly.adoc:256
#, fuzzy
msgid "But what about containerized deployment you ask? Well, once your shiny new GUI app is ready for primetime there are some last adjustments that we need to build runnable jars and images."
msgstr "¿Pero qué pasa con el despliegue en contenedores? Bueno, una vez que tu nueva y brillante aplicación GUI está lista para el primetime hay algunos últimos ajustes que necesitamos para construir jars e imágenes ejecutables."

#. type: Title ==
#: upstream/_posts/2021-04-15-gui-react-patternfly.adoc:257
#, fuzzy, no-wrap
msgid "Step 5 - Prepare our Project for Production Build"
msgstr "Paso 5 - Preparar nuestro proyecto para la construcción de producción"

#. type: Plain text
#: upstream/_posts/2021-04-15-gui-react-patternfly.adoc:260
#, fuzzy
msgid "In */webapp/package.json* add a prod build phase:"
msgstr "En */webapp/package.json* añade una fase de construcción prod:"

#. type: delimited block -
#: upstream/_posts/2021-04-15-gui-react-patternfly.adoc:269
#, no-wrap
msgid ""
"...\n"
" \"eject\": \"react-scripts eject\",\n"
" \"prod\": \"react-scripts build --dest && rsync -a build/* ../resources/META-INF/resources\"\n"
"  },\n"
"  \"proxy\": \"http://localhost:8080/\",\n"
"...\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2021-04-15-gui-react-patternfly.adoc:271
#, fuzzy
msgid "This will do a production build of the static React assets and copy them over into the default Quarkus directory for static files."
msgstr "Esto hará una construcción de producción de los activos estáticos de React y los copiará en el directorio por defecto de Quarkus para los archivos estáticos."

#. type: Plain text
#: upstream/_posts/2021-04-15-gui-react-patternfly.adoc:273
#, fuzzy
msgid "The rsync command is specific for Linux.  For other operating systems please substitute with an equivalent command."
msgstr "El comando rsync es específico para Linux. Para otros sistemas operativos, sustitúyalo por un comando equivalente."

#. type: Plain text
#: upstream/_posts/2021-04-15-gui-react-patternfly.adoc:275
#, fuzzy
msgid "For the last step we will add the excellent https://github.com/eirslett/frontend-maven-plugin[frontend-maven-plugin] to our pom.xml that will trigger these React build phases from a normal maven build. Adjust the npm and node versions to match your locally installed ones. The maven install phase would actually install these two packages which can be handy for a CI/CD build or when starting with this project."
msgstr "Para el último paso añadiremos el excelente  link:https://github.com/eirslett/frontend-maven-plugin[frontend-maven-plugin] a nuestro pom.xml que activará estas fases de construcción de React desde una construcción normal de maven. Ajusta las versiones de npm y node para que coincidan con las que tienes instaladas localmente. La fase de instalación de maven instalará realmente estos dos paquetes, lo que puede ser útil para una construcción CI/CD o cuando se empieza con este proyecto."

#. type: delimited block -
#: upstream/_posts/2021-04-15-gui-react-patternfly.adoc:320
#, no-wrap
msgid ""
"<build>\n"
"...\n"
" <plugin>\n"
"  <groupId>com.github.eirslett</groupId>\n"
"  <artifactId>frontend-maven-plugin</artifactId>\n"
"  <version>1.11.2</version>\n"
"  <configuration>\n"
"    <workingDirectory>${project.basedir}/src/main/webapp</workingDirectory>\n"
"    <installDirectory>target</installDirectory>\n"
"  </configuration>\n"
"  <executions>\n"
"    <execution>\n"
"      <id>install node and npm</id>\n"
"      <goals>\n"
"        <goal>install-node-and-npm</goal>\n"
"      </goals>\n"
"      <configuration>\n"
"        <nodeVersion>v14.15.4</nodeVersion>\n"
"        <npmVersion>6.14.10</npmVersion>\n"
"      </configuration>\n"
"    </execution>\n"
"    <execution>\n"
"      <id>npm install</id>\n"
"      <goals>\n"
"        <goal>npm</goal>\n"
"      </goals>\n"
"      <configuration>\n"
"        <arguments>install</arguments>\n"
"      </configuration>\n"
"    </execution>\n"
"    <execution>\n"
"      <id>npm run build</id>\n"
"      <goals>\n"
"        <goal>npm</goal>\n"
"      </goals>\n"
"      <configuration>\n"
"        <arguments>run prod</arguments>\n"
"      </configuration>\n"
"    </execution>\n"
"  </executions>\n"
"</plugin>\n"
"</build>\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2021-04-15-gui-react-patternfly.adoc:323
#, fuzzy
msgid "Now let's build our runnable jar:"
msgstr "Ahora vamos a construir nuestro tarro ejecutable:"

#. type: delimited block -
#: upstream/_posts/2021-04-15-gui-react-patternfly.adoc:326
#, no-wrap
msgid "$ mvn clean package\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2021-04-15-gui-react-patternfly.adoc:328
#, fuzzy
msgid "Stop all other running environments to free up the ports and run:"
msgstr "Detenga todos los demás entornos en ejecución para liberar los puertos y ejecútelos:"

#. type: delimited block -
#: upstream/_posts/2021-04-15-gui-react-patternfly.adoc:332
#, no-wrap
msgid "$ java -jar target/quarkus-app/quarkus-run.jar \n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2021-04-15-gui-react-patternfly.adoc:335
#, fuzzy
msgid "Open your browser to http://localhost:8080 to see you table again, now running from a single optimized Quarkus jar."
msgstr "Abre tu navegador a  http://localhost:8080  para ver tu tabla de nuevo, ahora ejecutada desde un único jar optimizado de Quarkus."

#. type: Title ==
#: upstream/_posts/2021-04-15-gui-react-patternfly.adoc:336
#, fuzzy, no-wrap
msgid "Take Away"
msgstr "Para llevar"

#. type: Plain text
#: upstream/_posts/2021-04-15-gui-react-patternfly.adoc:339
#, fuzzy
msgid "There you go. With just a few easy steps you can use the power of React and Patternfly to add slick looking interactive GUIs to your Quarkus apps."
msgstr "Ahí lo tienes. Con sólo unos pocos y sencillos pasos puedes usar el poder de React y Patternfly para añadir GUIs interactivas de aspecto elegante a tus aplicaciones de Quarkus."

#. type: Plain text
#: upstream/_posts/2021-04-15-gui-react-patternfly.adoc:341
#, fuzzy, no-wrap
msgid "How about compiling this app to https://quarkus.io/guides/building-native-image[native] next to deploy an extremely lightweight webapp? Or you may want to look at some of other https://www.patternfly.org/v4/get-started/develop/[Patternfly components] to create a more sophisticated web interface. Either way there no boundaries except for your creativity to make you Quarkus apps shine.       \n"
msgstr "¿Qué tal compilar esta aplicación a  link:https://quarkus.io/guides/building-native-image[nativa] a continuación para desplegar una webapp extremadamente ligera? O tal vez quieras mirar algunos de los otros  link:https://www.patternfly.org/v4/get-started/develop/[componentes de Patternfly] para crear una interfaz web más sofisticada. En cualquier caso, no hay límites, salvo tu creatividad para hacer brillar tus aplicaciones Quarkus."

#, fuzzy
#~ msgid "---\n"
#~ msgstr "---\n"
