# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2022-05-02 07:14+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: YAML Front Matter: author
#: upstream/_posts/2021-09-01-using-lra.adoc:1
#, no-wrap
msgid "mmusgrov"
msgstr ""

#. type: YAML Front Matter: date
#: upstream/_posts/2021-09-01-using-lra.adoc:1
#, no-wrap
msgid "2021-09-01"
msgstr ""

#. type: YAML Front Matter: layout
#: upstream/_posts/2021-09-01-using-lra.adoc:1
#, no-wrap
msgid "post"
msgstr ""

#. type: YAML Front Matter: synopsis
#: upstream/_posts/2021-09-01-using-lra.adoc:1
#, no-wrap
msgid "How to use the narayana LRA extension to create reliable long running activities."
msgstr ""

#. type: YAML Front Matter: tags
#: upstream/_posts/2021-09-01-using-lra.adoc:1
#, no-wrap
msgid "extensions"
msgstr ""

#. type: YAML Front Matter: title
#: upstream/_posts/2021-09-01-using-lra.adoc:1
#, no-wrap
msgid "An Extension for Long Running Activities"
msgstr ""

#. type: Title ==
#: upstream/_posts/2021-09-01-using-lra.adoc:10
#, fuzzy, no-wrap
msgid "Introduction"
msgstr "Introducción"

#. type: Plain text
#: upstream/_posts/2021-09-01-using-lra.adoc:14
#, fuzzy
msgid "The Quarkus LRA extension is useful for building JAX-RS services that wish to definitively agree when an interaction has finished, with either a successful outcome or an unsuccessful one.  In the successful case, all participants can clean up in the knowledge that all other services will do so as well. Conversely, in the unsuccessful case, participants know that each other will compensate for any actions performed during the interaction. This feature means that participating services can reach a consensus and achieve an atomic outcome."
msgstr "La extensión LRA de Quarkus es útil para construir servicios JAX-RS que desean acordar definitivamente cuando una interacción ha terminado, con un resultado exitoso o no exitoso. En el caso exitoso, todos los participantes pueden limpiar sabiendo que todos los demás servicios también lo harán. Por el contrario, en el caso fallido, los participantes saben que los demás compensarán las acciones realizadas durante la interacción. Esta característica significa que los servicios participantes pueden llegar a un consenso y lograr un resultado atómico."

#. type: Plain text
#: upstream/_posts/2021-09-01-using-lra.adoc:16
#, fuzzy
msgid "We call the service interaction an LRA, short for Long Running Action. An LRA has specific properties and guarantees that aid in the construction of reliable service interactions. Each action is assigned a unique identifier (referred to as the LRA context) so that it can be distinguished from other LRAs."
msgstr "Llamamos a la interacción de servicios una LRA, abreviatura de Long Running Action (acción de larga duración). Una LRA tiene propiedades y garantías específicas que ayudan a construir interacciones de servicio fiables. A cada acción se le asigna un identificador único (denominado contexto LRA) para poder distinguirla de otras LRA."

#. type: Plain text
#: upstream/_posts/2021-09-01-using-lra.adoc:18
#, fuzzy
msgid "Services start an LRA (or join an existing one) by marking a JAX-RS method with an https://download.eclipse.org/microprofile/microprofile-lra-1.0/apidocs/org/eclipse/microprofile/lra/annotation/ws/rs/LRA.html[@LRA annotation]. When such a method is invoked the system will start the action and make its identifier available as a JAX-RS header called \"Long-Running-Action\". If the body of the method performs any JAX-RS invocations the header is automatically added to outgoing requests. In this way the target services can join in with the interaction (if they are also annotated with the `@LRA` annotation)."
msgstr "Los servicios inician un LRA (o se unen a uno existente) marcando un método JAX-RS con una  link:https://download.eclipse.org/microprofile/microprofile-lra-1.0/apidocs/org/eclipse/microprofile/lra/annotation/ws/rs/LRA.html[anotación @LRA]. Cuando se invoca un método de este tipo, el sistema iniciará la acción y hará que su identificador esté disponible como una cabecera JAX-RS llamada \"Long-Running-Action\". Si el cuerpo del método realiza alguna invocación JAX-RS la cabecera se añade automáticamente a las peticiones salientes. De este modo, los servicios de destino pueden unirse a la interacción (si también están anotados con la anotación `@LRA` )."

#. type: Plain text
#: upstream/_posts/2021-09-01-using-lra.adoc:20
#, fuzzy
msgid "Any work performed by a method annotated in this way should be \"compensatable\" in the sense that if some service \"cancels\" the LRA then the service will be reliably notified that it should compensate for any work that it did. Each service is responsible for interpreting the notion of what it means to compensate, the only requirement is that it responds https://download.eclipse.org/microprofile/microprofile-lra-1.0/apidocs/org/eclipse/microprofile/lra/annotation/ParticipantStatus.html[appropriately] when it is notified that it should compensate. The service indicates how it should be notified by annotating one of its method with an https://download.eclipse.org/microprofile/microprofile-lra-1.0/apidocs/org/eclipse/microprofile/lra/annotation/Compensate.html[@Compensate] annotation. Refer to the javadoc for the `@LRA` annotation for the details of how to control the outcome of an LRA."
msgstr "Cualquier trabajo realizado por un método anotado de esta manera debería ser \"compensable\" en el sentido de que si algún servicio \"cancela\" el ERS, entonces el servicio será notificado de forma fiable de que debe compensar cualquier trabajo que haya realizado. Cada servicio es responsable de interpretar la noción de lo que significa compensar, el único requisito es que responda  link:https://download.eclipse.org/microprofile/microprofile-lra-1.0/apidocs/org/eclipse/microprofile/lra/annotation/ParticipantStatus.html[adecuadamente] cuando se le notifique que debe compensar. El servicio indica cómo debe ser notificado anotando uno de sus métodos con una anotación  link:https://download.eclipse.org/microprofile/microprofile-lra-1.0/apidocs/org/eclipse/microprofile/lra/annotation/Compensate.html[@Compensate]. Consulte el javadoc de la anotación `@LRA` para conocer los detalles de cómo controlar el resultado de un ERS."

#. type: Plain text
#: upstream/_posts/2021-09-01-using-lra.adoc:23
#, fuzzy, no-wrap
msgid ""
"The extension provides an implementation of the https://download.eclipse.org/microprofile/microprofile-lra-1.0-M1/microprofile-lra-spec.html[MicroProfile LRA specification] and its associated\n"
" https://download.eclipse.org/microprofile/microprofile-lra-1.0/apidocs/index.html?org/eclipse/microprofile/lra/annotation/ws/rs/LRA.html[annotations].\n"
msgstr "La extensión proporciona una implementación de la  link:https://download.eclipse.org/microprofile/microprofile-lra-1.0-M1/microprofile-lra-spec.html[especificación MicroProfile LRA] y sus  link:https://download.eclipse.org/microprofile/microprofile-lra-1.0/apidocs/index.html?org/eclipse/microprofile/lra/annotation/ws/rs/LRA.html[anotaciones] asociadas."

#. type: Title ==
#: upstream/_posts/2021-09-01-using-lra.adoc:24
#, fuzzy, no-wrap
msgid "LRA coordinators"
msgstr "Coordinadores del ERS"

#. type: Plain text
#: upstream/_posts/2021-09-01-using-lra.adoc:29
#, fuzzy
msgid "The `narayana-lra` extension requires the presence of a running coordinator in the environment. Coordinators can be obtained from `https://hub.docker.com/r/jbosstm/lra-coordinator` or you can build your own coordinator using a maven pom that includes the appropriate dependencies. For the purpose of this blog we'll show how to create one from scratch using the `quarkus-maven-plugin`.  There is some extra information about configuring the coordinator in one of the https://jbossts.blogspot.com/2021/07/narayana-lra-update.html[narayana blogs]."
msgstr "La extensión `narayana-lra` requiere la presencia de un coordinador en funcionamiento en el entorno. Los coordinadores pueden obtenerse de `&lt;a href=\"https://hub.docker.com/r/jbosstm/lra-coordinator\" class=\"bare\"&gt;https://hub.docker.com/r/jbosstm/lra-coordinator&lt;/a&gt;` o puedes construir tu propio coordinador usando un pom de maven que incluya las dependencias apropiadas. Para el propósito de este blog mostraremos cómo crear uno desde cero usando el `quarkus-maven-plugin`. Hay alguna información extra sobre la configuración del coordinador en uno de los  link:https://jbossts.blogspot.com/2021/07/narayana-lra-update.html[blogs de narayana]."

#. type: Plain text
#: upstream/_posts/2021-09-01-using-lra.adoc:31
#, fuzzy
msgid "Since the coordinator is just a JAX-RS resource we can build one using quarkus, adding the `resteasy-jackson` and `rest-client` extensions:"
msgstr "Dado que el coordinador es sólo un recurso JAX-RS podemos construir uno usando quarkus, añadiendo las extensiones `resteasy-jackson` y `rest-client`:"

#. type: delimited block -
#: upstream/_posts/2021-09-01-using-lra.adoc:40
#, no-wrap
msgid ""
"$ mvn io.quarkus:quarkus-maven-plugin:2.2.1.Final:create \\\n"
"      -DprojectGroupId=org.acme \\\n"
"      -DprojectArtifactId=narayana-lra-coordinator \\\n"
"      -Dextensions=\"resteasy-jackson,rest-client\"\n"
"$ cd narayana-lra-coordinator/\n"
"$ rm -rf src\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2021-09-01-using-lra.adoc:43
#, fuzzy
msgid "Note that we removed the generated src directory because we just need the quarkus framework for running the coordinator."
msgstr "Ten en cuenta que hemos eliminado el directorio src generado porque sólo necesitamos el framework de quarkus para ejecutar el coordinador."

#. type: Plain text
#: upstream/_posts/2021-09-01-using-lra.adoc:45
#, fuzzy
msgid "Update the pom.xml file to add a dependency on the narayana coordinator implementation:"
msgstr "Actualiza el archivo pom.xml para añadir una dependencia de la implementación del coordinador narayana:"

#. type: delimited block -
#: upstream/_posts/2021-09-01-using-lra.adoc:53
#: upstream/_posts/2021-09-01-using-lra.adoc:457
#, no-wrap
msgid ""
"    <dependency>\n"
"      <groupId>org.jboss.narayana.rts</groupId>\n"
"      <artifactId>lra-coordinator-jar</artifactId>\n"
"      <version>5.12.0.Final</version>\n"
"    </dependency>\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2021-09-01-using-lra.adoc:56
#, fuzzy
msgid "Now build it and run it in the background:"
msgstr "Ahora constrúyelo y ejecútalo en segundo plano:"

#. type: delimited block -
#: upstream/_posts/2021-09-01-using-lra.adoc:61
#, no-wrap
msgid ""
"$ ./mvnw clean package\n"
"$ java -Dquarkus.http.port=50000 -jar target/quarkus-app/quarkus-run.jar &\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2021-09-01-using-lra.adoc:65
#, fuzzy
msgid "Here we are running the coordinator on the default port used by the `narayana-lra` quarkus extension, namely `50000`.  You can verify that the coordinator is running okay by listing the current LRAs:"
msgstr "Aquí estamos ejecutando el coordinador en el puerto por defecto utilizado por la extensión `narayana-lra` quarkus, es decir `50000`. Puedes verificar que el coordinador se está ejecutando bien listando los LRAs actuales:"

#. type: delimited block -
#: upstream/_posts/2021-09-01-using-lra.adoc:70
#, no-wrap
msgid ""
"$ curl http://localhost:50000/lra-coordinator\n"
"[]\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2021-09-01-using-lra.adoc:73
#, fuzzy
msgid "This snippet shows the request returning an empty json array."
msgstr "Este fragmento muestra la solicitud que devuelve un array json vacío."

#. type: Plain text
#: upstream/_posts/2021-09-01-using-lra.adoc:77
#, fuzzy
msgid "We shall leave the coordinator running (on the default port) while we develop and test services that use LRAs.  Towards the end of article we will show how to embed coordinators with services (NOTE: you cannot use this approach to run coordinators in native mode, a future extension will be provided to support this requirement)."
msgstr "Dejaremos el coordinador en ejecución (en el puerto por defecto) mientras desarrollamos y probamos los servicios que utilizan ARL. Hacia el final del artículo mostraremos cómo incrustar coordinadores con servicios (NOTA: no se puede utilizar este enfoque para ejecutar coordinadores en modo nativo, se proporcionará una futura extensión para soportar este requisito)."

#. type: Title ==
#: upstream/_posts/2021-09-01-using-lra.adoc:78
#, fuzzy, no-wrap
msgid "JVM mode"
msgstr "Modo JVM"

#. type: Plain text
#: upstream/_posts/2021-09-01-using-lra.adoc:81
#, fuzzy
msgid "To build a JAX-RS application with LRA support add the dependency `io.quarkus:quarkus-narayana-lra` to your application's pom. This will add JAX-RS support and will also make the LRA annotations available when developing your services, it also registers a JAX-RS filter that automatically manages the participation of your services in LRAs."
msgstr "Para construir una aplicación JAX-RS con soporte LRA añade la dependencia `io.quarkus:quarkus-narayana-lra` al pom de tu aplicación. Esto añadirá el soporte de JAX-RS y también hará que las anotaciones de LRA estén disponibles cuando desarrolles tus servicios, también registra un filtro JAX-RS que gestiona automáticamente la participación de tus servicios en LRAs."

#. type: Plain text
#: upstream/_posts/2021-09-01-using-lra.adoc:83
#, fuzzy
msgid "As noted above, the guarantees (of eventual consistency) required by the https://download.eclipse.org/microprofile/microprofile-lra-1.0-M1/microprofile-lra-spec.html[LRA specification] rely on the presence of a JAX-RS application that coordinates the services participating in the LRA. This component must be present when starting the interaction, when joining the interaction and when ending the interaction. If the coordinator becomes unavailable it should be restarted. Similarly, services participating in the LRA must be available during the end phase; the system will continue retrying a service until it indicates that it is finished with the LRA, and once a service has indicated successful compensation (or completion) it no longer takes part in the interaction (although it can register for a reliable notification that all services have finished compensating or completing). Although there can be many coordinators, at the time of writing, only one can manage a particular LRA."
msgstr "Como se ha señalado anteriormente, las garantías (de consistencia eventual) requeridas por la  link:https://download.eclipse.org/microprofile/microprofile-lra-1.0-M1/microprofile-lra-spec.html[especificación LRA] se basan en la presencia de una aplicación JAX-RS que coordina los servicios que participan en el LRA. Este componente debe estar presente cuando se inicia la interacción, cuando se une a la interacción y cuando termina la interacción. Si el coordinador deja de estar disponible, debe reiniciarse. Del mismo modo, los servicios que participan en el ERS deben estar disponibles durante la fase de finalización; el sistema seguirá reintentando un servicio hasta que indique que ha terminado con el ERS, y una vez que un servicio ha indicado que ha compensado (o completado) con éxito, ya no participa en la interacción (aunque puede registrarse para recibir una notificación fiable de que todos los servicios han terminado de compensar o completar). Aunque puede haber muchos coordinadores, en el momento de escribir este artículo, sólo uno puede gestionar un ERS concreto."

#. type: Title ===
#: upstream/_posts/2021-09-01-using-lra.adoc:84
#, fuzzy, no-wrap
msgid "Step 1: Create the application:"
msgstr "Paso 1: Crear la aplicación:"

#. type: delimited block -
#: upstream/_posts/2021-09-01-using-lra.adoc:93
#, no-wrap
msgid ""
"$ mvn io.quarkus:quarkus-maven-plugin:2.2.1.Final:create \\\n"
"      -DprojectGroupId=org.acme \\\n"
"      -DprojectArtifactId=narayana-lra-quickstart \\\n"
"      -Dextensions=\"narayana-lra\"\n"
"$ cd lra-quickstart\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2021-09-01-using-lra.adoc:96
#, fuzzy
msgid "Note that if the coordinator is running on a port different from the default, i.e. `50000`, then you will need to update the application config file (`src/main/resources/application.properties`) and specify the host and port:"
msgstr "Tenga en cuenta que si el coordinador se ejecuta en un puerto diferente al predeterminado, es decir, `50000`, deberá actualizar el archivo de configuración de la aplicación ( `src/main/resources/application.properties`) y especificar el host y el puerto:"

#. type: delimited block -
#: upstream/_posts/2021-09-01-using-lra.adoc:100
#, no-wrap
msgid "quarkus.lra.coordinator-url=http://localhost:<port>/lra-coordinator\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2021-09-01-using-lra.adoc:103
#, fuzzy
msgid "Verify that the generated application still works after these changes:"
msgstr "Compruebe que la aplicación generada sigue funcionando después de estos cambios:"

#. type: delimited block -
#: upstream/_posts/2021-09-01-using-lra.adoc:107
#, no-wrap
msgid "$ ./mvnw clean package\n"
msgstr ""

#. type: Title ===
#: upstream/_posts/2021-09-01-using-lra.adoc:109
#, fuzzy, no-wrap
msgid "Step 2: Add LRA support"
msgstr "Paso 2: Añadir el soporte LRA"

#. type: Plain text
#: upstream/_posts/2021-09-01-using-lra.adoc:112
#, fuzzy
msgid "Now update the generated application so that the hello method will execute in the context of a Long Running Action:"
msgstr "Ahora actualice la aplicación generada para que el método hello se ejecute en el contexto de una acción de larga duración:"

#. type: Plain text
#: upstream/_posts/2021-09-01-using-lra.adoc:114
#, fuzzy
msgid "Open the file `src/main/java/org/acme/GreetingResource.java` in an editor and annotate the `hello` method with an @LRA annotation (also inject the LRA context into the method using the JAX-RS `javax.ws.rs.HeaderParam` annotation). In addition, add two callback methods which will be called when the LRA is closed or cancelled."
msgstr "Abra el archivo `src/main/java/org/acme/GreetingResource.java` en un editor y anote el método `hello` con una anotación @LRA (también inyecte el contexto LRA en el método usando la anotación JAX-RS `javax.ws.rs.HeaderParam` ). Además, añada dos métodos callback que serán llamados cuando el ERS se cierre o se cancele."

#. type: Plain text
#: upstream/_posts/2021-09-01-using-lra.adoc:116
#, fuzzy
msgid "The end result, including the imports, should look like the following:"
msgstr "El resultado final, incluyendo las importaciones, debería ser el siguiente:"

#. type: delimited block -
#: upstream/_posts/2021-09-01-using-lra.adoc:120
#, no-wrap
msgid "package org.acme;\n"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2021-09-01-using-lra.adoc:125
#, no-wrap
msgid ""
"import javax.ws.rs.GET;\n"
"import javax.ws.rs.Path;\n"
"import javax.ws.rs.Produces;\n"
"import javax.ws.rs.core.MediaType;\n"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2021-09-01-using-lra.adoc:135
#, no-wrap
msgid ""
"// Step 2a: Add imports for reading the LRA context and for using LRA annotations\n"
"import javax.ws.rs.HeaderParam;\n"
"import javax.ws.rs.PUT;\n"
"import javax.ws.rs.core.Response;\n"
"import java.net.URI;\n"
"import org.eclipse.microprofile.lra.annotation.ws.rs.LRA;\n"
"import org.eclipse.microprofile.lra.annotation.Compensate;\n"
"import org.eclipse.microprofile.lra.annotation.Complete;\n"
"import static org.eclipse.microprofile.lra.annotation.ws.rs.LRA.LRA_HTTP_CONTEXT_HEADER;\n"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2021-09-01-using-lra.adoc:138
#, no-wrap
msgid ""
"@Path(\"/hello\")\n"
"public class GreetingResource {\n"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2021-09-01-using-lra.adoc:146
#, no-wrap
msgid ""
"    @GET\n"
"    @LRA // Step 2b: The method should run within an LRA\n"
"    @Produces(MediaType.TEXT_PLAIN)\n"
"    public String hello(@HeaderParam(LRA_HTTP_CONTEXT_HEADER) URI lraId /* Step 2c the context is useful for associating compensation logic */) {\n"
"        System.out.printf(\"hello with context %s%n\", lraId);\n"
"        return \"Hello RESTEasy\";\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2021-09-01-using-lra.adoc:155
#, no-wrap
msgid ""
"    // Step 2d: There must be a method to compensate for the action if it's cancelled\n"
"    @PUT\n"
"    @Path(\"compensate\")\n"
"    @Compensate\n"
"    public Response compensateWork(@HeaderParam(LRA_HTTP_CONTEXT_HEADER) URI lraId) {\n"
"        System.out.printf(\"compensating %s%n\", lraId);\n"
"        return Response.ok(lraId.toASCIIString()).build();\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2021-09-01-using-lra.adoc:165
#, no-wrap
msgid ""
"    // Step 2e: An optional callback notifying that the LRA is closing\n"
"    @PUT\n"
"    @Path(\"complete\")\n"
"    @Complete\n"
"    public Response completeWork(@HeaderParam(LRA_HTTP_CONTEXT_HEADER) URI lraId) {\n"
"        System.out.printf(\"completing %s%n\", lraId);\n"
"        return Response.ok(lraId.toASCIIString()).build();\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2021-09-01-using-lra.adoc:168
#, fuzzy
msgid "With these changes, if you build the application and then invoke the `hello` method then an LRA will be started before the method is entered and ended after it finishes:"
msgstr "Con estos cambios, si se construye la aplicación y luego se invoca el método `hello`, se iniciará un ERS antes de entrar en el método y se terminará después de que termine:"

#. type: delimited block -
#: upstream/_posts/2021-09-01-using-lra.adoc:178
#, no-wrap
msgid ""
"$ ./mvnw clean package\n"
"$ java -jar target/quarkus-app/quarkus-run.jar &\n"
"[1] 2389948\n"
"$ curl http://localhost:8080/hello\n"
"hello with context http://localhost:50000/lra-coordinator/0_ffffc0a8000e_8c1f_612a6e9b_a\n"
"completing http://localhost:50000/lra-coordinator/0_ffffc0a8000e_8c1f_612a6e9b_a\n"
"Hello RESTEasy\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2021-09-01-using-lra.adoc:181
#, fuzzy
msgid "Make sure that the coordinator is still running otherwise you will see an error message similar to the following:"
msgstr "Asegúrese de que el coordinador sigue funcionando, de lo contrario verá un mensaje de error similar al siguiente:"

#. type: delimited block -
#: upstream/_posts/2021-09-01-using-lra.adoc:185
#, no-wrap
msgid "2021-08-11 14:27:45,779 WARN  [io.nar.lra] (executor-thread-0) LRA025025: Unable to process LRA annotations: -3: StartFailed (start LRA client request timed out, try again later) ()'\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2021-09-01-using-lra.adoc:189
#, fuzzy
msgid "Notice the `System.out` messages indicating that the `@Complete` callback was invoked.  Now kill the java process in preparation for the next step (the process id was printed on the console, in my example the pid is 2389948, so I typed `kill 2389948`)."
msgstr "Fíjate en los mensajes de `System.out` que indican que se ha invocado la llamada de retorno de `@Complete`. Ahora mata el proceso java en preparación para el siguiente paso (el id del proceso se imprimió en la consola, en mi ejemplo el pid es 2389948, así que escribí `kill 2389948`)."

#. type: Title ===
#: upstream/_posts/2021-09-01-using-lra.adoc:190
#, fuzzy, no-wrap
msgid "Step 3: Extending the LRA across two service methods"
msgstr "Paso 3: Ampliar el ERS a dos métodos de servicio"

#. type: Plain text
#: upstream/_posts/2021-09-01-using-lra.adoc:193
#, fuzzy
msgid "In this step we will start an LRA but not end it when the method finishes by using https://download.eclipse.org/microprofile/microprofile-lra-1.0/apidocs/org/eclipse/microprofile/lra/annotation/ws/rs/LRA.html#end--[the end element of the LRA annotation]."
msgstr "En este paso iniciaremos un ERS pero no lo terminaremos cuando el método finalice utilizando  link:https://download.eclipse.org/microprofile/microprofile-lra-1.0/apidocs/org/eclipse/microprofile/lra/annotation/ws/rs/LRA.html#end--[el elemento end de la anotación del ERS]."

#. type: Plain text
#: upstream/_posts/2021-09-01-using-lra.adoc:195
#, fuzzy
msgid "Define a second business method to do this:"
msgstr "Definir un segundo método empresarial para hacerlo:"

#. type: delimited block -
#: upstream/_posts/2021-09-01-using-lra.adoc:206
#, no-wrap
msgid ""
"    @GET\n"
"    @Path(\"/start\")\n"
"    @LRA(end = false) // Step 3a: The method should run within an LRA\n"
"    @Produces(MediaType.TEXT_PLAIN)\n"
"    public String start(@HeaderParam(LRA_HTTP_CONTEXT_HEADER) URI lraId) {\n"
"        System.out.printf(\"hello with context %s%n\", lraId);\n"
"        return lraId.toASCIIString();\n"
"    }\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2021-09-01-using-lra.adoc:211
#, fuzzy
msgid "The only difference from the hello method is the `@Path` and `@LRA` annotations and that it returns the LRA id back to the caller. We will need this to set the header when we send a request to the hello method to finish the LRA (note that this header is also available in one of the JAX-RS response headers)."
msgstr "La única diferencia con el método hello son las anotaciones `@Path` y `@LRA` y que devuelve el id de LRA al llamante. Lo necesitaremos para establecer la cabecera cuando enviemos una petición al método hello para finalizar el LRA (ten en cuenta que esta cabecera también está disponible en una de las cabeceras de respuesta de JAX-RS)."

#. type: Plain text
#: upstream/_posts/2021-09-01-using-lra.adoc:213
#, fuzzy
msgid "Kill the existing instance (`kill 2389948`) and rebuild the application (`./mvnw package -DskipTests`) and start it running in the background:"
msgstr "Matar la instancia existente ( `kill 2389948`) y reconstruir la aplicación ( `./mvnw package -DskipTests`) y comenzar a ejecutarla en segundo plano:"

#. type: delimited block -
#: upstream/_posts/2021-09-01-using-lra.adoc:218
#, no-wrap
msgid ""
"$ java -jar target/quarkus-app/quarkus-run.jar &\n"
"[1] 2495275\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2021-09-01-using-lra.adoc:221
#, fuzzy
msgid "Start an LRA using `curl` to send a request the new method we have just added:"
msgstr "Inicie un LRA utilizando `curl` para enviar una solicitud el nuevo método que acabamos de añadir:"

#. type: delimited block -
#: upstream/_posts/2021-09-01-using-lra.adoc:226
#, no-wrap
msgid ""
"$ LRA_URL=$(curl http://localhost:8080/hello/start)\n"
"hello with context http://localhost:50000/lra-coordinator/0_ffffc0a8000e_a909_611a92ea_2\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2021-09-01-using-lra.adoc:230
#, fuzzy
msgid "The start method was coded to return the LRA id and I have used `bash` to save it into an environment variable called `LRA_URL`.  The original hello method used the default value of the `end` element of the `@LRA` annotation so if we call that method with an LRA context then the LRA will automatically close when the method finishes:"
msgstr "El método start fue codificado para devolver el id del LRA y he utilizado `bash` para guardarlo en una variable de entorno llamada `LRA_URL`. El método hello original utilizaba el valor por defecto del elemento `end` de la anotación `@LRA` por lo que si llamamos a ese método con un contexto LRA entonces el LRA se cerrará automáticamente cuando el método termine:"

#. type: delimited block -
#: upstream/_posts/2021-09-01-using-lra.adoc:237
#, no-wrap
msgid ""
"$ curl --header \"Long-Running-Action: $LRA_URL\" http://localhost:8080/hello\n"
"hello with context http://localhost:50000/lra-coordinator/0_ffffc0a8000e_a909_611a92ea_2\n"
"completing http://localhost:50000/lra-coordinator/0_ffffc0a8000e_a909_611a92ea_2\n"
"Hello RESTEasy\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2021-09-01-using-lra.adoc:240
#, fuzzy
msgid "Notice that the `completeWork` method was invoked."
msgstr "Observe que se ha invocado el método `completeWork`."

#. type: Title ===
#: upstream/_posts/2021-09-01-using-lra.adoc:241
#, fuzzy, no-wrap
msgid "Step 4: Start an LRA in one microservice and end it in a different microservice"
msgstr "Paso 4: Iniciar un ERS en un microservicio y terminarlo en otro microservicio"

#. type: Plain text
#: upstream/_posts/2021-09-01-using-lra.adoc:245
#, fuzzy
msgid "This step shows how two different microservices can coordinate their activities even though they have no coupling.  Start a second instance of the hello application on a different port:"
msgstr "Este paso muestra cómo dos microservicios diferentes pueden coordinar sus actividades aunque no tengan acoplamiento. Inicie una segunda instancia de la aplicación hello en un puerto diferente:"

#. type: delimited block -
#: upstream/_posts/2021-09-01-using-lra.adoc:250
#, no-wrap
msgid ""
"$ java -Dquarkus.http.port=8081 -jar target/quarkus-app/quarkus-run.jar &\n"
"[2] 2495369\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2021-09-01-using-lra.adoc:253
#, fuzzy
msgid "Since we are still using the same application resource file and external coordinator there is no need to update the config."
msgstr "Como seguimos utilizando el mismo archivo de recursos de la aplicación y el coordinador externo, no es necesario actualizar la configuración."

#. type: Plain text
#: upstream/_posts/2021-09-01-using-lra.adoc:255
#, fuzzy
msgid "Again, start an LRA using `curl` to send a request to the start method of the first service:"
msgstr "De nuevo, inicie un ERS utilizando `curl` para enviar una solicitud al método de inicio del primer servicio:"

#. type: delimited block -
#: upstream/_posts/2021-09-01-using-lra.adoc:260
#, no-wrap
msgid ""
"$ LRA_URL=$(curl http://localhost:8080/hello/start)\n"
"hello with context http://localhost:50000/lra-coordinator/0_ffffc0a8000e_a355_6113dede_11\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2021-09-01-using-lra.adoc:263
#, fuzzy
msgid "and now end it in the second service (the one running on port 8081):"
msgstr "y ahora termine en el segundo servicio (el que se ejecuta en el puerto 8081):"

#. type: delimited block -
#: upstream/_posts/2021-09-01-using-lra.adoc:271
#, no-wrap
msgid ""
"$ curl --header \"Long-Running-Action: $LRA_URL\" http://localhost:8081/hello\n"
"hello with context http://localhost:50000/lra-coordinator/0_ffffc0a8000e_a355_6113dede_11\n"
"completing http://localhost:50000/lra-coordinator/0_ffffc0a8000e_a355_6113dede_11\n"
"completing http://localhost:50000/lra-coordinator/0_ffffc0a8000e_a355_6113dede_11\n"
"Hello RESTEasy\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2021-09-01-using-lra.adoc:274
#, fuzzy
msgid "Notice that both microservices indicated that they received the completion callback."
msgstr "Observe que ambos microservicios indicaron que recibieron el callback de finalización."

#. type: Plain text
#: upstream/_posts/2021-09-01-using-lra.adoc:276
#, fuzzy
msgid "Terminate both java processes (`kill 2495275 2495369`)."
msgstr "Terminar ambos procesos java ( `kill 2495275 2495369`)."

#. type: Title ====
#: upstream/_posts/2021-09-01-using-lra.adoc:277
#, fuzzy, no-wrap
msgid "Optional Step: using the MANDATORY element"
msgstr "Paso opcional: utilizar el elemento MANDATORY"

#. type: Plain text
#: upstream/_posts/2021-09-01-using-lra.adoc:281
#, fuzzy
msgid "Instead of using an existing method to close the LRA you might prefer to write one which expects there to be a context.  In this case you would want to set the `LRA.Type` element:"
msgstr "En lugar de utilizar un método existente para cerrar el ERS, puede preferir escribir uno que espere que haya un contexto. En este caso, querrá establecer el elemento `LRA.Type`:"

#. type: delimited block -
#: upstream/_posts/2021-09-01-using-lra.adoc:291
#, no-wrap
msgid ""
"    @GET\n"
"    @Path(\"/end\")\n"
"    @LRA(value = LRA.Type.MANDATORY) // Step 3a: The method MUST be invoked with an LRA\n"
"    @Produces(MediaType.TEXT_PLAIN)\n"
"    public String end(@HeaderParam(LRA_HTTP_CONTEXT_HEADER) URI lraId) {\n"
"        return lraId.toASCIIString();\n"
"    }\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2021-09-01-using-lra.adoc:294
#, fuzzy
msgid "Because the end method is annotated with `@LRA(value = LRA.Type.MANDATORY)`, the context header must be present otherwise the method will return an error response code:"
msgstr "Como el método end está anotado con `@LRA(value = LRA.Type.MANDATORY)`, la cabecera de contexto debe estar presente, de lo contrario el método devolverá un código de respuesta de error:"

#. type: delimited block -
#: upstream/_posts/2021-09-01-using-lra.adoc:305
#, no-wrap
msgid ""
"$ ./mvnw clean package -DskipTests\n"
"$ java -Dquarkus.http.port=8081 -jar target/quarkus-app/quarkus-run.jar &\n"
"[1] 300189\n"
"$ LRA_URL=$(curl http://localhost:8081/hello/start)\n"
"$ curl -v http://localhost:8081/hello/end\n"
"...\n"
"HTTP/1.1 412 Precondition Failed\n"
"...\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2021-09-01-using-lra.adoc:308
#, fuzzy
msgid "whereas providing the LRA context header will work:"
msgstr "mientras que proporcionar la cabecera de contexto LRA funcionará:"

#. type: delimited block -
#: upstream/_posts/2021-09-01-using-lra.adoc:316
#, no-wrap
msgid ""
"$ curl --header \"Long-Running-Action: $LRA_URL\" -I http://localhost:8081/hello/end\n"
"HTTP/1.1 200 OK\n"
"Content-Type: application/octet-stream\n"
"connection: keep-alive\n"
"$ kill 300189\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2021-09-01-using-lra.adoc:319
#, fuzzy
msgid "Other https://download.eclipse.org/microprofile/microprofile-lra-1.0/apidocs/org/eclipse/microprofile/lra/annotation/ws/rs/LRA.Type.html[LRA.Type element values] may be useful, depending upon what your application is trying to achieve. For those readers familiar with JTA it is worth remarking that it was loosely modelled on the https://docs.oracle.com/javaee/7/api/javax/transaction/Transactional.TxType.html[Java Transactional TxType annotation]."
msgstr "Otros  link:https://download.eclipse.org/microprofile/microprofile-lra-1.0/apidocs/org/eclipse/microprofile/lra/annotation/ws/rs/LRA.Type.html[valores del elemento LRA.] Type pueden ser útiles, dependiendo de lo que su aplicación esté tratando de lograr. Para aquellos lectores familiarizados con JTA, vale la pena remarcar que fue modelado libremente en la  link:https://docs.oracle.com/javaee/7/api/javax/transaction/Transactional.TxType.html[anotación Java Transactional TxType]."

#. type: Title ==
#: upstream/_posts/2021-09-01-using-lra.adoc:320
#, fuzzy, no-wrap
msgid "Native mode"
msgstr "Modo nativo"

#. type: Plain text
#: upstream/_posts/2021-09-01-using-lra.adoc:323
#, fuzzy
msgid "in native mode only external coordinators (i.e. not embedded with the application) are supported (we will provide a coordinator extension in a later release to address this deficiency)."
msgstr "en el modo nativo sólo se admiten coordinadores externos (es decir, no incrustados con la aplicación) (proporcionaremos una extensión de coordinador en una versión posterior para solucionar esta deficiencia)."

#. type: Plain text
#: upstream/_posts/2021-09-01-using-lra.adoc:325
#, fuzzy
msgid "First build a native executable:"
msgstr "Primero construye un ejecutable nativo:"

#. type: delimited block -
#: upstream/_posts/2021-09-01-using-lra.adoc:329
#, no-wrap
msgid "$ ./mvnw package -DskipTests -Pnative\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2021-09-01-using-lra.adoc:336
#, fuzzy
msgid "Check that the external coordinator started in <<_lra-coordinators,the section on coordinators>> is still running on port 50000 and then start the service as a native executable in the background. Note that if the coordinator is not running on the default port you would need to either pass in the location of a running coordinator as a Java system property (`-Dquarkus.lra.coordinator-url=http://localhost:50000/lra-coordinator`) or you can update the application config and rebuild the native executable."
msgstr "Compruebe que el coordinador externo iniciado en  link:#_lra-coordinators[la sección de coordinadores] sigue funcionando en el puerto 50000 y, a continuación, inicie el servicio como un ejecutable nativo en segundo plano. Tenga en cuenta que si el coordinador no se está ejecutando en el puerto por defecto tendría que pasar la ubicación de un coordinador en ejecución como una propiedad del sistema Java ( `-Dquarkus.lra.coordinator-url=http://localhost:50000/lra-coordinator`) o puede actualizar la configuración de la aplicación y reconstruir el ejecutable nativo."

#. type: Plain text
#: upstream/_posts/2021-09-01-using-lra.adoc:338
#, fuzzy
msgid "Start an instance of the native service:"
msgstr "Inicie una instancia del servicio nativo:"

#. type: delimited block -
#: upstream/_posts/2021-09-01-using-lra.adoc:343
#, no-wrap
msgid ""
"$ ./target/narayana-lra-quickstart-1.0.0-SNAPSHOT-runner &\n"
"[1] 2434426\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2021-09-01-using-lra.adoc:346
#, fuzzy
msgid "Take a note of the process id (i.e. 2434426) since we will need to kill the process later."
msgstr "Anote el identificador del proceso (es decir, 2434426), ya que tendremos que matar el proceso más tarde."

#. type: Plain text
#: upstream/_posts/2021-09-01-using-lra.adoc:348
#, fuzzy
msgid "Start a new LRA:"
msgstr "Inicie un nuevo ERS:"

#. type: delimited block -
#: upstream/_posts/2021-09-01-using-lra.adoc:352
#, no-wrap
msgid "$ LRA_URL=$(curl http://localhost:8080/hello/start)\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2021-09-01-using-lra.adoc:355
#, fuzzy
msgid "and end it in a different method:"
msgstr "y terminar con un método diferente:"

#. type: delimited block -
#: upstream/_posts/2021-09-01-using-lra.adoc:362
#, no-wrap
msgid ""
"$ curl --header \"Long-Running-Action: $LRA_URL\" http://localhost:8080/hello\n"
"hello with context http://localhost:50000/lra-coordinator/0_ffffc0a8000e_8479_612e13fa_2\n"
"completing http://localhost:50000/lra-coordinator/0_ffffc0a8000e_8479_612e13fa_2\n"
"Hello RESTEasy\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2021-09-01-using-lra.adoc:365
#, fuzzy
msgid "Kill the service in preparation for the next step (`kill 2434426`) or just leave it running."
msgstr "Mata el servicio en preparación para el siguiente paso ( `kill 2434426`) o simplemente déjalo funcionando."

#. type: Title ===
#: upstream/_posts/2021-09-01-using-lra.adoc:366
#, fuzzy, no-wrap
msgid "Failure handling"
msgstr "Gestión de fallos"

#. type: Plain text
#: upstream/_posts/2021-09-01-using-lra.adoc:373
#, fuzzy
msgid "In this step we will start an LRA running in one service and then kill the service before the LRA has finished.  Then we'll use a second service to end the LRA and note that second service completes but that the LRA will still be in the `Closing` state because the participant in the first, failed, service still needs to complete.  If the LRA is to reach the `Closed` state then the failed service must be restarted so that it can can respond to the `Complete` request."
msgstr "En este paso iniciaremos un ERS que se ejecuta en un servicio y luego mataremos el servicio antes de que el ERS haya terminado. A continuación, utilizaremos un segundo servicio para terminar el ERS y observaremos que el segundo servicio se completa pero que el ERS todavía estará en el estado `Closing` porque el participante en el primer servicio, que ha fallado, todavía necesita completarse. Si el ERS va a alcanzar el estado `Closed` entonces el servicio que ha fallado debe ser reiniciado para que pueda responder a la petición `Complete`."

#. type: Plain text
#: upstream/_posts/2021-09-01-using-lra.adoc:375
#, fuzzy
msgid "Restart the fist service on the default port 8080 (and note its process id):"
msgstr "Reinicie el servicio fist en el puerto por defecto 8080 (y anote su id de proceso):"

#. type: delimited block -
#: upstream/_posts/2021-09-01-using-lra.adoc:380
#, no-wrap
msgid ""
"$ ./target/narayana-lra-quickstart-1.0.0-SNAPSHOT-runner &\n"
"[1] 2434936\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2021-09-01-using-lra.adoc:383
#, fuzzy
msgid "and start a second service instance (on port 8082):"
msgstr "e iniciar una segunda instancia de servicio (en el puerto 8082):"

#. type: delimited block -
#: upstream/_posts/2021-09-01-using-lra.adoc:388
#, no-wrap
msgid ""
"$ ./target/narayana-lra-quickstart-1.0.0-SNAPSHOT-runner -Dquarkus.http.port=8082 &\n"
"[2] 2434984\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2021-09-01-using-lra.adoc:391
#, fuzzy
msgid "Start an LRA at the first service:"
msgstr "Inicie un ERS en el primer servicio:"

#. type: delimited block -
#: upstream/_posts/2021-09-01-using-lra.adoc:396
#, no-wrap
msgid ""
"$ LRA_URL=$(curl http://localhost:8080/hello/start)\n"
"hello with context http://localhost:50000/lra-coordinator/0_ffffc0a8000e_a355_6113dede_34\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2021-09-01-using-lra.adoc:399
#, fuzzy
msgid "Kill the first service"
msgstr "Matar el primer servicio"

#. type: delimited block -
#: upstream/_posts/2021-09-01-using-lra.adoc:404
#, no-wrap
msgid ""
"$ kill 2434936\n"
"2021-08-11 16:02:24,542 INFO  [io.quarkus] (Shutdown thread) narayana-lra-quickstart stopped in 0.003s\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2021-09-01-using-lra.adoc:407
#, fuzzy
msgid "Now, with only the second service running, try ending the LRA:"
msgstr "Ahora, con sólo el segundo servicio en funcionamiento, intente terminar el ERS:"

#. type: delimited block -
#: upstream/_posts/2021-09-01-using-lra.adoc:414
#, no-wrap
msgid ""
"$ curl --header \"Long-Running-Action: $LRA_URL\" http://localhost:8082/hello\n"
"hello with context http://localhost:50000/lra-coordinator/0_ffffc0a8000e_a355_6113dede_34\n"
"completing http://localhost:50000/lra-coordinator/0_ffffc0a8000e_a355_6113dede_34\n"
"Hello RESTEasy\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2021-09-01-using-lra.adoc:417
#, fuzzy
msgid "The LRA will still be running, as you may verify by querying the coordinator (`curl http://localhost:50000/lra-coordinator`)."
msgstr "El ERS seguirá funcionando, como puede comprobar consultando al coordinador ( `curl &lt;a href=\"http://localhost:50000/lra-coordinator\" class=\"bare\"&gt;http://localhost:50000/lra-coordinator&lt;/a&gt;`)."

#. type: Plain text
#: upstream/_posts/2021-09-01-using-lra.adoc:419
#, fuzzy
msgid "To finish the LRA restart the failed service (which was listening on port 8080):"
msgstr "Para terminar el LRA reinicie el servicio fallido (que estaba escuchando en el puerto 8080):"

#. type: delimited block -
#: upstream/_posts/2021-09-01-using-lra.adoc:424
#, no-wrap
msgid ""
"$ ./target/narayana-lra-quickstart-1.0.0-SNAPSHOT-runner &\n"
"[3] 2435130\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2021-09-01-using-lra.adoc:429
#, fuzzy
msgid "Recovery processing is periodic (the default period between recovery passes is 2 minutes).  If you cannot wait 2 minutes then you may manually trigger a recovery cycle via the coordinators recovery endpoint as follows:"
msgstr "El proceso de recuperación es periódico (el periodo por defecto entre pases de recuperación es de 2 minutos). Si no puede esperar 2 minutos, puede activar manualmente un ciclo de recuperación a través del punto final de recuperación de los coordinadores de la siguiente manera:"

#. type: delimited block -
#: upstream/_posts/2021-09-01-using-lra.adoc:435
#, no-wrap
msgid ""
"$ curl http://localhost:50000/lra-coordinator/recovery\n"
"completing http://localhost:50000/lra-coordinator/0_ffffc0a8000e_a355_6113dede_34\n"
"[]\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2021-09-01-using-lra.adoc:440
#, fuzzy
msgid "The item to note here is that the restarted service received the completion notification (`completing ...`).  The result of the request to run a recovery cycle is a json array of recovering LRAs (in this example the list is empty because the last LRA has now finished as indicated by the empty json array `[]`)."
msgstr "Lo que hay que tener en cuenta aquí es que el servicio reiniciado ha recibido la notificación de finalización ( `completing …​`). El resultado de la solicitud de ejecución de un ciclo de recuperación es un array json de los ERS que se recuperan (en este ejemplo la lista está vacía porque el último ERS ya ha finalizado como indica el array json vacío `[]`)."

#. type: Plain text
#: upstream/_posts/2021-09-01-using-lra.adoc:442
#, fuzzy
msgid "Clean up by stopping the two services (`kill 2434984 2435130`)."
msgstr "Limpie parando los dos servicios ( `kill 2434984 2435130`)."

#. type: Title ==
#: upstream/_posts/2021-09-01-using-lra.adoc:443
#, fuzzy, no-wrap
msgid "Appendix 1"
msgstr "Anexo 1"

#. type: Title ===
#: upstream/_posts/2021-09-01-using-lra.adoc:445
#, fuzzy, no-wrap
msgid "Embedded Coordinators"
msgstr "Coordinadores integrados"

#. type: Plain text
#: upstream/_posts/2021-09-01-using-lra.adoc:449
#, fuzzy
msgid "Since coordinators are just JAX-RS applications they can be embedded with JAX-RS services quite easily by adding the LRA coordinator dependency the applications pom.xml file:"
msgstr "Dado que los coordinadores son sólo aplicaciones JAX-RS, pueden integrarse en los servicios JAX-RS con bastante facilidad añadiendo la dependencia del coordinador LRA al archivo pom.xml de las aplicaciones:"

#. type: Plain text
#: upstream/_posts/2021-09-01-using-lra.adoc:461
#, fuzzy
msgid "and since, by default, quarkus only allows one application per deployment you will need to add the the following property to the application config file (`src/main/resources/application.properties`):"
msgstr "y como, por defecto, quarkus sólo permite una aplicación por despliegue, tendrá que añadir la siguiente propiedad al archivo de configuración de la aplicación ( `src/main/resources/application.properties`):"

#. type: delimited block -
#: upstream/_posts/2021-09-01-using-lra.adoc:465
#, no-wrap
msgid "quarkus.resteasy.ignore-application-classes=true \n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2021-09-01-using-lra.adoc:468
#, fuzzy
msgid "The same caveats as described in the <<_lra-coordinators,the section on coordinators>> still apply:"
msgstr "Se siguen aplicando las mismas advertencias descritas en la  link:#_lra-coordinators[sección sobre coordinadores]:"

#. type: Plain text
#: upstream/_posts/2021-09-01-using-lra.adoc:470
#, fuzzy
msgid "no support for native executables."
msgstr "no hay soporte para los ejecutables nativos."

#. type: Plain text
#: upstream/_posts/2021-09-01-using-lra.adoc:471
#, fuzzy
msgid "each instance requires dedicated storage for the coordinators' transaction logs (since sharing transaction stores is not currently supported)."
msgstr "cada instancia requiere un almacenamiento dedicado para los registros de transacciones de los coordinadores (ya que actualmente no se admite compartir los almacenes de transacciones)."

#. type: Plain text
#: upstream/_posts/2021-09-01-using-lra.adoc:475
#, fuzzy
msgid "The embedded coordinator will be available on the same port as the application (with path `lra-coordinator`), but note that the default coordinator port is `50000` so you will need to configure its location in the application config to tell the application to use it:"
msgstr "El coordinador incrustado estará disponible en el mismo puerto que la aplicación (con la ruta `lra-coordinator`), pero tenga en cuenta que el puerto del coordinador por defecto es `50000` por lo que tendrá que configurar su ubicación en la configuración de la aplicación para decirle a la aplicación que lo utilice:"

#. type: delimited block -
#: upstream/_posts/2021-09-01-using-lra.adoc:480
#, no-wrap
msgid ""
"quarkus.http.port=8080\n"
"quarkus.lra.coordinator-url=http://localhost:8080/lra-coordinator\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2021-09-01-using-lra.adoc:484
#, fuzzy
msgid "The location of the transaction logs cannot be configured in this way and must be configured via a system property (`ObjectStoreEnvironmentBean.objectStoreDir`):"
msgstr "La ubicación de los registros de transacciones no puede ser configurada de esta manera y debe ser configurada a través de una propiedad del sistema ( `ObjectStoreEnvironmentBean.objectStoreDir`):"

#. type: delimited block -
#: upstream/_posts/2021-09-01-using-lra.adoc:494
#, no-wrap
msgid ""
"$ java -DObjectStoreEnvironmentBean.objectStoreDir=target/lra-logs -jar target/quarkus-app/quarkus-run.jar &\n"
"[1] 2443349\n"
"$ LRA_URL=$(curl http://localhost:8080/hello/start)\n"
"02021-08-11 17:42:30,464 INFO  [com.arj.ats.arjuna] (executor-thread-1) ARJUNA012170: TransactionStatusManager started on port 35827 and host 127.0.0.1 with service com.arjuna.ats.arjuna.recovery.ActionStatusService\n"
"hello with context http://localhost:8080/lra-coordinator/0_ffffc0a8000e_a985_6113fdf6_2\n"
"$ curl http://localhost:8080/lra-coordinator\n"
"[{\"lraId\":\"http://localhost:8080/lra-coordinator/0_ffffc0a8000e_a985_6113fdf6_2\",\"clientId\":\"org.acme.GreetingResource#start\",\"status\":\"Active\",\"startTime\":1628700150466,\"finishTime\":0,\"httpStatus\":204,\"topLevel\":true,\"recovering\":false}]\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2021-09-01-using-lra.adoc:497
#, fuzzy
msgid "Now end the LRA in a different method:"
msgstr "Ahora termina el LRA con un método diferente:"

#. type: delimited block -
#: upstream/_posts/2021-09-01-using-lra.adoc:504
#, no-wrap
msgid ""
"$ curl --header \"Long-Running-Action: $LRA_URL\" http://localhost:8080/hello\n"
"hello with context http://localhost:8080/lra-coordinator/0_ffffc0a8000e_a985_6113fdf6_2\n"
"completing http://localhost:8080/lra-coordinator/0_ffffc0a8000e_a985_6113fdf6_2\n"
"Hello RESTEasy\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2021-09-01-using-lra.adoc:506
#, fuzzy
msgid "A later extension will provide better support for embedded coordinators (including configuring them using standard quarkus mechanisms)."
msgstr "Una extensión posterior proporcionará un mejor soporte para los coordinadores incrustados (incluyendo la configuración de los mismos mediante los mecanismos estándar de quarkus)."

#, fuzzy
#~ msgid "---\n"
#~ msgstr "---\n"

#, fuzzy
#~ msgid ""
#~ "layout: post\n"
#~ "title: An Extension for Long Running Activities\n"
#~ "date: 2021-09-01\n"
#~ "tags: extensions\n"
#~ "synopsis: How to use the narayana LRA extension to create reliable long running activities.\n"
#~ "author: mmusgrov\n"
#~ "---\n"
#~ msgstr ""
#~ "layout: post\n"
#~ "title: Una extensión para las actividades de larga duración\n"
#~ "date: 2021-09-01\n"
#~ "tags: extensions\n"
#~ "synopsis: Cómo utilizar la extensión narayana LRA para crear actividades fiables de larga duración.\n"
#~ "author: mmusgrov\n"
#~ "---\n"
