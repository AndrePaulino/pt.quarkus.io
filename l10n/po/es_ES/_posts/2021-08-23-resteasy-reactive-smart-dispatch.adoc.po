# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2022-04-22 09:21+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Plain text
#: upstream/_posts/2021-08-23-resteasy-reactive-smart-dispatch.adoc:1
#, fuzzy, no-wrap
msgid "---\n"
msgstr "---\n"

#. type: Plain text
#: upstream/_posts/2021-08-23-resteasy-reactive-smart-dispatch.adoc:8
#, fuzzy, no-wrap
msgid ""
"layout: post\n"
"title: RESTEasy Reactive - To block or not to block\n"
"date: 2021-08-25   \n"
"tags: reactive rest\n"
"synopsis: Quarkus 2.2 includes a new dispatching strategy to make RESTEasy Reactive even better.\n"
"author: cescoffier\n"
"---\n"
msgstr ""
"layout: post\n"
"title: RESTEasy Reactive - Bloquear o no bloquear\n"
"date: 2021-08-25   \n"
"tags: reactive rest\n"
"synopsis: Quarkus 2.2 incluye una nueva estrategia de envío para que RESTEasy Reactive sea aún mejor.\n"
"author: cescoffier\n"
"---\n"

#. type: Plain text
#: upstream/_posts/2021-08-23-resteasy-reactive-smart-dispatch.adoc:14
#, fuzzy
msgid "In January 2021, the Quarkus team announced RESTEasy Reactive, a novel way to serve HTTP API in Quarkus.  Since its introduction, RESTEasy Reactive adoption has been quite good, and we plan to make it the default approach to implement HTTP API shortly."
msgstr "En enero de 2021, el equipo de Quarkus anunció RESTEasy Reactive, una forma novedosa de servir la API HTTP en Quarkus. Desde su introducción, la adopción de RESTEasy Reactive ha sido bastante buena, y planeamos convertirlo en el enfoque por defecto para implementar la API HTTP en breve."

#. type: Plain text
#: upstream/_posts/2021-08-23-resteasy-reactive-smart-dispatch.adoc:17
#, fuzzy
msgid "But, wait a minute, what does that mean for my imperative APIs? Do I need to learn reactive programming to use Quarkus now? Let's be clear: **no**.  This blog post will look at a few changes we made in RESTEasy reactive to make the transition smooth and transparent."
msgstr "Pero, un momento, ¿qué significa eso para mis APIs imperativas? ¿Necesito aprender programación reactiva para usar Quarkus ahora? Seamos claros: *no*. Esta entrada del blog examinará algunos cambios que hemos hecho en RESTEasy reactivo para hacer la transición suave y transparente."

#. type: Title ==
#: upstream/_posts/2021-08-23-resteasy-reactive-smart-dispatch.adoc:18
#, fuzzy, no-wrap
msgid "A brief history of HTTP APIs in Quarkus"
msgstr "Breve historia de las APIs HTTP en Quarkus"

#. type: Plain text
#: upstream/_posts/2021-08-23-resteasy-reactive-smart-dispatch.adoc:23
#, fuzzy
msgid "Quarkus has, since its genesis, has been able to serve HTTP API. The inclusion of https://resteasy.github.io/[RESTEasy] has been a major milestone of the first Quarkus beta releases.  With RESTEasy _classic_, you develop HTTP APIs using the well-known JAX-RS annotations such as `@GET`, `@Path`, `@POST`...  The following snippet shows a short _hello world_ example:"
msgstr "Quarkus, desde su génesis, ha sido capaz de servir a la API HTTP. La inclusión de  link:https://resteasy.github.io/[RESTEasy] ha sido un hito importante de las primeras versiones beta de Quarkus. Con RESTEasy _classic_, puedes desarrollar APIs HTTP utilizando las conocidas anotaciones JAX-RS como `@GET`, `@Path`, `@POST`... El siguiente fragmento muestra un breve ejemplo de _hello world_:"

#. type: delimited block -
#: upstream/_posts/2021-08-23-resteasy-reactive-smart-dispatch.adoc:27
#: upstream/_posts/2021-08-23-resteasy-reactive-smart-dispatch.adoc:126
#: upstream/_posts/2021-08-23-resteasy-reactive-smart-dispatch.adoc:192
#: upstream/_posts/2021-08-23-resteasy-reactive-smart-dispatch.adoc:217
#: upstream/_posts/2021-08-23-resteasy-reactive-smart-dispatch.adoc:245
#: upstream/_posts/2021-08-23-resteasy-reactive-smart-dispatch.adoc:271
#: upstream/_posts/2021-08-23-resteasy-reactive-smart-dispatch.adoc:300
#, no-wrap
msgid "package org.acme;\n"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2021-08-23-resteasy-reactive-smart-dispatch.adoc:30
#: upstream/_posts/2021-08-23-resteasy-reactive-smart-dispatch.adoc:129
#: upstream/_posts/2021-08-23-resteasy-reactive-smart-dispatch.adoc:174
#: upstream/_posts/2021-08-23-resteasy-reactive-smart-dispatch.adoc:197
#: upstream/_posts/2021-08-23-resteasy-reactive-smart-dispatch.adoc:223
#, no-wrap
msgid ""
"import javax.ws.rs.GET;\n"
"import javax.ws.rs.Path;\n"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2021-08-23-resteasy-reactive-smart-dispatch.adoc:33
#: upstream/_posts/2021-08-23-resteasy-reactive-smart-dispatch.adoc:132
#: upstream/_posts/2021-08-23-resteasy-reactive-smart-dispatch.adoc:177
#, no-wrap
msgid ""
"@Path(\"/hello\")\n"
"public class GreetingResource {\n"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2021-08-23-resteasy-reactive-smart-dispatch.adoc:39
#: upstream/_posts/2021-08-23-resteasy-reactive-smart-dispatch.adoc:138
#, no-wrap
msgid ""
"   @GET\n"
"   public String hello() {\n"
"       return \"Hello\";\n"
"   }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2021-08-23-resteasy-reactive-smart-dispatch.adoc:44
#, fuzzy
msgid "RESTEasy _classic_ invokes the HTTP endpoint (the `hello` method in the previous snippet) on a worker thread associated with the HTTP request.  It is a well-understood model, simple to understand.  However, relying on worker threads introduces a concurrency limit: the number of threads."
msgstr "RESTEasy _classic_ invoca el endpoint HTTP (el método `hello` en el fragmento anterior) en un hilo de trabajo asociado a la petición HTTP. Es un modelo bien entendido, sencillo de entender. Sin embargo, depender de los hilos de trabajo introduce un límite de concurrencia: el número de hilos."

#. type: Plain text
#: upstream/_posts/2021-08-23-resteasy-reactive-smart-dispatch.adoc:49
#, fuzzy
msgid "Even with the infusion of reactive at the core of Quarkus, RESTEasy _classic_ kept this dispatching strategy.  It was fragmenting the Quarkus ecosystem. On one side, we had the the imperative camp using RESTEasy _classic_, Hibernate ORM...  On the other side, we had the reactive camp using Reactive Routes, Vert.x APIs and other reactive extensions.  Both were using, under the hood, the reactive engine of Quarkus, but the reactive camp we using it in a more efficient way."
msgstr "Incluso con la infusión de reactivos en el núcleo de Quarkus, RESTEasy _classic_ mantuvo esta estrategia de envío. Estaba fragmentando el ecosistema de Quarkus. Por un lado, teníamos el campo imperativo que utilizaba RESTEasy _classic_, Hibernate ORM... Por otro lado, teníamos el campo reactivo que utilizaba Reactive Routes, Vert.x APIs y otras extensiones reactivas. Ambos utilizaban, bajo el capó, el motor reactivo de Quarkus, pero el campo reactivo lo utilizaba de forma más eficiente."

#. type: Plain text
#: upstream/_posts/2021-08-23-resteasy-reactive-smart-dispatch.adoc:54
#, fuzzy
msgid "Following the unification of imperative and reactive idea, in Quarkus 1.11, we introduced RESTEasy _reactive_, a novel implementation of the JAX-RS model on top of the Quarkus reactive architecture.  It offers a similar development model and much better throughput.  I won't detail the RESTEasy _reactive_ architecture and benefits.  Georgios covered them in two posts: https://quarkus.io/blog/resteasy-reactive/[RESTEasy Reactive introduction] and https://quarkus.io/blog/resteasy-reactive-faq/[Massive performance without headaches]."
msgstr "Siguiendo la unificación de la idea imperativa y reactiva, en Quarkus 1.11, introdujimos RESTEasy _reactivo_, una novedosa implementación del modelo JAX-RS sobre la arquitectura reactiva de Quarkus. Ofrece un modelo de desarrollo similar y un rendimiento mucho mayor. No voy a detallar la arquitectura _reactiva_ de RESTEasy ni sus ventajas. Georgios los cubrió en dos posts:  link:https://quarkus.io/blog/resteasy-reactive/[Introducción a RESTEasy Reactive] y  link:https://quarkus.io/blog/resteasy-reactive-faq/[Rendimiento masivo sin dolores de cabeza]."

#. type: Plain text
#: upstream/_posts/2021-08-23-resteasy-reactive-smart-dispatch.adoc:56
#, fuzzy
msgid "From the user point of view, the main difference between RESTEasy _classic_ and _reactive_ is how they call the HTTP endpoint methods:"
msgstr "Desde el punto de vista del usuario, la principal diferencia entre RESTEasy _clásico_ y _reactivo_ es la forma de llamar a los métodos del punto final HTTP:"

#. type: Plain text
#: upstream/_posts/2021-08-23-resteasy-reactive-smart-dispatch.adoc:58
#, fuzzy
msgid "_classic_ - always on a worker thread,"
msgstr "_clásico_ - siempre en un hilo de trabajo,"

#. type: Plain text
#: upstream/_posts/2021-08-23-resteasy-reactive-smart-dispatch.adoc:59
#, fuzzy
msgid "_reactive_ - on the I/O thread or on a worker thread (and you, as the developer, have the choice)"
msgstr "_reactivo_ - en el hilo de E/S o en un hilo de trabajo (y usted, como desarrollador, puede elegir)"

#. type: Plain text
#: upstream/_posts/2021-08-23-resteasy-reactive-smart-dispatch.adoc:64
#, fuzzy
msgid "You may wonder why it's so important.  Threads are expensive, especially in containers or on the cloud where the resources are limited.  Using the I/O threads avoids creating additional threads (improving memory consumption) and avoids context switches (improving response time).  Emmanuel explained the benefits in the https://quarkus.io/blog/io-thread-benchmark/[A IO thread and a worker thread walk into a bar: a microbenchmark story] blog post."
msgstr "Te preguntarás por qué es tan importante. Los hilos son caros, especialmente en contenedores o en la nube donde los recursos son limitados. El uso de los hilos de E/S evita la creación de hilos adicionales (mejorando el consumo de memoria) y evita los cambios de contexto (mejorando el tiempo de respuesta). Emmanuel explicó los beneficios en la entrada del blog  link:https://quarkus.io/blog/io-thread-benchmark/[A IO thread and a worker thread walk into a bar: a microbenchmark story]."

#. type: Title ==
#: upstream/_posts/2021-08-23-resteasy-reactive-smart-dispatch.adoc:65
#, fuzzy, no-wrap
msgid "To block or not to block, that is the question."
msgstr "Bloquear o no bloquear, esa es la cuestión."

#. type: Plain text
#: upstream/_posts/2021-08-23-resteasy-reactive-smart-dispatch.adoc:69
#, fuzzy
msgid "When we introduced RESTEasy _reactive_, we decided to use a non-blocking approach by default: if not stated otherwise, it calls the HTTP endpoint method on the I/O thread.  This model resulted in outstanding performance and was simple enough, thanks to the usage of the `@Blocking` annotation."
msgstr "Cuando introdujimos RESTEasy _reactivo_, decidimos utilizar un enfoque no bloqueante por defecto: si no se indica lo contrario, llama al método del punto final HTTP en el hilo de E/S. Este modelo dio lugar a un rendimiento extraordinario y fue bastante sencillo, gracias al uso de la anotación `@Blocking`."

#. type: Plain text
#: upstream/_posts/2021-08-23-resteasy-reactive-smart-dispatch.adoc:73
#, fuzzy
msgid "In the last few months, the adoption of RESTEasy _reactive_ has been incredible! We have received many questions and, obviously, bug reports.  The central question is about the usage of Hibernate ORM."
msgstr "En los últimos meses, la adopción de RESTEasy _reactivo_ ha sido increíble. Hemos recibido muchas preguntas y, obviamente, informes de errores. La pregunta central es sobre el uso de Hibernate ORM."

#. type: Plain text
#: upstream/_posts/2021-08-23-resteasy-reactive-smart-dispatch.adoc:76
#, fuzzy
msgid "As Hibernate ORM _classic_ (we also have Hibernate _reactive_) is blocking, you can't use it with RESTEasy _reactive_ without using the `@Blocking` annotation.  This annotation changes the dispatching strategy to use a worker thread (instead of the I/O thread)."
msgstr "Como Hibernate ORM _clásico_ (también tenemos Hibernate _reactivo_) es bloqueante, no se puede utilizar con RESTEasy _reactivo_ sin usar la anotación `@Blocking`. Esta anotación cambia la estrategia de envío para utilizar un hilo de trabajo (en lugar del hilo de E/S)."

#. type: Plain text
#: upstream/_posts/2021-08-23-resteasy-reactive-smart-dispatch.adoc:78
#, fuzzy
msgid "While the resulting model looked efficient and straightforward for us, non-aware users have seen a lot of:"
msgstr "Aunque el modelo resultante nos pareció eficiente y sencillo, los usuarios no conscientes han visto un montón de:"

#. type: delimited block -
#: upstream/_posts/2021-08-23-resteasy-reactive-smart-dispatch.adoc:82
#, no-wrap
msgid "You have attempted to perform a blocking operation on a IO thread. This is not allowed, as blocking the IO thread will cause major performance issues with your application. If you want to perform blocking EntityManager operations make sure you are doing it from a worker thread.: java.lang.IllegalStateException: You have attempted to perform a blocking operation on a IO thread. This is not allowed, as blocking the IO thread will cause major performance issues with your application. If you want to perform blocking EntityManager operations make sure you are doing it from a worker thread.\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2021-08-23-resteasy-reactive-smart-dispatch.adoc:86
#, fuzzy
msgid "The error message is explicit.  But, it rarely makes us happy when we have such a wall of text printed in our terminal."
msgstr "El mensaje de error es explícito. Pero, rara vez nos hace felices cuando tenemos tal pared de texto impresa en nuestro terminal."

#. type: Plain text
#: upstream/_posts/2021-08-23-resteasy-reactive-smart-dispatch.adoc:90
#, fuzzy
msgid "You may say... “well, let's do blocking by default.” It's not that simple.  It's as dangerous to call reactive APIs expected to be called on an I/O thread on a worker thread than calling blocking APIs on the I/O thread."
msgstr "Puedes decir... \"bueno, hagamos el bloqueo por defecto\". No es tan sencillo. Es tan peligroso llamar a las APIs reactivas que se espera que sean llamadas en un hilo de E/S en un hilo trabajador que llamar a las APIs de bloqueo en el hilo de E/S."

#. type: Title ==
#: upstream/_posts/2021-08-23-resteasy-reactive-smart-dispatch.adoc:91
#, fuzzy, no-wrap
msgid "New world, new rules! "
msgstr "¡Nuevo mundo, nuevas reglas!"

#. type: Plain text
#: upstream/_posts/2021-08-23-resteasy-reactive-smart-dispatch.adoc:95
#, fuzzy
msgid "In Quarkus 2.2.0, we introduced a new dispatching strategy based on the method signatures.  The Quarkus build-time approach lets us be wise and deduce if a method should be called on the I/O thread or a worker thread at build time, reducing the runtime overhead."
msgstr "En Quarkus 2.2.0, introdujimos una nueva estrategia de despacho basada en las firmas de los métodos. El enfoque de Quarkus en tiempo de construcción nos permite ser sabios y deducir si un método debe ser llamado en el hilo de E/S o en un hilo de trabajo en tiempo de construcción, reduciendo la sobrecarga en tiempo de ejecución."

#. type: Plain text
#: upstream/_posts/2021-08-23-resteasy-reactive-smart-dispatch.adoc:97
#, fuzzy
msgid "The following table summarizes the new set of rules:"
msgstr "El siguiente cuadro resume el nuevo conjunto de normas:"

#. type: Table
#: upstream/_posts/2021-08-23-resteasy-reactive-smart-dispatch.adoc:100
#, fuzzy, no-wrap
msgid "Method signature"
msgstr "Firma del método"

#. type: Table
#: upstream/_posts/2021-08-23-resteasy-reactive-smart-dispatch.adoc:102
#, fuzzy, no-wrap
msgid "Dispatching strategy"
msgstr "Estrategia de distribución"

#. type: Table
#: upstream/_posts/2021-08-23-resteasy-reactive-smart-dispatch.adoc:102
#, fuzzy, no-wrap
msgid "`T method(...)`"
msgstr "`T method(…​)`"

#. type: Table
#: upstream/_posts/2021-08-23-resteasy-reactive-smart-dispatch.adoc:103
#: upstream/_posts/2021-08-23-resteasy-reactive-smart-dispatch.adoc:108
#, fuzzy, no-wrap
msgid "Worker thread"
msgstr "Hilo de trabajo"

#. type: Table
#: upstream/_posts/2021-08-23-resteasy-reactive-smart-dispatch.adoc:103
#, fuzzy, no-wrap
msgid "`Uni<T> method(...)`"
msgstr "`Uni&amp;lt;T&amp;gt; method(…​)`"

#. type: Table
#: upstream/_posts/2021-08-23-resteasy-reactive-smart-dispatch.adoc:104
#: upstream/_posts/2021-08-23-resteasy-reactive-smart-dispatch.adoc:105
#: upstream/_posts/2021-08-23-resteasy-reactive-smart-dispatch.adoc:106
#: upstream/_posts/2021-08-23-resteasy-reactive-smart-dispatch.adoc:107
#, fuzzy, no-wrap
msgid "I/O thread"
msgstr "Hilo de E/S"

#. type: Table
#: upstream/_posts/2021-08-23-resteasy-reactive-smart-dispatch.adoc:104
#, fuzzy, no-wrap
msgid "`CompletionStage<T> method(...)`"
msgstr "`CompletionStage&amp;lt;T&amp;gt; method(…​)`"

#. type: Table
#: upstream/_posts/2021-08-23-resteasy-reactive-smart-dispatch.adoc:105
#, fuzzy, no-wrap
msgid "`Multi<T> method(...)`"
msgstr "`Multi&amp;lt;T&amp;gt; method(…​)`"

#. type: Table
#: upstream/_posts/2021-08-23-resteasy-reactive-smart-dispatch.adoc:106
#, fuzzy, no-wrap
msgid "`Publisher<T> method(...)`"
msgstr "`Publisher&amp;lt;T&amp;gt; method(…​)`"

#. type: Table
#: upstream/_posts/2021-08-23-resteasy-reactive-smart-dispatch.adoc:107
#, fuzzy, no-wrap
msgid "`@Transactional CompletionStage<T>  method(...)`"
msgstr "`@Transactional CompletionStage&amp;lt;T&amp;gt; method(…​)`"

#. type: Plain text
#: upstream/_posts/2021-08-23-resteasy-reactive-smart-dispatch.adoc:113
#, fuzzy
msgid "Basically: _synchronous methods default to worker threads, and asynchronous methods default to I/O threads, except if explicitly stated otherwise_.  Of course, you can override the behavior using the `@Blocking` and `@NonBlocking` annotations.  The `@Transactional` annotation is an exception to the default rules as it often means you are accessing blocking resources (such as an entity manager)."
msgstr "Básicamente: los _métodos síncronos por defecto son hilos de trabajo, y los métodos asíncronos por defecto son hilos de E/S, excepto si se indica explícitamente lo contrario_. Por supuesto, puedes anular el comportamiento utilizando las anotaciones `@Blocking` y `@NonBlocking`. La anotación `@Transactional` es una excepción a las reglas por defecto, ya que a menudo significa que estás accediendo a recursos bloqueantes (como un gestor de entidades)."

#. type: Title ==
#: upstream/_posts/2021-08-23-resteasy-reactive-smart-dispatch.adoc:114
#, fuzzy, no-wrap
msgid "What does that change for you? "
msgstr "¿Qué cambia para ti?"

#. type: Plain text
#: upstream/_posts/2021-08-23-resteasy-reactive-smart-dispatch.adoc:117
#, fuzzy
msgid "Let’s discuss a few examples explaining how this new strategy improves the user experience without limiting efficiency and flexibility."
msgstr "Veamos algunos ejemplos que explican cómo esta nueva estrategia mejora la experiencia del usuario sin limitar la eficacia y la flexibilidad."

#. type: Title ===
#: upstream/_posts/2021-08-23-resteasy-reactive-smart-dispatch.adoc:119
#, fuzzy, no-wrap
msgid "Hello RESTEasy Reactive"
msgstr "Hola RESTEasy Reactive"

#. type: Plain text
#: upstream/_posts/2021-08-23-resteasy-reactive-smart-dispatch.adoc:122
#, fuzzy
msgid "Using RESTEasy _reactive_ does not change the _hello_ example from above:"
msgstr "El uso de RESTEasy _reactivo_ no cambia el ejemplo de _hola_ de arriba:"

#. type: Plain text
#: upstream/_posts/2021-08-23-resteasy-reactive-smart-dispatch.adoc:124
#: upstream/_posts/2021-08-23-resteasy-reactive-smart-dispatch.adoc:145
#: upstream/_posts/2021-08-23-resteasy-reactive-smart-dispatch.adoc:190
#: upstream/_posts/2021-08-23-resteasy-reactive-smart-dispatch.adoc:215
#: upstream/_posts/2021-08-23-resteasy-reactive-smart-dispatch.adoc:243
#: upstream/_posts/2021-08-23-resteasy-reactive-smart-dispatch.adoc:269
#: upstream/_posts/2021-08-23-resteasy-reactive-smart-dispatch.adoc:298
#, fuzzy, no-wrap
msgid "[source, java]    \n"
msgstr "[source, java]    \n"

#. type: Plain text
#: upstream/_posts/2021-08-23-resteasy-reactive-smart-dispatch.adoc:143
#, fuzzy
msgid "That method is invoked on a worker thread because it has a synchronous signature.  Previously (before Quarkus 2.2), with RESTEasy _reactive_, it would have been called on the I/O thread.  To switch back to that behavior, add `@NonBlocking`:"
msgstr "Ese método se invoca en un hilo de trabajo porque tiene una firma sincrónica. Anteriormente (antes de Quarkus 2.2), con RESTEasy _reactivo_, habría sido llamado en el hilo de E/S. Para volver a ese comportamiento, añada `@NonBlocking`:"

#. type: Plain text
#: upstream/_posts/2021-08-23-resteasy-reactive-smart-dispatch.adoc:147
#, fuzzy, no-wrap
msgid ""
"\n"
"package org.acme;\n"
msgstr "paquete org.acme;"

#. type: Plain text
#: upstream/_posts/2021-08-23-resteasy-reactive-smart-dispatch.adoc:149
#, fuzzy
msgid "import io.smallrye.common.annotation.NonBlocking;"
msgstr "import io.smallrye.common.annotation.NonBlocking;"

#. type: Plain text
#: upstream/_posts/2021-08-23-resteasy-reactive-smart-dispatch.adoc:152
#, fuzzy
msgid "import javax.ws.rs.GET; import javax.ws.rs.Path;"
msgstr "import javax.ws.rs.GET; import javax.ws.rs.Path;"

#. type: Plain text
#: upstream/_posts/2021-08-23-resteasy-reactive-smart-dispatch.adoc:155
#, fuzzy
msgid "@Path(\"/hello\")  public class GreetingResource {"
msgstr "@Path(\"/hola\") public class SaludoRecurso {"

#. type: Plain text
#: upstream/_posts/2021-08-23-resteasy-reactive-smart-dispatch.adoc:162
#, fuzzy, no-wrap
msgid ""
"   @GET\n"
"   @NonBlocking\n"
"   public String hello() {\n"
"       return \"Hello\";\n"
"   }\n"
"}\n"
msgstr ""
"<pre>   @GET\n"
"   @SinBloqueo\n"
"   public String hola() {\n"
"       return \"Hola\";\n"
"   }\n"
"}</pre>"

#. type: delimited block -
#: upstream/_posts/2021-08-23-resteasy-reactive-smart-dispatch.adoc:165
#, no-wrap
msgid "Alternatively, you can return a `Uni`:    \n"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2021-08-23-resteasy-reactive-smart-dispatch.adoc:169
#, no-wrap
msgid ""
"[source, java]    \n"
"----    \n"
"package org.acme;\n"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2021-08-23-resteasy-reactive-smart-dispatch.adoc:171
#, no-wrap
msgid "import io.smallrye.mutiny.Uni;\n"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2021-08-23-resteasy-reactive-smart-dispatch.adoc:183
#, no-wrap
msgid ""
"   @GET\n"
"   public Uni<String> hello() {\n"
"       return Uni.createFrom().item(\"Hello\");\n"
"   }\n"
"}\n"
msgstr ""

#. type: Title ===
#: upstream/_posts/2021-08-23-resteasy-reactive-smart-dispatch.adoc:185
#, fuzzy, no-wrap
msgid "Integrating with Hibernate ORM"
msgstr "Integración con Hibernate ORM"

#. type: Plain text
#: upstream/_posts/2021-08-23-resteasy-reactive-smart-dispatch.adoc:188
#, fuzzy
msgid "Following the feedback from users, let’s imagine you want to use Hibernate _classic_ with RESTEasy _reactive_:"
msgstr "Siguiendo los comentarios de los usuarios, imaginemos que quieres utilizar Hibernate _clásico_ con RESTEasy _reactivo_:"

#. type: delimited block -
#: upstream/_posts/2021-08-23-resteasy-reactive-smart-dispatch.adoc:194
#, no-wrap
msgid "import org.jboss.resteasy.reactive.RestQuery;\n"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2021-08-23-resteasy-reactive-smart-dispatch.adoc:200
#: upstream/_posts/2021-08-23-resteasy-reactive-smart-dispatch.adoc:226
#: upstream/_posts/2021-08-23-resteasy-reactive-smart-dispatch.adoc:255
#: upstream/_posts/2021-08-23-resteasy-reactive-smart-dispatch.adoc:281
#: upstream/_posts/2021-08-23-resteasy-reactive-smart-dispatch.adoc:311
#, no-wrap
msgid ""
"@Path(\"/fruit\")\n"
"public class FruitResource {\n"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2021-08-23-resteasy-reactive-smart-dispatch.adoc:206
#, no-wrap
msgid ""
"   @GET\n"
"   public Fruit getFruit(@RestQuery String name) {\n"
"       return Fruit.find(\"name\", name).firstResult();\n"
"   }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2021-08-23-resteasy-reactive-smart-dispatch.adoc:209
#, fuzzy
msgid "You don't need to use `@Blocking` as the signature is synchronous. No more wall of text!"
msgstr "No es necesario utilizar `@Blocking` ya que la firma es sincrónica. ¡Se acabó el muro de texto!"

#. type: Title ===
#: upstream/_posts/2021-08-23-resteasy-reactive-smart-dispatch.adoc:210
#, fuzzy, no-wrap
msgid "Integrating with Hibernate Reactive"
msgstr "Integración con Hibernate Reactive"

#. type: Plain text
#: upstream/_posts/2021-08-23-resteasy-reactive-smart-dispatch.adoc:213
#, fuzzy
msgid "If you use Hibernate _reactive_, you will use the Mutiny API, and so the resulting code will be:"
msgstr "Si utiliza Hibernate _reactivo_, utilizará la API de Mutiny, por lo que el código resultante será"

#. type: delimited block -
#: upstream/_posts/2021-08-23-resteasy-reactive-smart-dispatch.adoc:220
#, no-wrap
msgid ""
"import io.smallrye.mutiny.Uni;\n"
"import org.jboss.resteasy.reactive.RestQuery;\n"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2021-08-23-resteasy-reactive-smart-dispatch.adoc:232
#, no-wrap
msgid ""
"   @GET\n"
"   public Uni<Fruit> getFruit(@RestQuery String name) {\n"
"       return Fruit.find(\"name\", name).firstResult();\n"
"   }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2021-08-23-resteasy-reactive-smart-dispatch.adoc:235
#, fuzzy
msgid "This method runs on the I/O thread, which is what Hibernate _reactive_ expects."
msgstr "Este método se ejecuta en el hilo de E/S, que es lo que espera Hibernate _reactivo_."

#. type: Title ===
#: upstream/_posts/2021-08-23-resteasy-reactive-smart-dispatch.adoc:236
#, fuzzy, no-wrap
msgid "Integrating with Kafka"
msgstr "Integración con Kafka"

#. type: Plain text
#: upstream/_posts/2021-08-23-resteasy-reactive-smart-dispatch.adoc:241
#, fuzzy
msgid "If you combine HTTP and Kafka (using reactive messaging), you will use an emitter.  Depending on the emitter type (`Emitter` or `MutinyEmitter`), the `send` method returns a `CompletionStage` or a `Uni`.  So, the following HTTP method runs on the I/O thread:"
msgstr "Si se combinan HTTP y Kafka (utilizando mensajería reactiva), se utilizará un emisor. Dependiendo del tipo de emisor ( `Emitter` o `MutinyEmitter`), el método `send` devuelve un `CompletionStage` o un `Uni`. Así, el siguiente método HTTP se ejecuta en el hilo de E/S:"

#. type: delimited block -
#: upstream/_posts/2021-08-23-resteasy-reactive-smart-dispatch.adoc:249
#: upstream/_posts/2021-08-23-resteasy-reactive-smart-dispatch.adoc:304
#, no-wrap
msgid ""
"import io.smallrye.mutiny.Uni;\n"
"import io.smallrye.reactive.messaging.MutinyEmitter;\n"
"import org.eclipse.microprofile.reactive.messaging.Channel;\n"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2021-08-23-resteasy-reactive-smart-dispatch.adoc:252
#, no-wrap
msgid ""
"import javax.ws.rs.POST;\n"
"import javax.ws.rs.Path;\n"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2021-08-23-resteasy-reactive-smart-dispatch.adoc:258
#: upstream/_posts/2021-08-23-resteasy-reactive-smart-dispatch.adoc:284
#: upstream/_posts/2021-08-23-resteasy-reactive-smart-dispatch.adoc:314
#, no-wrap
msgid ""
"   @Channel(\"kafka\")\n"
"   MutinyEmitter<Fruit> emitter;\n"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2021-08-23-resteasy-reactive-smart-dispatch.adoc:264
#, no-wrap
msgid ""
"   @POST\n"
"   public Uni<Void> writeToKafka(Fruit fruit) {\n"
"       return emitter.send(fruit);\n"
"   }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2021-08-23-resteasy-reactive-smart-dispatch.adoc:267
#, fuzzy
msgid "If you change it to a synchronous signature, it runs on a worker thread:"
msgstr "Si se cambia a una firma sincrónica, se ejecuta en un hilo de trabajo:"

#. type: delimited block -
#: upstream/_posts/2021-08-23-resteasy-reactive-smart-dispatch.adoc:274
#, no-wrap
msgid ""
"import io.smallrye.reactive.messaging.MutinyEmitter;\n"
"import org.eclipse.microprofile.reactive.messaging.Channel;\n"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2021-08-23-resteasy-reactive-smart-dispatch.adoc:278
#, no-wrap
msgid ""
"import javax.ws.rs.POST;\n"
"import javax.ws.rs.Path;\n"
"import java.time.Duration;\n"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2021-08-23-resteasy-reactive-smart-dispatch.adoc:291
#, no-wrap
msgid ""
"   @POST\n"
"   public void writeToKafka(Fruit fruit) {\n"
"       System.out.println(Thread.currentThread().getName());\n"
"       emitter.send(fruit).await().atMost(Duration.ofSeconds(5));\n"
"   }\n"
"}\n"
msgstr ""

#. type: Title ===
#: upstream/_posts/2021-08-23-resteasy-reactive-smart-dispatch.adoc:293
#, fuzzy, no-wrap
msgid "Combining RESTEasy Reactive, Hibernate ORM and Kafka"
msgstr "Combinación de RESTEasy Reactive, Hibernate ORM y Kafka"

#. type: Plain text
#: upstream/_posts/2021-08-23-resteasy-reactive-smart-dispatch.adoc:296
#, fuzzy
msgid "Let's now combine Resteasy _reactive_, Hibernate ORM _classic_ and Kafka to persist an entity and write it to a Kafka topic:"
msgstr "Ahora vamos a combinar Resteasy _reactivo_, Hibernate ORM _clásico_ y Kafka para persistir una entidad y escribirla en un tema de Kafka:"

#. type: delimited block -
#: upstream/_posts/2021-08-23-resteasy-reactive-smart-dispatch.adoc:308
#, no-wrap
msgid ""
"import javax.transaction.Transactional;\n"
"import javax.ws.rs.POST;\n"
"import javax.ws.rs.Path;\n"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2021-08-23-resteasy-reactive-smart-dispatch.adoc:323
#, no-wrap
msgid ""
"   @POST\n"
"   @Transactional\n"
"   public Uni<Void> persistAndWriteToKafka(Fruit fruit) {\n"
"       System.out.println(Thread.currentThread().getName());\n"
"       fruit.persist();\n"
"       return emitter.send(fruit);\n"
"   }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2021-08-23-resteasy-reactive-smart-dispatch.adoc:327
#, fuzzy
msgid "This method runs on a worker thread despite the signature.  The `@Transactional` annotation configures the dispatching strategy to use a worker thread."
msgstr "Este método se ejecuta en un hilo de trabajo a pesar de la firma. La anotación `@Transactional` configura la estrategia de envío para utilizar un hilo de trabajo."

#. type: Title ==
#: upstream/_posts/2021-08-23-resteasy-reactive-smart-dispatch.adoc:329
#, fuzzy, no-wrap
msgid "Summary"
msgstr "Resumen"

#. type: Plain text
#: upstream/_posts/2021-08-23-resteasy-reactive-smart-dispatch.adoc:332
#, fuzzy
msgid "With Quarkus 2.2, the dispatching strategy of RESTEasy _reactive_ becomes smarter thus improving the developer experience."
msgstr "Con Quarkus 2.2, la estrategia de envío de RESTEasy _reactivo_ se vuelve más inteligente, mejorando así la experiencia del desarrollador."

#. type: Plain text
#: upstream/_posts/2021-08-23-resteasy-reactive-smart-dispatch.adoc:334
#, fuzzy
msgid "You don't need to learn the reactive way; you can keep using imperative code."
msgstr "No necesitas aprender el modo reactivo; puedes seguir usando código imperativo."

#. type: Plain text
#: upstream/_posts/2021-08-23-resteasy-reactive-smart-dispatch.adoc:335
#, fuzzy
msgid "You don't need to think about your threads; Quarkus does that for you."
msgstr "No necesitas pensar en tus hilos; Quarkus lo hace por ti."

#. type: Plain text
#: upstream/_posts/2021-08-23-resteasy-reactive-smart-dispatch.adoc:336
#, fuzzy
msgid "You don't lose in flexibility; you can override the decision."
msgstr "No pierdes en flexibilidad; puedes anular la decisión."

#. type: Plain text
#: upstream/_posts/2021-08-23-resteasy-reactive-smart-dispatch.adoc:339
#, fuzzy
msgid "Starting with Quarkus 2.3, the Quarkus team is thinking of making RESTEasy _reactive_ the default way to implement HTTP APIs.  It does not mean that the RESTEasy _classic_ extension will be retired, just that we reach the point where RESTEasy _reactive_ gives you more without burden."
msgstr "A partir de Quarkus 2.3, el equipo de Quarkus está pensando en hacer de RESTEasy _reactivo_ la forma por defecto de implementar las APIs HTTP. Esto no significa que la extensión _clásica_ de RESTEasy vaya a ser retirada, sólo que llegamos al punto en el que RESTEasy _reactivo_ te da más sin carga."
