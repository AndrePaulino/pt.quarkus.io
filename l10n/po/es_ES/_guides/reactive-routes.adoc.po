# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2022-06-29 15:36+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc
#. type: Title =
#: upstream/_guides/reactive-routes.adoc:6
#, fuzzy, no-wrap
msgid "Using Reactive Routes"
msgstr "Uso de rutas reactivas"

#. type: Plain text
#: upstream/_guides/reactive-routes.adoc:14
#, fuzzy
msgid "Reactive routes propose an alternative approach to implement HTTP endpoints where you declare and chain _routes_.  This approach became very popular in the JavaScript world, with frameworks like Express.Js or Hapi.  Quarkus also offers the possibility to use reactive routes.  You can implement REST API with routes only or combine them with JAX-RS resources and servlets."
msgstr "Las rutas reactivas proponen un enfoque alternativo para implementar puntos finales HTTP donde se declaran y encadenan _rutas_. Este enfoque se hizo muy popular en el mundo de JavaScript, con frameworks como Express.Js o Hapi. Quarkus también ofrece la posibilidad de utilizar rutas reactivas. Puedes implementar la API REST sólo con rutas o combinarlas con recursos JAX-RS y servlets."

#. type: Plain text
#: upstream/_guides/reactive-routes.adoc:16
#, fuzzy
msgid "The code presented in this guide is available in this {quickstarts-base-url}[GitHub repository] under the {quickstarts-tree-url}/reactive-routes-quickstart[`reactive-routes-quickstart` directory]"
msgstr "El código presentado en esta guía está disponible en este {quickstarts-base-url}[repositorio GitHub] bajo el directorio {quickstarts-tree-url}/reactive-routes-quickstart[ `reactive-routes-quickstart` ]"

#. type: Plain text
#: upstream/_guides/reactive-routes.adoc:20
#, fuzzy
msgid "Reactive Routes were initially introduced to provide a reactive execution model for HTTP APIs on top of the xref:quarkus-reactive-architecture.adoc[Quarkus Reactive Architecture].  With the introduction of xref:resteasy-reactive.adoc[RESTEasy Reactive], you can now implement reactive HTTP APIs and still use JAX-RS annotations.  Reactive Routes are still supported, especially if you want a more _route-based_ approach, and something closer to the underlying reactive engine."
msgstr "Las Rutas Reactivas se introdujeron inicialmente para proporcionar un modelo de ejecución reactiva para las APIs HTTP sobre la  link:quarkus-reactive-architecture.html[Arquitectura Reactiva de Quarkus]. Con la introducción de  link:resteasy-reactive.html[RESTEasy Reactive], ahora puedes implementar APIs HTTP reactivas y seguir utilizando anotaciones JAX-RS. Las Rutas Reactivas siguen siendo soportadas, especialmente si se desea un enfoque más _basado en rutas_, y algo más cercano al motor reactivo subyacente."

#. type: Title ==
#: upstream/_guides/reactive-routes.adoc:21
#, fuzzy, no-wrap
msgid "Quarkus HTTP"
msgstr "Quarkus HTTP"

#. type: Plain text
#: upstream/_guides/reactive-routes.adoc:28
#, fuzzy
msgid "Before going further, let's have a look at the HTTP layer of Quarkus.  Quarkus HTTP support is based on a non-blocking and reactive engine (Eclipse Vert.x and Netty).  All the HTTP requests your application receive are handled by _event loops_ (I/O Thread) and then are routed towards the code that manages the request.  Depending on the destination, it can invoke the code managing the request on a worker thread (Servlet, Jax-RS) or use the IO Thread (reactive route).  Note that because of this, a reactive route must be non-blocking or explicitly declare its blocking nature (which would result by being called on a worker thread)."
msgstr "Antes de continuar, echemos un vistazo a la capa HTTP de Quarkus. El soporte HTTP de Quarkus se basa en un motor no bloqueante y reactivo (Eclipse Vert.x y Netty). Todas las peticiones HTTP que recibe tu aplicación son manejadas por _bucles de eventos_ (I/O Thread) y luego son enrutadas hacia el código que gestiona la petición. Dependiendo del destino, puede invocar el código que gestiona la petición en un hilo de trabajo (Servlet, Jax-RS) o utilizar el Hilo IO (ruta reactiva). Tenga en cuenta que, debido a esto, una ruta reactiva debe ser no bloqueante o declarar explícitamente su naturaleza bloqueante (lo que resultaría al ser llamada en un hilo trabajador)."

#. type: Plain text
#: upstream/_guides/reactive-routes.adoc:30
#, fuzzy
msgid "image:http-architecture.png[alt=Quarkus HTTP Architecture]"
msgstr "image:http-architecture.png[alt=Quarkus HTTP Architecture]"

#. type: Plain text
#: upstream/_guides/reactive-routes.adoc:32
#, fuzzy
msgid "See the xref:quarkus-reactive-architecture.adoc[Quarkus Reactive Architecture documentation] for further details on this topic."
msgstr "Consulte la  link:quarkus-reactive-architecture.html[documentación de la Arquitectura Reactiva de Quarkus] para obtener más detalles sobre este tema."

#. type: Title ==
#: upstream/_guides/reactive-routes.adoc:34
#, fuzzy, no-wrap
msgid "Declaring reactive routes"
msgstr "Declaración de rutas reactivas"

#. type: Plain text
#: upstream/_guides/reactive-routes.adoc:38
#, fuzzy
msgid "The first way to use reactive routes is to use the `@Route` annotation.  To have access to this annotation, you need to add the `quarkus-reactive-routes` extension:"
msgstr "La primera forma de utilizar las rutas reactivas es usar la anotación `@Route`. Para tener acceso a esta anotación, es necesario añadir la extensión `quarkus-reactive-routes`:"

#. type: Plain text
#: upstream/_guides/reactive-routes.adoc:40
#, fuzzy
msgid "In your build file, add:"
msgstr "En su archivo de construcción, añada:"

#. type: Block title
#: upstream/_guides/reactive-routes.adoc:42
#: upstream/_guides/reactive-routes.adoc:717
#, fuzzy, no-wrap
msgid "pom.xml"
msgstr "pom.xml"

#. type: delimited block -
#: upstream/_guides/reactive-routes.adoc:48
#, no-wrap
msgid ""
"<dependency>\n"
"    <groupId>io.quarkus</groupId>\n"
"    <artifactId>quarkus-reactive-routes</artifactId>\n"
"</dependency>\n"
msgstr ""

#. type: Block title
#: upstream/_guides/reactive-routes.adoc:51
#: upstream/_guides/reactive-routes.adoc:726
#, fuzzy, no-wrap
msgid "build.gradle"
msgstr "build.gradle"

#. type: delimited block -
#: upstream/_guides/reactive-routes.adoc:54
#, no-wrap
msgid "implementation(\"io.quarkus:quarkus-reactive-routes\")\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/reactive-routes.adoc:57
#, fuzzy
msgid "Then in a _bean_, you can use the `@Route` annotation as follows:"
msgstr "A continuación, en un _bean_, puedes utilizar la anotación `@Route` de la siguiente manera:"

#. type: delimited block -
#: upstream/_guides/reactive-routes.adoc:61
#: upstream/_guides/reactive-routes.adoc:669
#, no-wrap
msgid "package org.acme.reactive.routes;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/reactive-routes.adoc:66
#, no-wrap
msgid ""
"import io.quarkus.vertx.web.Route;\n"
"import io.quarkus.vertx.web.Route.HttpMethod;\n"
"import io.quarkus.vertx.web.RoutingExchange;\n"
"import io.vertx.ext.web.RoutingContext;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/reactive-routes.adoc:68
#, no-wrap
msgid "import javax.enterprise.context.ApplicationScoped;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/reactive-routes.adoc:71
#, no-wrap
msgid ""
"@ApplicationScoped // <1>\n"
"public class MyDeclarativeRoutes {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/reactive-routes.adoc:77
#, no-wrap
msgid ""
"    // neither path nor regex is set - match a path derived from the method name\n"
"    @Route(methods = Route.HttpMethod.GET) // <2>\n"
"    void hello(RoutingContext rc) { // <3>\n"
"        rc.response().end(\"hello\");\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/reactive-routes.adoc:82
#, no-wrap
msgid ""
"    @Route(path = \"/world\") \n"
"    String helloWorld() { // <4>\n"
"        return \"Hello world!\";\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/reactive-routes.adoc:88
#, no-wrap
msgid ""
"    @Route(path = \"/greetings\", methods = Route.HttpMethod.GET)\n"
"    void greetings(RoutingExchange ex) { // <5>\n"
"        ex.ok(\"hello \" + ex.getParam(\"name\").orElse(\"world\"));\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/reactive-routes.adoc:90
#, fuzzy
msgid "If there is a reactive route found on a class with no scope annotation then `@javax.inject.Singleton` is added automatically."
msgstr "Si se encuentra una ruta reactiva en una clase sin anotación de alcance, se añade automáticamente `@javax.inject.Singleton`."

#. type: Plain text
#: upstream/_guides/reactive-routes.adoc:91
#, fuzzy
msgid "The `@Route` annotation indicates that the method is a reactive route. Again, by default, the code contained in the method must not block."
msgstr "La anotación `@Route` indica que el método es una ruta reactiva. De nuevo, por defecto, el código contenido en el método no debe bloquearse."

#. type: Plain text
#: upstream/_guides/reactive-routes.adoc:92
#, fuzzy
msgid "The method gets a https://vertx.io/docs/apidocs/io/vertx/ext/web/RoutingContext.html[`RoutingContext`] as a parameter. From the `RoutingContext` you can retrieve the HTTP request (using `request()`) and write the response using `response().end(...)`."
msgstr "El método recibe un  link:https://vertx.io/docs/apidocs/io/vertx/ext/web/RoutingContext.html[`RoutingContext`] como parámetro. Desde el `RoutingContext` se puede recuperar la petición HTTP (usando `request()`) y escribir la respuesta usando `response().end(…​)`."

#. type: Plain text
#: upstream/_guides/reactive-routes.adoc:93
#, fuzzy
msgid "If the annotated method does not return `void` the arguments are optional."
msgstr "Si el método anotado no devuelve `void` los argumentos son opcionales."

#. type: Plain text
#: upstream/_guides/reactive-routes.adoc:94
#, fuzzy
msgid "`RoutingExchange` is a convenient wrapper of `RoutingContext` which provides some useful methods."
msgstr "`RoutingExchange` es un práctico envoltorio de `RoutingContext` que proporciona algunos métodos útiles."

#. type: Plain text
#: upstream/_guides/reactive-routes.adoc:96
#, fuzzy
msgid "More details about using the `RoutingContext` is available in the https://vertx.io/docs/vertx-web/java/[Vert.x Web documentation]."
msgstr "Encontrará más detalles sobre el uso de `RoutingContext` en la  link:https://vertx.io/docs/vertx-web/java/[documentación de Vert.x Web]."

#. type: Plain text
#: upstream/_guides/reactive-routes.adoc:98
#, fuzzy
msgid "The `@Route` annotation allows you to configure:"
msgstr "La anotación `@Route` le permite configurar:"

#. type: Plain text
#: upstream/_guides/reactive-routes.adoc:100
#, fuzzy
msgid "The `path` - for routing by path, using the https://vertx.io/docs/vertx-web/java/#_capturing_path_parameters[Vert.x Web format]"
msgstr "El `path` - para el enrutamiento por ruta, utilizando el  link:https://vertx.io/docs/vertx-web/java/#_capturing_path_parameters[formato web Vert.x]"

#. type: Plain text
#: upstream/_guides/reactive-routes.adoc:101
#, fuzzy
msgid "The `regex` - for routing with regular expressions, see https://vertx.io/docs/vertx-web/java/#_routing_with_regular_expressions[for more details]"
msgstr "El `regex` - para el enrutamiento con expresiones regulares, ver  link:https://vertx.io/docs/vertx-web/java/#_routing_with_regular_expressions[para más detalles]"

#. type: Plain text
#: upstream/_guides/reactive-routes.adoc:102
#, fuzzy
msgid "The `methods` - the HTTP verb triggering the route such as `GET`, `POST`..."
msgstr "El `methods` - el verbo HTTP que desencadena la ruta como `GET`, `POST`..."

#. type: Plain text
#: upstream/_guides/reactive-routes.adoc:103
#, fuzzy
msgid "The `type` - it can be _normal_ (non-blocking), _blocking_ (method dispatched on a worker thread), or _failure_ to indicate that this route is called on failures"
msgstr "El `type` - puede ser _normal_ (sin bloqueo), _de bloqueo_ (método despachado en un hilo de trabajo), o de _fallo_ para indicar que esta ruta se llama en los fallos"

#. type: Plain text
#: upstream/_guides/reactive-routes.adoc:105
#, fuzzy
msgid "The `order` - the order of the route when several routes are involved in handling the incoming request.  Must be positive for regular user routes."
msgstr "El `order` - el orden de la ruta cuando varias rutas están involucradas en el manejo de la solicitud entrante. Debe ser positivo para las rutas regulares de los usuarios."

#. type: Plain text
#: upstream/_guides/reactive-routes.adoc:106
#, fuzzy
msgid "The produced and consumed mime types using `produces`, and `consumes`"
msgstr "Los tipos mime producidos y consumidos utilizando `produces`, y `consumes`"

#. type: Plain text
#: upstream/_guides/reactive-routes.adoc:108
#, fuzzy
msgid "For instance, you can declare a blocking route as follows:"
msgstr "Por ejemplo, puede declarar una ruta de bloqueo de la siguiente manera:"

#. type: delimited block -
#: upstream/_guides/reactive-routes.adoc:115
#, no-wrap
msgid ""
"@Route(methods = HttpMethod.POST, path = \"/post\", type = Route.HandlerType.BLOCKING)\n"
"public void blocking(RoutingContext rc) {\n"
"    // ...\n"
"}\n"
msgstr ""

#. type: delimited block =
#: upstream/_guides/reactive-routes.adoc:120
#, fuzzy
msgid "Alternatively, you can use `@io.smallrye.common.annotation.Blocking` and omit the `type = Route.HandlerType.BLOCKING`:"
msgstr "También puede utilizar `@io.smallrye.common.annotation.Blocking` y omitir el `type = Route.HandlerType.BLOCKING`:"

#. type: delimited block -
#: upstream/_guides/reactive-routes.adoc:127
#, no-wrap
msgid ""
"@Route(methods = HttpMethod.POST, path = \"/post\")\n"
"@Blocking\n"
"public void blocking(RoutingContext rc) {\n"
"    // ...\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/reactive-routes.adoc:129
#, fuzzy
msgid "When `@Blocking` is used, it ignores the `type` attribute of `@Route`."
msgstr "Cuando se utiliza `@Blocking`, se ignora el atributo `type` de `@Route`."

#. type: delimited block =
#: upstream/_guides/reactive-routes.adoc:132
#, fuzzy
msgid "The `@Route` annotation is repeatable and so you can declare several routes for a single method:"
msgstr "La anotación `@Route` es repetible, por lo que se pueden declarar varias rutas para un mismo método:"

#. type: delimited block -
#: upstream/_guides/reactive-routes.adoc:140
#, no-wrap
msgid ""
"@Route(path = \"/first\") <1>\n"
"@Route(path = \"/second\")\n"
"public void route(RoutingContext rc) {\n"
"    // ...\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/reactive-routes.adoc:142
#, fuzzy
msgid "Each route can use different paths, methods..."
msgstr "Cada ruta puede utilizar diferentes caminos, métodos..."

#. type: Plain text
#: upstream/_guides/reactive-routes.adoc:144
#, fuzzy
msgid "If no content-type header is set then we will try to use the most acceptable content type as defined by `io.vertx.ext.web.RoutingContext.getAcceptableContentType()`."
msgstr "Si no se establece ninguna cabecera de tipo de contenido, se intentará utilizar el tipo de contenido más aceptable definido por `io.vertx.ext.web.RoutingContext.getAcceptableContentType()`."

#. type: delimited block -
#: upstream/_guides/reactive-routes.adoc:151
#, no-wrap
msgid ""
"@Route(path = \"/person\", produces = \"text/html\") <1>\n"
"String person() {\n"
"    // ...\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/reactive-routes.adoc:153
#, fuzzy
msgid "If the `accept` header matches `text/html` we set the content type automatically."
msgstr "Si la cabecera `accept` coincide con `text/html` establecemos el tipo de contenido automáticamente."

#. type: Title ===
#: upstream/_guides/reactive-routes.adoc:154
#, fuzzy, no-wrap
msgid "Handling conflicting routes"
msgstr "Gestión de rutas conflictivas"

#. type: Plain text
#: upstream/_guides/reactive-routes.adoc:158
#, fuzzy
msgid "You may end up with multiple routes matching a given path.  In the following example, both route matches `/accounts/me`:"
msgstr "Puede terminar con múltiples rutas que coincidan con una ruta determinada. En el siguiente ejemplo, ambas rutas coinciden con `/accounts/me`:"

#. type: delimited block -
#: upstream/_guides/reactive-routes.adoc:165
#, no-wrap
msgid ""
"@Route(path = \"/accounts/:id\", methods = HttpMethod.GET)\n"
"void getAccount(RoutingContext ctx) {\n"
"  ...\n"
"}\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/reactive-routes.adoc:170
#, no-wrap
msgid ""
"@Route(path = \"/accounts/me\", methods = HttpMethod.GET)\n"
"void getCurrentUserAccount(RoutingContext ctx) {\n"
"  ...\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/reactive-routes.adoc:174
#, fuzzy
msgid "As a consequence, the result is not the expected one as the first route is called with the path parameter `id` set to `me`.  To avoid the conflict, use the `order` attribute:"
msgstr "En consecuencia, el resultado no es el esperado, ya que la primera ruta se llama con el parámetro de ruta `id` establecido en `me`. Para evitar el conflicto, utilice el atributo `order`:"

#. type: delimited block -
#: upstream/_guides/reactive-routes.adoc:181
#, no-wrap
msgid ""
"@Route(path = \"/accounts/:id\", methods = HttpMethod.GET, order = 2)\n"
"void getAccount(RoutingContext ctx) {\n"
"  ...\n"
"}\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/reactive-routes.adoc:186
#, no-wrap
msgid ""
"@Route(path = \"/accounts/me\", methods = HttpMethod.GET, order = 1)\n"
"void getCurrentUserAccount(RoutingContext ctx) {\n"
"  ...\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/reactive-routes.adoc:190
#, fuzzy
msgid "By giving a lower order to the second route, it gets evaluated first.  If the request path matches, it is invoked, otherwise the other routes are evaluated."
msgstr "Al dar un orden inferior a la segunda ruta, ésta se evalúa primero. Si la ruta de la solicitud coincide, se invoca, de lo contrario se evalúan las otras rutas."

#. type: Title ===
#: upstream/_guides/reactive-routes.adoc:191
#, fuzzy, no-wrap
msgid "`@RouteBase`"
msgstr "`@RouteBase`"

#. type: Plain text
#: upstream/_guides/reactive-routes.adoc:194
#, fuzzy
msgid "This annotation can be used to configure some defaults for reactive routes declared on a class."
msgstr "Esta anotación se puede utilizar para configurar algunos valores predeterminados para las rutas reactivas declaradas en una clase."

#. type: delimited block -
#: upstream/_guides/reactive-routes.adoc:199
#, no-wrap
msgid ""
"@RouteBase(path = \"simple\", produces = \"text/plain\") <1> <2>\n"
"public class SimpleRoutes {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/reactive-routes.adoc:205
#, no-wrap
msgid ""
"    @Route(path = \"ping\") // the final path is /simple/ping\n"
"    void ping(RoutingContext rc) {\n"
"        rc.response().end(\"pong\");\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/reactive-routes.adoc:207
#, fuzzy
msgid "The `path` value is used as a prefix for any route method declared on the class where `Route#path()` is used."
msgstr "El valor `path` se utiliza como prefijo para cualquier método de ruta declarado en la clase donde se utiliza `Route#path()`."

#. type: Plain text
#: upstream/_guides/reactive-routes.adoc:208
#, fuzzy
msgid "The value of `produces()` is used for content-based routing for all routes where `Route#produces()` is empty."
msgstr "El valor de `produces()` se utiliza para el enrutamiento basado en el contenido para todas las rutas en las que `Route#produces()` está vacío."

#. type: Title ==
#: upstream/_guides/reactive-routes.adoc:210
#, fuzzy, no-wrap
msgid "Reactive Route Methods"
msgstr "Métodos de ruta reactiva"

#. type: Plain text
#: upstream/_guides/reactive-routes.adoc:215
#, fuzzy
msgid "A route method must be a non-private non-static method of a CDI bean.  If the annotated method returns `void` then it has to accept at least one argument - see the supported types below.  If the annotated method does not return `void` then the arguments are optional."
msgstr "Un método de ruta debe ser un método no privado y no estático de un bean CDI. Si el método anotado devuelve `void` entonces tiene que aceptar al menos un argumento - ver los tipos soportados más abajo. Si el método anotado no devuelve `void`, los argumentos son opcionales."

#. type: Plain text
#: upstream/_guides/reactive-routes.adoc:218
#, fuzzy
msgid "Methods that return `void` must __end__ the response or the HTTP request to this route will never end.  Some methods of `RoutingExchange` do it for you, others not and you must call the `end()` method of the response by yourself, please refer to its JavaDoc for more information."
msgstr "Los métodos que devuelven `void` deben _terminar_ la respuesta o la petición HTTP a esta ruta nunca terminará. Algunos métodos de `RoutingExchange` lo hacen por ti, otros no y debes llamar al método `end()` de la respuesta por ti mismo, consulta su JavaDoc para más información."

#. type: Plain text
#: upstream/_guides/reactive-routes.adoc:220
#, fuzzy
msgid "A route method can accept arguments of the following types:"
msgstr "Un método de ruta puede aceptar argumentos de los siguientes tipos:"

#. type: Plain text
#: upstream/_guides/reactive-routes.adoc:222
#, fuzzy
msgid "`io.vertx.ext.web.RoutingContext`"
msgstr "`io.vertx.ext.web.RoutingContext`"

#. type: Plain text
#: upstream/_guides/reactive-routes.adoc:223
#, fuzzy
msgid "`io.quarkus.vertx.web.RoutingExchange`"
msgstr "`io.quarkus.vertx.web.RoutingExchange`"

#. type: Plain text
#: upstream/_guides/reactive-routes.adoc:224
#, fuzzy
msgid "`io.vertx.core.http.HttpServerRequest`"
msgstr "`io.vertx.core.http.HttpServerRequest`"

#. type: Plain text
#: upstream/_guides/reactive-routes.adoc:225
#, fuzzy
msgid "`io.vertx.core.http.HttpServerResponse`"
msgstr "`io.vertx.core.http.HttpServerResponse`"

#. type: Plain text
#: upstream/_guides/reactive-routes.adoc:226
#, fuzzy
msgid "`io.vertx.mutiny.core.http.HttpServerRequest`"
msgstr "`io.vertx.mutiny.core.http.HttpServerRequest`"

#. type: Plain text
#: upstream/_guides/reactive-routes.adoc:227
#, fuzzy
msgid "`io.vertx.mutiny.core.http.HttpServerResponse`"
msgstr "`io.vertx.mutiny.core.http.HttpServerResponse`"

#. type: Plain text
#: upstream/_guides/reactive-routes.adoc:229
#, fuzzy
msgid "Furthermore, it is possible to inject the `HttpServerRequest` parameters into a method parameter annotated with `@io.quarkus.vertx.web.Param`:"
msgstr "Además, es posible inyectar los parámetros de `HttpServerRequest` en un parámetro de método anotado con `@io.quarkus.vertx.web.Param`:"

#. type: Table
#: upstream/_guides/reactive-routes.adoc:232
#: upstream/_guides/reactive-routes.adoc:252
#: upstream/_guides/reactive-routes.adoc:272
#, fuzzy, no-wrap
msgid "Parameter Type"
msgstr "Tipo de parámetro"

#. type: Table
#: upstream/_guides/reactive-routes.adoc:234
#: upstream/_guides/reactive-routes.adoc:254
#: upstream/_guides/reactive-routes.adoc:274
#, fuzzy, no-wrap
msgid ""
"Obtained via  \n"
"//-------------"
msgstr "Obtenido a través de"

#. type: Table
#: upstream/_guides/reactive-routes.adoc:234
#: upstream/_guides/reactive-routes.adoc:254
#: upstream/_guides/reactive-routes.adoc:274
#, fuzzy, no-wrap
msgid "`java.lang.String`"
msgstr "`java.lang.String`"

#. type: Table
#: upstream/_guides/reactive-routes.adoc:235
#: upstream/_guides/reactive-routes.adoc:236
#, fuzzy, no-wrap
msgid "`routingContext.request().getParam()`"
msgstr "`routingContext.request().getParam()`"

#. type: Table
#: upstream/_guides/reactive-routes.adoc:235
#: upstream/_guides/reactive-routes.adoc:255
#, fuzzy, no-wrap
msgid "`java.util.Optional<String>`"
msgstr "`java.util.Optional&amp;lt;String&amp;gt;`"

#. type: Table
#: upstream/_guides/reactive-routes.adoc:236
#: upstream/_guides/reactive-routes.adoc:256
#, fuzzy, no-wrap
msgid "`java.util.List<String>`"
msgstr "`java.util.List&amp;lt;String&amp;gt;`"

#. type: Table
#: upstream/_guides/reactive-routes.adoc:237
#, fuzzy, no-wrap
msgid "`routingContext.request().params().getAll()`"
msgstr "`routingContext.request().params().getAll()`"

#. type: Block title
#: upstream/_guides/reactive-routes.adoc:239
#, fuzzy, no-wrap
msgid "Request Parameter Example"
msgstr "Ejemplo de parámetro de solicitud"

#. type: delimited block -
#: upstream/_guides/reactive-routes.adoc:246
#, no-wrap
msgid ""
"@Route\n"
"String hello(@Param Optional<String> name) {\n"
"   return \"Hello \" + name.orElse(\"world\");\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/reactive-routes.adoc:249
#, fuzzy
msgid "The `HttpServerRequest` headers can be injected into a method parameter annotated with `@io.quarkus.vertx.web.Header`:"
msgstr "Las cabeceras `HttpServerRequest` pueden inyectarse en un parámetro de método anotado con `@io.quarkus.vertx.web.Header`:"

#. type: Table
#: upstream/_guides/reactive-routes.adoc:255
#: upstream/_guides/reactive-routes.adoc:256
#, fuzzy, no-wrap
msgid "`routingContext.request().getHeader()`"
msgstr "`routingContext.request().getHeader()`"

#. type: Table
#: upstream/_guides/reactive-routes.adoc:257
#, fuzzy, no-wrap
msgid "`routingContext.request().headers().getAll()`"
msgstr "`routingContext.request().headers().getAll()`"

#. type: Block title
#: upstream/_guides/reactive-routes.adoc:259
#, fuzzy, no-wrap
msgid "Request Header Example"
msgstr "Ejemplo de cabecera de solicitud"

#. type: delimited block -
#: upstream/_guides/reactive-routes.adoc:266
#, no-wrap
msgid ""
"@Route\n"
"String helloFromHeader(@Header(\"My-Header\") String header) {\n"
"   return header;\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/reactive-routes.adoc:269
#, fuzzy
msgid "The request body can be injected into a method parameter annotated with `@io.quarkus.vertx.web.Body`."
msgstr "El cuerpo de la solicitud puede inyectarse en un parámetro de método anotado con `@io.quarkus.vertx.web.Body`."

#. type: Table
#: upstream/_guides/reactive-routes.adoc:275
#, fuzzy, no-wrap
msgid "`routingContext.getBodyAsString()`"
msgstr "`routingContext.getBodyAsString()`"

#. type: Table
#: upstream/_guides/reactive-routes.adoc:275
#, fuzzy, no-wrap
msgid "`io.vertx.core.buffer.Buffer`"
msgstr "`io.vertx.core.buffer.Buffer`"

#. type: Table
#: upstream/_guides/reactive-routes.adoc:276
#, fuzzy, no-wrap
msgid "`routingContext.getBody()`"
msgstr "`routingContext.getBody()`"

#. type: Table
#: upstream/_guides/reactive-routes.adoc:276
#, fuzzy, no-wrap
msgid "`io.vertx.core.json.JsonObject`"
msgstr "`io.vertx.core.json.JsonObject`"

#. type: Table
#: upstream/_guides/reactive-routes.adoc:277
#, fuzzy, no-wrap
msgid "`routingContext.getBodyAsJson()`"
msgstr "`routingContext.getBodyAsJson()`"

#. type: Table
#: upstream/_guides/reactive-routes.adoc:277
#, fuzzy, no-wrap
msgid "`io.vertx.core.json.JsonArray`"
msgstr "`io.vertx.core.json.JsonArray`"

#. type: Table
#: upstream/_guides/reactive-routes.adoc:278
#, fuzzy, no-wrap
msgid "`routingContext.getBodyAsJsonArray()`"
msgstr "`routingContext.getBodyAsJsonArray()`"

#. type: Table
#: upstream/_guides/reactive-routes.adoc:278
#, fuzzy, no-wrap
msgid "any other type"
msgstr "cualquier otro tipo"

#. type: Table
#: upstream/_guides/reactive-routes.adoc:279
#, fuzzy, no-wrap
msgid "`routingContext.getBodyAsJson().mapTo(MyPojo.class)`"
msgstr "`routingContext.getBodyAsJson().mapTo(MyPojo.class)`"

#. type: Block title
#: upstream/_guides/reactive-routes.adoc:281
#, fuzzy, no-wrap
msgid "Request Body Example"
msgstr "Ejemplo de cuerpo de solicitud"

#. type: delimited block -
#: upstream/_guides/reactive-routes.adoc:289
#, no-wrap
msgid ""
"@Route(produces = \"application/json\")\n"
"Person createPerson(@Body Person person, @Param(\"id\") Optional<String> primaryKey) {\n"
"  person.setId(primaryKey.map(Integer::valueOf).orElse(42));\n"
"  return person;\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/reactive-routes.adoc:293
#, fuzzy
msgid "A failure handler can declare a single method parameter whose type extends `Throwable`.  The type of the parameter is used to match the result of `RoutingContext#failure()`."
msgstr "Un gestor de fallos puede declarar un único parámetro de método cuyo tipo se extiende a `Throwable`. El tipo del parámetro se utiliza para que coincida con el resultado de `RoutingContext#failure()`."

#. type: Block title
#: upstream/_guides/reactive-routes.adoc:294
#, fuzzy, no-wrap
msgid "Failure Handler Example"
msgstr "Ejemplo de gestor de fallos"

#. type: delimited block -
#: upstream/_guides/reactive-routes.adoc:301
#, no-wrap
msgid ""
"@Route(type = HandlerType.FAILURE)\n"
"void unsupported(UnsupportedOperationException e, HttpServerResponse response) {\n"
"  response.setStatusCode(501).end(e.getMessage());\n"
"}\n"
msgstr ""

#. type: Title ===
#: upstream/_guides/reactive-routes.adoc:303
#, fuzzy, no-wrap
msgid "Returning Unis"
msgstr "Unis que regresan"

#. type: Plain text
#: upstream/_guides/reactive-routes.adoc:306
#, fuzzy
msgid "In a reactive route, you can return a `Uni` directly:"
msgstr "En una ruta reactiva, puede devolver un `Uni` directamente:"

#. type: delimited block -
#: upstream/_guides/reactive-routes.adoc:313
#, no-wrap
msgid ""
"@Route(path = \"/hello\")\n"
"Uni<String> hello(RoutingContext context) {\n"
"    return Uni.createFrom().item(\"Hello world!\");\n"
"}\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/reactive-routes.adoc:318
#, no-wrap
msgid ""
"@Route(path = \"/person\")\n"
"Uni<Person> getPerson(RoutingContext context) {\n"
"    return Uni.createFrom().item(() -> new Person(\"neo\", 12345));\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/reactive-routes.adoc:321
#, fuzzy
msgid "Returning `Unis` is convenient when using a reactive client:"
msgstr "Devolver `Unis` es conveniente cuando se utiliza un cliente reactivo:"

#. type: delimited block -
#: upstream/_guides/reactive-routes.adoc:328
#, no-wrap
msgid ""
"@Route(path = \"/mail\")\n"
"Uni<Void> sendEmail(RoutingContext context) {\n"
"    return mailer.send(...);\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/reactive-routes.adoc:331
#, fuzzy
msgid "The item produced by the returned `Uni` can be:"
msgstr "El artículo producido por el `Uni` devuelto puede ser:"

#. type: Plain text
#: upstream/_guides/reactive-routes.adoc:333
#: upstream/_guides/reactive-routes.adoc:359
#, fuzzy
msgid "a string - written into the HTTP response directly"
msgstr "una cadena - escrita en la respuesta HTTP directamente"

#. type: Plain text
#: upstream/_guides/reactive-routes.adoc:334
#: upstream/_guides/reactive-routes.adoc:360
#, fuzzy
msgid "a buffer - written into the HTTP response directly"
msgstr "un buffer - escrito en la respuesta HTTP directamente"

#. type: Plain text
#: upstream/_guides/reactive-routes.adoc:336
#: upstream/_guides/reactive-routes.adoc:362
#, fuzzy
msgid "an object - written into the HTTP response after having been encoded into JSON.  The `content-type` header is set to `application/json` if not already set."
msgstr "un objeto - escrito en la respuesta HTTP después de haber sido codificado en JSON. La cabecera `content-type` se establece en `application/json` si no está ya establecida."

#. type: Plain text
#: upstream/_guides/reactive-routes.adoc:338
#, fuzzy
msgid "If the returned `Uni` produces a failure (or is `null`), an HTTP 500 response is written."
msgstr "Si el `Uni` devuelto produce un fallo (o es `null`), se escribe una respuesta HTTP 500."

#. type: Plain text
#: upstream/_guides/reactive-routes.adoc:340
#, fuzzy
msgid "Returning a `Uni<Void>` produces a 204 response (no content)."
msgstr "La devolución de un `Uni&amp;lt;Void&amp;gt;` produce una respuesta 204 (sin contenido)."

#. type: Title ===
#: upstream/_guides/reactive-routes.adoc:341
#, fuzzy, no-wrap
msgid "Returning results"
msgstr "Devolución de resultados"

#. type: Plain text
#: upstream/_guides/reactive-routes.adoc:344
#, fuzzy
msgid "You can also return a result directly:"
msgstr "También puede devolver un resultado directamente:"

#. type: delimited block -
#: upstream/_guides/reactive-routes.adoc:351
#, no-wrap
msgid ""
"@Route(path = \"/hello\")\n"
"String helloSync(RoutingContext context) {\n"
"    return \"Hello world\";\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/reactive-routes.adoc:355
#, fuzzy
msgid "Be aware, the processing must be **non-blocking** as reactive routes are invoked on the IO Thread.  Otherwise, set the `type` attribute of the `@Route` annotation to `Route.HandlerType.BLOCKING`, or use the `@io.smallrye.common.annotation.Blocking` annotation."
msgstr "Ten en cuenta que el procesamiento debe ser *no bloqueante*, ya que las rutas reactivas se invocan en el hilo IO. De lo contrario, establezca el atributo `type` de la anotación `@Route` a `Route.HandlerType.BLOCKING`, o utilice la anotación `@io.smallrye.common.annotation.Blocking`."

#. type: Plain text
#: upstream/_guides/reactive-routes.adoc:357
#: upstream/_guides/reactive-routes.adoc:379
#, fuzzy
msgid "The method can return:"
msgstr "El método puede devolver:"

#. type: Title ===
#: upstream/_guides/reactive-routes.adoc:363
#, fuzzy, no-wrap
msgid "Returning Multis"
msgstr "Regreso de Multis"

#. type: Plain text
#: upstream/_guides/reactive-routes.adoc:368
#, fuzzy
msgid "A reactive route can return a `Multi`.  The items are written one by one, in the response.  The response `Transfer-Encoding` header is set to `chunked`."
msgstr "Una ruta reactiva puede devolver un `Multi`. Los elementos se escriben uno a uno, en la respuesta. La cabecera de la respuesta `Transfer-Encoding` se establece como `chunked`."

#. type: delimited block -
#: upstream/_guides/reactive-routes.adoc:375
#, no-wrap
msgid ""
"@Route(path = \"/hello\")\n"
"Multi<String> hellos(RoutingContext context) {\n"
"    return Multi.createFrom().items(\"hello\", \"world\", \"!\");  // <1>\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/reactive-routes.adoc:377
#, fuzzy
msgid "Produces `helloworld!`"
msgstr "Produce `helloworld!`"

#. type: Plain text
#: upstream/_guides/reactive-routes.adoc:381
#, fuzzy
msgid "a `Multi<String>` - the items are written one by one (one per _chunk_) in the response."
msgstr "a `Multi&amp;lt;String&amp;gt;` - los elementos se escriben uno a uno (uno por _chunk_) en la respuesta."

#. type: Plain text
#: upstream/_guides/reactive-routes.adoc:382
#, fuzzy
msgid "a `Multi<Buffer>` - the buffers are written one by one (one per _chunk_) without any processing."
msgstr "a `Multi&amp;lt;Buffer&amp;gt;` - los buffers se escriben uno a uno (uno por _chunk_) sin ningún tipo de procesamiento."

#. type: Plain text
#: upstream/_guides/reactive-routes.adoc:383
#, fuzzy
msgid "a `Multi<Object>` - the items are encoded to JSON written one by one in the response."
msgstr "a `Multi&amp;lt;Object&amp;gt;` - los elementos se codifican en JSON y se escriben uno a uno en la respuesta."

#. type: delimited block -
#: upstream/_guides/reactive-routes.adoc:394
#, no-wrap
msgid ""
"@Route(path = \"/people\")\n"
"Multi<Person> people(RoutingContext context) {\n"
"    return Multi.createFrom().items(\n"
"            new Person(\"superman\", 1),\n"
"            new Person(\"batman\", 2),\n"
"            new Person(\"spiderman\", 3));\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/reactive-routes.adoc:397
#: upstream/_guides/reactive-routes.adoc:423
#, fuzzy
msgid "The previous snippet produces:"
msgstr "El fragmento anterior produce:"

#. type: delimited block -
#: upstream/_guides/reactive-routes.adoc:403
#, no-wrap
msgid ""
"{\"name\":\"superman\", \"id\": 1} // chunk 1\n"
"{\"name\":\"batman\", \"id\": 2} // chunk 2\n"
"{\"name\":\"spiderman\", \"id\": 3} // chunk 3\n"
msgstr ""

#. type: Title ===
#: upstream/_guides/reactive-routes.adoc:405
#, fuzzy, no-wrap
msgid "Streaming JSON Array items"
msgstr "Transmisión de elementos de la matriz JSON"

#. type: Plain text
#: upstream/_guides/reactive-routes.adoc:410
#, fuzzy
msgid "You can return a `Multi` to produce a JSON Array, where every item is an item from this array.  The response is written item by item to the client.  To do that set the `produces` attribute to `\"application/json\"` (or `ReactiveRoutes.APPLICATION_JSON`)."
msgstr "Puede devolver un `Multi` para producir un Array JSON, donde cada elemento es un ítem de este array. La respuesta se escribe elemento por elemento al cliente. Para ello, establezca el atributo `produces` como `\"application/json\"` (o `ReactiveRoutes.APPLICATION_JSON`)."

#. type: delimited block -
#: upstream/_guides/reactive-routes.adoc:420
#, no-wrap
msgid ""
"@Route(path = \"/people\", produces = ReactiveRoutes.APPLICATION_JSON)\n"
"Multi<Person> people(RoutingContext context) {\n"
"    return Multi.createFrom().items(\n"
"            new Person(\"superman\", 1),\n"
"            new Person(\"batman\", 2),\n"
"            new Person(\"spiderman\", 3));\n"
"}\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/reactive-routes.adoc:431
#, no-wrap
msgid ""
"[\n"
"  {\"name\":\"superman\", \"id\": 1} // chunk 1\n"
"  ,{\"name\":\"batman\", \"id\": 2} // chunk 2\n"
"  ,{\"name\":\"spiderman\", \"id\": 3} // chunk 3\n"
"]\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/reactive-routes.adoc:436
#, fuzzy
msgid "The `produces` attribute is an array.  When you pass a single value you can omit the \"{\" and \"}\".  Note that `\"application/json\"` must be the first value in the array."
msgstr "El atributo `produces` es un array. Cuando pasas un solo valor puedes omitir los \"{\" y \"}\". Tenga en cuenta que `\"application/json\"` debe ser el primer valor de la matriz."

#. type: Plain text
#: upstream/_guides/reactive-routes.adoc:441
#, fuzzy
msgid "Only `Multi<String>`, `Multi<Object>` and `Multi<Void>` can be written into the JSON Array.  Using a `Multi<Void>` produces an empty array.  You cannot use `Multi<Buffer>`.  If you need to use `Buffer`, transform the content into a JSON or String representation first."
msgstr "Sólo `Multi&amp;lt;String&amp;gt;`, `Multi&amp;lt;Object&amp;gt;` y `Multi&amp;lt;Void&amp;gt;` pueden escribirse en la matriz JSON. El uso de `Multi&amp;lt;Void&amp;gt;` produce un array vacío. No se puede utilizar `Multi&amp;lt;Buffer&amp;gt;`. Si necesita utilizar `Buffer`, transforme primero el contenido en una representación JSON o String."

#. type: Block title
#: upstream/_guides/reactive-routes.adoc:443
#, fuzzy, no-wrap
msgid "Deprecation of `asJsonArray`"
msgstr "La eliminación de `asJsonArray`"

#. type: delimited block =
#: upstream/_guides/reactive-routes.adoc:446
#, fuzzy
msgid "The `ReactiveRoutes.asJsonArray` has been deprecated as it is not compatible with the security layer of Quarkus."
msgstr "El `ReactiveRoutes.asJsonArray` ha sido obviado por no ser compatible con la capa de seguridad de Quarkus."

#. type: Title ===
#: upstream/_guides/reactive-routes.adoc:448
#, fuzzy, no-wrap
msgid "Event Stream and Server-Sent Event support"
msgstr "Soporte de flujo de eventos y eventos enviados por el servidor"

#. type: Plain text
#: upstream/_guides/reactive-routes.adoc:452
#, fuzzy
msgid "You can return a `Multi` to produce an event source (stream of server sent events).  To enable this feature, set the `produces` attribute to `\"text/event-stream\"` (or `ReactiveRoutes.EVENT_STREAM`), such as in:"
msgstr "Puede devolver un `Multi` para producir una fuente de eventos (flujo de eventos enviados por el servidor). Para habilitar esta función, establezca el atributo `produces` como `\"text/event-stream\"` (o `ReactiveRoutes.EVENT_STREAM`), como en:"

#. type: delimited block -
#: upstream/_guides/reactive-routes.adoc:462
#, no-wrap
msgid ""
"@Route(path = \"/people\", produces = ReactiveRoutes.EVENT_STREAM)\n"
"Multi<Person> people(RoutingContext context) {\n"
"    return Multi.createFrom().items(\n"
"            new Person(\"superman\", 1),\n"
"            new Person(\"batman\", 2),\n"
"            new Person(\"spiderman\", 3));\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/reactive-routes.adoc:465
#: upstream/_guides/reactive-routes.adoc:555
#, fuzzy
msgid "This method would produce:"
msgstr "Este método produciría:"

#. type: delimited block -
#: upstream/_guides/reactive-routes.adoc:470
#, no-wrap
msgid ""
"data: {\"name\":\"superman\", \"id\": 1}\n"
"id: 0\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/reactive-routes.adoc:473
#, no-wrap
msgid ""
"data: {\"name\":\"batman\", \"id\": 2}\n"
"id: 1\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/reactive-routes.adoc:476
#, no-wrap
msgid ""
"data: {\"name\":\"spiderman\", \"id\": 3}\n"
"id: 2\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/reactive-routes.adoc:482
#, fuzzy
msgid "The `produces` attribute is an array.  When you pass a single value you can omit the \"{\" and \"}\".  Note that `\"text/event-stream\"` must be the first value in the array."
msgstr "El atributo `produces` es un array. Cuando pasas un solo valor puedes omitir los \"{\" y \"}\". Tenga en cuenta que `\"text/event-stream\"` debe ser el primer valor de la matriz."

#. type: Plain text
#: upstream/_guides/reactive-routes.adoc:484
#, fuzzy
msgid "You can also implement the `io.quarkus.vertx.web.ReactiveRoutes.ServerSentEvent` interface to customize the `event` and `id` section of the server sent event:"
msgstr "También puede implementar la interfaz `io.quarkus.vertx.web.ReactiveRoutes.ServerSentEvent` para personalizar la sección `event` y `id` del evento enviado por el servidor:"

#. type: delimited block -
#: upstream/_guides/reactive-routes.adoc:490
#, no-wrap
msgid ""
"class PersonEvent implements ReactiveRoutes.ServerSentEvent<Person> {\n"
"    public String name;\n"
"    public int id;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/reactive-routes.adoc:495
#, no-wrap
msgid ""
"    public PersonEvent(String name, int id) {\n"
"        this.name = name;\n"
"        this.id = id;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/reactive-routes.adoc:500
#, no-wrap
msgid ""
"    @Override\n"
"    public Person data() {\n"
"        return new Person(name, id); // Will be JSON encoded\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/reactive-routes.adoc:505
#, no-wrap
msgid ""
"    @Override\n"
"    public long id() {\n"
"        return id;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/reactive-routes.adoc:511
#, no-wrap
msgid ""
"    @Override\n"
"    public String event() {\n"
"        return \"person\";\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/reactive-routes.adoc:514
#, fuzzy
msgid "Using a `Multi<PersonEvent>` would produce:"
msgstr "Usando un `Multi&amp;lt;PersonEvent&amp;gt;` se produciría:"

#. type: delimited block -
#: upstream/_guides/reactive-routes.adoc:520
#, no-wrap
msgid ""
"event: person\n"
"data: {\"name\":\"superman\", \"id\": 1}\n"
"id: 1\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/reactive-routes.adoc:524
#, no-wrap
msgid ""
"event: person\n"
"data: {\"name\":\"batman\", \"id\": 2}\n"
"id: 2\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/reactive-routes.adoc:528
#, no-wrap
msgid ""
"event: person\n"
"data: {\"name\":\"spiderman\", \"id\": 3}\n"
"id: 3\n"
msgstr ""

#. type: Block title
#: upstream/_guides/reactive-routes.adoc:532
#, fuzzy, no-wrap
msgid "Deprecation of `asEventStream`"
msgstr "La eliminación de `asEventStream`"

#. type: delimited block =
#: upstream/_guides/reactive-routes.adoc:535
#, fuzzy
msgid "The `ReactiveRoutes.asEventStream` has been deprecated as it is not compatible with the security layer of Quarkus."
msgstr "El `ReactiveRoutes.asEventStream` ha sido obviado por no ser compatible con la capa de seguridad de Quarkus."

#. type: Title ===
#: upstream/_guides/reactive-routes.adoc:537
#, fuzzy, no-wrap
msgid "Json Stream in NDJSON format"
msgstr "Flujo Json en formato NDJSON"

#. type: Plain text
#: upstream/_guides/reactive-routes.adoc:541
#, fuzzy
msgid "You can return a `Multi` to produce a newline delimited stream of JSON values.  To enable this feature, set the `produces` attribute of the `@Route` annotation to `\"application/x-ndjson\"` (or `ReactiveRoutes.ND_JSON`):"
msgstr "Puede devolver un `Multi` para producir un flujo de valores JSON delimitado por una nueva línea. Para activar esta función, establezca el atributo `produces` de la anotación `@Route` como `\"application/x-ndjson\"` (o `ReactiveRoutes.ND_JSON`):"

#. type: delimited block -
#: upstream/_guides/reactive-routes.adoc:552
#, no-wrap
msgid ""
"@Route(path = \"/people\", produces = ReactiveRoutes.ND_JSON)\n"
"Multi<Person> people(RoutingContext context) {\n"
"    return ReactiveRoutes.asJsonStream(Multi.createFrom().items(\n"
"            new Person(\"superman\", 1),\n"
"            new Person(\"batman\", 2),\n"
"            new Person(\"spiderman\", 3)\n"
"            ));\n"
"}\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/reactive-routes.adoc:561
#, no-wrap
msgid ""
"{\"name\":\"superman\", \"id\": 1}\n"
"{\"name\":\"batman\", \"id\": 2}\n"
"{\"name\":\"spiderman\", \"id\": 3}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/reactive-routes.adoc:566
#, fuzzy
msgid "The `produces` attribute is an array. When you pass a single value you can omit the \"{\" and \"}\".  Note that `\"application/x-ndjson\"` must be the first value in the array."
msgstr "El atributo `produces` es un array. Cuando pasas un solo valor puedes omitir los \"{\" y \"}\". Tenga en cuenta que `\"application/x-ndjson\"` debe ser el primer valor de la matriz."

#. type: Plain text
#: upstream/_guides/reactive-routes.adoc:568
#, fuzzy
msgid "You can also provide strings instead of Objects, in that case the strings will be wrapped in quotes to become valid JSON values:"
msgstr "También puede proporcionar cadenas en lugar de objetos, en ese caso las cadenas se envolverán entre comillas para convertirse en valores JSON válidos:"

#. type: delimited block -
#: upstream/_guides/reactive-routes.adoc:579
#, no-wrap
msgid ""
"@Route(path = \"/people\", produces = ReactiveRoutes.ND_JSON)\n"
"Multi<Person> people(RoutingContext context) {\n"
"    return ReactiveRoutes.asJsonStream(Multi.createFrom().items(\n"
"            \"superman\",\n"
"            \"batman\",\n"
"            \"spiderman\"\n"
"            ));\n"
"}\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/reactive-routes.adoc:586
#, no-wrap
msgid ""
"\"superman\"\n"
"\"batman\"\n"
"\"spiderman\"\n"
msgstr ""

#. type: Block title
#: upstream/_guides/reactive-routes.adoc:590
#, fuzzy, no-wrap
msgid "Deprecation of `asJsonStream`"
msgstr "La eliminación de `asJsonStream`"

#. type: delimited block =
#: upstream/_guides/reactive-routes.adoc:593
#, fuzzy
msgid "The `ReactiveRoutes.asJsonStream` has been deprecated as it is not compatible with the security layer of Quarkus."
msgstr "El `ReactiveRoutes.asJsonStream` ha sido obviado por no ser compatible con la capa de seguridad de Quarkus."

#. type: Title ===
#: upstream/_guides/reactive-routes.adoc:595
#, fuzzy, no-wrap
msgid "Using Bean Validation"
msgstr "Uso de la validación de frijoles"

#. type: Plain text
#: upstream/_guides/reactive-routes.adoc:600
#, fuzzy
msgid "You can combine reactive routes and Bean Validation.  First, don't forget to add the `quarkus-hibernate-validator` extension to your project.  Then, you can add constraints to your route parameter (annotated with `@Param` or `@Body`):"
msgstr "Puedes combinar rutas reactivas y Bean Validation. Primero, no olvides añadir la extensión `quarkus-hibernate-validator` a tu proyecto. Luego, puedes añadir restricciones a tu parámetro de ruta (anotado con `@Param` o `@Body`):"

#. type: delimited block -
#: upstream/_guides/reactive-routes.adoc:607
#, no-wrap
msgid ""
"@Route(produces = \"application/json\")\n"
"Person createPerson(@Body @Valid Person person, @NonNull @Param(\"id\") String primaryKey) {\n"
"  // ...\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/reactive-routes.adoc:611
#, fuzzy
msgid "If the parameters do not pass the tests, it returns an HTTP 400 response.  If the request accepts JSON payload, the response follows the https://opensource.zalando.com/problem/constraint-violation/[Problem] format."
msgstr "Si los parámetros no superan las pruebas, devuelve una respuesta HTTP 400. Si la solicitud acepta la carga útil JSON, la respuesta sigue el formato  link:https://opensource.zalando.com/problem/constraint-violation/[Problema]."

#. type: Plain text
#: upstream/_guides/reactive-routes.adoc:613
#, fuzzy
msgid "When returning an object or a `Uni`, you can also use the `@Valid` annotation:"
msgstr "Cuando se devuelve un objeto o un `Uni`, también se puede utilizar la anotación `@Valid`:"

#. type: delimited block -
#: upstream/_guides/reactive-routes.adoc:620
#, no-wrap
msgid ""
"@Route(...)\n"
"@Valid Uni<Person> createPerson(@Body @Valid Person person, @NonNull @Param(\"id\") String primaryKey) {\n"
"  // ...\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/reactive-routes.adoc:624
#, fuzzy
msgid "If the item produced by the route does not pass the validation, it returns an HTTP 500 response.  If the request accepts JSON payload, the response follows the https://opensource.zalando.com/problem/constraint-violation/[Problem] format."
msgstr "Si el elemento producido por la ruta no pasa la validación, devuelve una respuesta HTTP 500. Si la solicitud acepta la carga útil JSON, la respuesta sigue el formato  link:https://opensource.zalando.com/problem/constraint-violation/[Problema]."

#. type: Plain text
#: upstream/_guides/reactive-routes.adoc:628
#, fuzzy
msgid "Note that only `@Valid` is supported on the return type.  The returned class can use any constraint.  In the case of `Uni`, it checks the item produced asynchronously."
msgstr "Tenga en cuenta que sólo se admite `@Valid` en el tipo de retorno. La clase devuelta puede utilizar cualquier restricción. En el caso de `Uni`, comprueba el elemento producido de forma asíncrona."

#. type: Title ==
#: upstream/_guides/reactive-routes.adoc:629
#, fuzzy, no-wrap
msgid "Using the Vert.x Web Router"
msgstr "Uso del router web Vert.x"

#. type: Plain text
#: upstream/_guides/reactive-routes.adoc:633
#, fuzzy
msgid "You can also register your route directly on the _HTTP routing layer_ by registering routes directly on the `Router` object.  To retrieve the `Router` instance at startup:"
msgstr "También puede registrar su ruta directamente en la _capa de enrutamiento HTTP_ registrando las rutas directamente en el objeto `Router`. Para recuperar la instancia `Router` al inicio:"

#. type: delimited block -
#: upstream/_guides/reactive-routes.adoc:639
#, no-wrap
msgid ""
"public void init(@Observes Router router) {\n"
"    router.get(\"/my-route\").handler(rc -> rc.response().end(\"Hello from my route\"));\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/reactive-routes.adoc:642
#, fuzzy
msgid "Check the https://vertx.io/docs/vertx-web/java/#_basic_vert_x_web_concepts[Vert.x Web documentation] to know more about the route registration, options, and available handlers."
msgstr "Consulte la  link:https://vertx.io/docs/vertx-web/java/#_basic_vert_x_web_concepts[documentación de Vert.x Web] para saber más sobre el registro de rutas, las opciones y los manejadores disponibles."

#. type: delimited block =
#: upstream/_guides/reactive-routes.adoc:648
#, fuzzy
msgid "`Router` access is provided by the `quarkus-vertx-http` extension.  If you use `quarkus-resteasy-reactive` or `quarkus-reactive-routes`, the extension will be added automatically."
msgstr "`Router` El acceso es proporcionado por la extensión `quarkus-vertx-http`. Si utiliza `quarkus-resteasy-reactive` o `quarkus-reactive-routes`, la extensión se añadirá automáticamente."

#. type: Plain text
#: upstream/_guides/reactive-routes.adoc:651
#, fuzzy
msgid "You can also receive the Mutiny variant of the Router (`io.vertx.mutiny.ext.web.Router`):"
msgstr "También puede recibir la variante Mutiny del Router ( `io.vertx.mutiny.ext.web.Router`):"

#. type: delimited block -
#: upstream/_guides/reactive-routes.adoc:657
#, no-wrap
msgid ""
"public void init(@Observes io.vertx.mutiny.ext.web.Router router) {\n"
"    router.get(\"/my-route\").handler(rc -> rc.response().endAndForget(\"Hello from my route\"));\n"
"}\n"
msgstr ""

#. type: Title ==
#: upstream/_guides/reactive-routes.adoc:659
#, fuzzy, no-wrap
msgid "Intercepting HTTP requests"
msgstr "Interceptación de peticiones HTTP"

#. type: Plain text
#: upstream/_guides/reactive-routes.adoc:663
#, fuzzy
msgid "You can also register filters that would intercept incoming HTTP requests.  Note that these filters are also applied for servlets, JAX-RS resources, and reactive routes."
msgstr "También puedes registrar filtros que intercepten las peticiones HTTP entrantes. Tenga en cuenta que estos filtros también se aplican para los servlets, los recursos JAX-RS y las rutas reactivas."

#. type: Plain text
#: upstream/_guides/reactive-routes.adoc:665
#, fuzzy
msgid "For example, the following code snippet registers a filter adding an HTTP header:"
msgstr "Por ejemplo, el siguiente fragmento de código registra un filtro que añade una cabecera HTTP:"

#. type: delimited block -
#: upstream/_guides/reactive-routes.adoc:671
#, no-wrap
msgid "import io.vertx.ext.web.RoutingContext;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/reactive-routes.adoc:673
#, no-wrap
msgid "public class MyFilters {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/reactive-routes.adoc:680
#, no-wrap
msgid ""
"    @RouteFilter(100) <1>\n"
"    void myFilter(RoutingContext rc) {\n"
"       rc.response().putHeader(\"X-Header\", \"intercepting the request\");\n"
"       rc.next(); <2>\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/reactive-routes.adoc:683
#, fuzzy
msgid "The `RouteFilter#value()` defines the priority used to sort the filters - filters with higher priority are called first."
msgstr "En `RouteFilter#value()` se define la prioridad utilizada para ordenar los filtros: los filtros con mayor prioridad se llaman primero."

#. type: Plain text
#: upstream/_guides/reactive-routes.adoc:684
#, fuzzy
msgid "The filter is likely required to call the `next()` method to continue the chain."
msgstr "Es probable que el filtro deba llamar al método `next()` para continuar la cadena."

#. type: Title ==
#: upstream/_guides/reactive-routes.adoc:685
#, fuzzy, no-wrap
msgid "HTTP Compression"
msgstr "Compresión HTTP"

#. type: Plain text
#: upstream/_guides/reactive-routes.adoc:689
#, fuzzy
msgid "The body of an HTTP response is not compressed by default.  You can enable the HTTP compression support by means of `quarkus.http.enable-compression=true`."
msgstr "El cuerpo de una respuesta HTTP no se comprime por defecto. Puede activar el soporte de compresión HTTP mediante `quarkus.http.enable-compression=true`."

#. type: Plain text
#: upstream/_guides/reactive-routes.adoc:691
#, fuzzy
msgid "If compression support is enabled then the response body is compressed if:"
msgstr "Si el soporte de compresión está activado, el cuerpo de la respuesta se comprime si:"

#. type: Plain text
#: upstream/_guides/reactive-routes.adoc:693
#, fuzzy
msgid "the route method is annotated with `@io.quarkus.vertx.http.Compressed`, or"
msgstr "El cuerpo de la solicitud puede inyectarse en un parámetro de método anotado con `@io.quarkus.vertx.web.Body`."

#. type: Plain text
#: upstream/_guides/reactive-routes.adoc:694
#, fuzzy
msgid "the `Content-Type` header is set and the value is a compressed media type as configured via `quarkus.http.compress-media-types`."
msgstr "la cabecera `Content-Type` está activada y el valor es un tipo de medio comprimido configurado a través de `quarkus.http.compress-media-types`."

#. type: Plain text
#: upstream/_guides/reactive-routes.adoc:696
#, fuzzy
msgid "The response body is never compressed if:"
msgstr "El cuerpo de la respuesta nunca se comprime si:"

#. type: Plain text
#: upstream/_guides/reactive-routes.adoc:698
#, fuzzy
msgid "the route method is annotated with `@io.quarkus.vertx.http.Uncompressed`, or"
msgstr "El cuerpo de la solicitud puede inyectarse en un parámetro de método anotado con `@io.quarkus.vertx.web.Body`."

#. type: Plain text
#: upstream/_guides/reactive-routes.adoc:699
#, fuzzy
msgid "the `Content-Type` header is not set."
msgstr "la cabecera `Content-Type` no está configurada."

#. type: Plain text
#: upstream/_guides/reactive-routes.adoc:701
#, fuzzy
msgid "By default, the following list of media types is compressed: `text/html`, `text/plain`, `text/xml`, `text/css`, `text/javascript` and `application/javascript`."
msgstr "Por defecto, se comprime la siguiente lista de tipos de medios: `text/html`, `text/plain`, `text/xml`, `text/css`, `text/javascript` y `application/javascript`."

#. type: Plain text
#: upstream/_guides/reactive-routes.adoc:703
#, fuzzy
msgid "If the client does not support HTTP compression then the response body is not compressed."
msgstr "Si el cliente no soporta la compresión HTTP, el cuerpo de la respuesta no se comprime."

#. type: Title ==
#: upstream/_guides/reactive-routes.adoc:705
#, fuzzy, no-wrap
msgid "Adding OpenAPI and Swagger UI"
msgstr "Añadir OpenAPI y Swagger UI"

#. type: Plain text
#: upstream/_guides/reactive-routes.adoc:708
#, fuzzy
msgid "You can add support for link:https://www.openapis.org/[OpenAPI] and link:https://swagger.io/tools/swagger-ui/[Swagger UI] by using the `quarkus-smallrye-openapi` extension."
msgstr "Puedes añadir soporte para  link:https://www.openapis.org/[OpenAPI] y  link:https://swagger.io/tools/swagger-ui/[Swagger UI] utilizando la extensión `quarkus-smallrye-openapi`."

#. type: Plain text
#: upstream/_guides/reactive-routes.adoc:710
#, fuzzy
msgid "Add the extension by running this command:"
msgstr "Añada la extensión ejecutando este comando:"

#. type: Plain text
#: upstream/_guides/reactive-routes.adoc:715
#, fuzzy
msgid "This will add the following to your build file:"
msgstr "Esto añadirá lo siguiente a su archivo de construcción:"

#. type: delimited block -
#: upstream/_guides/reactive-routes.adoc:723
#, no-wrap
msgid ""
"<dependency>\n"
"    <groupId>io.quarkus</groupId>\n"
"    <artifactId>quarkus-smallrye-openapi</artifactId>\n"
"</dependency>\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/reactive-routes.adoc:729
#, no-wrap
msgid "implementation(\"io.quarkus:quarkus-smallrye-openapi\")\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/reactive-routes.adoc:732
#, fuzzy
msgid "This is enough to generate a basic OpenAPI schema document from your Vert.x Routes:"
msgstr "Esto es suficiente para generar un documento básico de esquema OpenAPI a partir de sus rutas Vert.x:"

#. type: delimited block -
#: upstream/_guides/reactive-routes.adoc:736
#, no-wrap
msgid "curl http://localhost:8080/q/openapi\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/reactive-routes.adoc:739
#, fuzzy
msgid "You will see the generated OpenAPI schema document:"
msgstr "Verá el documento de esquema OpenAPI generado:"

#. type: delimited block -
#: upstream/_guides/reactive-routes.adoc:742
#: upstream/_guides/reactive-routes.adoc:823
#, no-wrap
msgid "---\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/reactive-routes.adoc:767
#, no-wrap
msgid ""
"openapi: 3.0.3\n"
"info:\n"
"  title: Generated API\n"
"  version: \"1.0\"\n"
"paths:\n"
"  /greetings:\n"
"    get:\n"
"      responses:\n"
"        \"204\":\n"
"          description: No Content\n"
"  /hello:\n"
"    get:\n"
"      responses:\n"
"        \"204\":\n"
"          description: No Content\n"
"  /world:\n"
"    get:\n"
"      responses:\n"
"        \"200\":\n"
"          description: OK\n"
"          content:\n"
"            '*/*':\n"
"              schema:\n"
"                type: string\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/reactive-routes.adoc:770
#, fuzzy
msgid "Also see xref:openapi-swaggerui.adoc[the OpenAPI Guide]."
msgstr "Consulte también  link:openapi-swaggerui.html[la Guía de OpenAPI]."

#. type: Title ===
#: upstream/_guides/reactive-routes.adoc:771
#, fuzzy, no-wrap
msgid "Adding MicroProfile OpenAPI Annotations"
msgstr "Añadir anotaciones OpenAPI de MicroProfile"

#. type: Plain text
#: upstream/_guides/reactive-routes.adoc:775
#, fuzzy
msgid "You can use link:https://github.com/eclipse/microprofile-open-api[MicroProfile OpenAPI] to better document your schema, example, adding header info, or specifying the return type on `void` methods might be useful :"
msgstr "Puede utilizar  link:https://github.com/eclipse/microprofile-open-api[MicroProfile OpenAPI] para documentar mejor su esquema, por ejemplo, añadiendo información de cabecera, o especificando el tipo de retorno en los métodos de `void` podría ser útil:"

#. type: delimited block -
#: upstream/_guides/reactive-routes.adoc:792
#, no-wrap
msgid ""
"@OpenAPIDefinition( // <1>\n"
"    info = @Info(\n"
"        title=\"Greeting API\",\n"
"        version = \"1.0.1\",\n"
"        contact = @Contact(\n"
"            name = \"Greeting API Support\",\n"
"            url = \"http://exampleurl.com/contact\",\n"
"            email = \"techsupport@example.com\"),\n"
"        license = @License(\n"
"            name = \"Apache 2.0\",\n"
"            url = \"https://www.apache.org/licenses/LICENSE-2.0.html\"))\n"
")\n"
"@ApplicationScoped\n"
"public class MyDeclarativeRoutes {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/reactive-routes.adoc:801
#, no-wrap
msgid ""
"    // neither path nor regex is set - match a path derived from the method name\n"
"    @Route(methods = Route.HttpMethod.GET)\n"
"    @APIResponse(responseCode=\"200\", \n"
"            description=\"Say hello\", \n"
"            content=@Content(mediaType=\"application/json\", schema=@Schema(type=SchemaType.STRING))) // <2>\n"
"    void hello(RoutingContext rc) {\n"
"        rc.response().end(\"hello\");\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/reactive-routes.adoc:806
#, no-wrap
msgid ""
"    @Route(path = \"/world\") \n"
"    String helloWorld() {\n"
"        return \"Hello world!\";\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/reactive-routes.adoc:815
#, no-wrap
msgid ""
"    @Route(path = \"/greetings\", methods = HttpMethod.GET)\n"
"    @APIResponse(responseCode=\"200\", \n"
"            description=\"Greeting\", \n"
"            content=@Content(mediaType=\"application/json\", schema=@Schema(type=SchemaType.STRING)))\n"
"    void greetings(RoutingExchange ex) {\n"
"        ex.ok(\"hello \" + ex.getParam(\"name\").orElse(\"world\"));\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/reactive-routes.adoc:817
#, fuzzy
msgid "Header information about your API."
msgstr "Información de cabecera sobre su API."

#. type: Plain text
#: upstream/_guides/reactive-routes.adoc:818
#, fuzzy
msgid "Defining the response"
msgstr "Definir la respuesta"

#. type: Plain text
#: upstream/_guides/reactive-routes.adoc:820
#, fuzzy
msgid "This will generate this OpenAPI schema:"
msgstr "Esto generará este esquema OpenAPI:"

#. type: delimited block -
#: upstream/_guides/reactive-routes.adoc:863
#, no-wrap
msgid ""
"openapi: 3.0.3\n"
"info:\n"
"  title: Greeting API\n"
"  contact:\n"
"    name: Greeting API Support\n"
"    url: http://exampleurl.com/contact\n"
"    email: techsupport@example.com\n"
"  license:\n"
"    name: Apache 2.0\n"
"    url: https://www.apache.org/licenses/LICENSE-2.0.html\n"
"  version: 1.0.1\n"
"paths:\n"
"  /greetings:\n"
"    get:\n"
"      responses:\n"
"        \"200\":\n"
"          description: Greeting\n"
"          content:\n"
"            application/json:\n"
"              schema:\n"
"                type: string\n"
"  /hello:\n"
"    get:\n"
"      responses:\n"
"        \"200\":\n"
"          description: Say hello\n"
"          content:\n"
"            application/json:\n"
"              schema:\n"
"                type: string\n"
"  /world:\n"
"    get:\n"
"      responses:\n"
"        \"200\":\n"
"          description: OK\n"
"          content:\n"
"            '*/*':\n"
"              schema:\n"
"                type: string\n"
msgstr ""

#. type: Title ===
#: upstream/_guides/reactive-routes.adoc:865
#, fuzzy, no-wrap
msgid "Using Swagger UI"
msgstr "Uso de Swagger UI"

#. type: Plain text
#: upstream/_guides/reactive-routes.adoc:869
#, fuzzy
msgid "Swagger UI is included by default when running in `dev` or `test` mode, and can optionally be added to `prod` mode.  See <<openapi-swaggerui.adoc#dev-mode,the Swagger UI>> Guide for more details."
msgstr "Swagger UI se incluye por defecto cuando se ejecuta en modo `dev` o `test`, y puede añadirse opcionalmente al modo `prod`. Consulte la Guía de Swagger  link:openapi-swaggerui.html#dev-mode[UI] para más detalles."

#. type: Plain text
#: upstream/_guides/reactive-routes.adoc:871
#, fuzzy
msgid "Navigate to link:http://localhost:8080/q/swagger-ui/[localhost:8080/q/swagger-ui/] and you will see the Swagger UI screen:"
msgstr "Navegue a  link:http://localhost:8080/q/swagger-ui/[localhost:8080/q/swagger-ui/] y verá la pantalla de la interfaz de usuario de Swagger:"

#. type: Plain text
#: upstream/_guides/reactive-routes.adoc:873
#, fuzzy
msgid "image:reactive-routes-guide-screenshot01.png[alt=Swagger UI]"
msgstr "image:reactive-routes-guide-screenshot01.png[alt=Swagger UI]"

#. type: Title ==
#: upstream/_guides/reactive-routes.adoc:874
#, fuzzy, no-wrap
msgid "Conclusion"
msgstr "Conclusión"

#. type: Plain text
#: upstream/_guides/reactive-routes.adoc:877
#, fuzzy
msgid "This guide has introduced how you can use reactive routes to define an HTTP endpoint.  It also describes the structure of the Quarkus HTTP layer and how to write filters."
msgstr "Esta guía ha introducido cómo se pueden utilizar rutas reactivas para definir un punto final HTTP. También describe la estructura de la capa HTTP de Quarkus y cómo escribir filtros."
