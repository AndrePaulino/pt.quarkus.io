# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2022-10-19 16:10+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc
#. type: Title =
#: upstream/_guides/security-csrf-prevention.adoc:6
#, fuzzy, no-wrap
msgid "Cross-Site Request Forgery Prevention"
msgstr "Prevención de la falsificación de solicitudes en sitios cruzados"

#. type: Plain text
#: upstream/_guides/security-csrf-prevention.adoc:11
#, fuzzy
msgid "https://owasp.org/www-community/attacks/csrf[Cross-Site Request Forgery (CSRF)] is an attack that forces an end user to execute unwanted actions on a web application in which they are currently authenticated."
msgstr "El  link:https://owasp.org/www-community/attacks/csrf[Cross-Site Request Forgery (CSRF)] es un ataque que obliga a un usuario final a ejecutar acciones no deseadas en una aplicación web en la que está autenticado."

#. type: Plain text
#: upstream/_guides/security-csrf-prevention.adoc:13
#, fuzzy
msgid "Quarkus Security provides a CSRF prevention feature which consists of a xref:resteasy-reactive.adoc[RESTEasy Reactive] server filter which creates and verifies CSRF tokens in 'application/x-www-form-urlencoded' and 'multipart/form-data' forms and a Qute HTML form parameter provider which supports the xref:qute-reference.adoc#injecting-beans-directly-in-templates[injection of CSRF tokens in Qute templates]."
msgstr "Quarkus Security proporciona una función de prevención de CSRF que consiste en un filtro de servidor  link:resteasy-reactive.html[Reactive Resteasy] que crea y verifica los  link:qute-reference.html#injecting-beans-directly-in-templates[tokens] CSRF y un proveedor de parámetros de formularios HTML que admite la  link:qute-reference.html#injecting-beans-directly-in-templates[inyección de tokens CSRF en las plantillas de Qute]."

#. type: Title ==
#: upstream/_guides/security-csrf-prevention.adoc:14
#, fuzzy, no-wrap
msgid "Creating the Project"
msgstr "Creación del proyecto"

#. type: Plain text
#: upstream/_guides/security-csrf-prevention.adoc:18
#, fuzzy
msgid "First, we need a new project.  Create a new project with the following command:"
msgstr "En primer lugar, necesitamos un nuevo proyecto. Cree un nuevo proyecto con el siguiente comando:"

#. type: Plain text
#: upstream/_guides/security-csrf-prevention.adoc:24
#, fuzzy
msgid "This command generates a project which imports the `csrf-reactive` extension."
msgstr "Este comando genera un proyecto que importa la extensión `csrf-reactive`."

#. type: Plain text
#: upstream/_guides/security-csrf-prevention.adoc:27
#, fuzzy
msgid "If you already have your Quarkus project configured, you can add the `csrf-reactive` extension to your project by running the following command in your project base directory:"
msgstr "Si ya tienes configurado tu proyecto Quarkus, puedes añadir la extensión `csrf-reactive` a tu proyecto ejecutando el siguiente comando en el directorio base de tu proyecto:"

#. type: Plain text
#: upstream/_guides/security-csrf-prevention.adoc:32
#, fuzzy
msgid "This will add the following to your build file:"
msgstr "Esto añadirá lo siguiente a su archivo de construcción:"

#. type: Block title
#: upstream/_guides/security-csrf-prevention.adoc:34
#, no-wrap
msgid "pom.xml"
msgstr "pom.xml"

#. type: delimited block -
#: upstream/_guides/security-csrf-prevention.adoc:40
#, no-wrap
msgid ""
"<dependency>\n"
"    <groupId>io.quarkus</groupId>\n"
"    <artifactId>quarkus-csrf-reactive</artifactId>\n"
"</dependency>\n"
msgstr ""

#. type: Block title
#: upstream/_guides/security-csrf-prevention.adoc:43
#, no-wrap
msgid "build.gradle"
msgstr "build.gradle"

#. type: delimited block -
#: upstream/_guides/security-csrf-prevention.adoc:46
#, no-wrap
msgid "implementation(\"io.quarkus:quarkus-csrf-reactive\")\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-csrf-prevention.adoc:49
#, fuzzy
msgid "Next, let's add a `csrfToken.html` Qute template producing an HTML form in the `src/main/resources/templates` folder:"
msgstr "Puede nombrar el archivo que contiene esta plantilla como `csrfToken.html` y ponerlo en una carpeta `src/main/resources/templates`."

#. type: delimited block -
#: upstream/_guides/security-csrf-prevention.adoc:60
#, no-wrap
msgid ""
"<!DOCTYPE html>\n"
"<html>\n"
"<head>\n"
"<meta charset=\"UTF-8\">\n"
"<title>User Name Input</title> \n"
"</head>\n"
"<body>\n"
"    <h1>User Name Input</h1>\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-csrf-prevention.adoc:63
#, no-wrap
msgid ""
"    <form action=\"/service/csrfTokenForm\" method=\"post\">\n"
"    \t<input type=\"hidden\" name=\"{inject:csrf.parameterName}\" value=\"{inject:csrf.token}\" />  <1>\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-csrf-prevention.adoc:69
#, no-wrap
msgid ""
"    \t<p>Your Name: <input type=\"text\" name=\"name\" /></p>\n"
"    \t<p><input type=\"submit\" name=\"submit\"/></p>\n"
"    </form>\n"
"</body>\n"
"</html>\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-csrf-prevention.adoc:71
#, fuzzy
msgid "This expression is used to inject a CSRF token into a hidden form field. This token will be verified by the CSRF filter against a CSRF cookie."
msgstr "Esta expresión se utiliza para inyectar un token CSRF en un campo de formulario oculto. Este token será verificado por el filtro CSRF contra una cookie CSRF."

#. type: Plain text
#: upstream/_guides/security-csrf-prevention.adoc:73
#, fuzzy
msgid "Now let's create a resource class which returns an HTML form and handles form POST requests:"
msgstr "Ahora vamos a crear una clase de recurso que devuelva un formulario HTML y maneje las peticiones POST del formulario:"

#. type: delimited block -
#: upstream/_guides/security-csrf-prevention.adoc:77
#: upstream/_guides/security-csrf-prevention.adoc:131
#, no-wrap
msgid "package io.quarkus.it.csrf;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-csrf-prevention.adoc:86
#, no-wrap
msgid ""
"import javax.inject.Inject;\n"
"import javax.ws.rs.Consumes;\n"
"import javax.ws.rs.FormParam;\n"
"import javax.ws.rs.GET;\n"
"import javax.ws.rs.POST;\n"
"import javax.ws.rs.Path;\n"
"import javax.ws.rs.Produces;\n"
"import javax.ws.rs.core.MediaType;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-csrf-prevention.adoc:89
#: upstream/_guides/security-csrf-prevention.adoc:145
#, no-wrap
msgid ""
"import io.quarkus.qute.Template;\n"
"import io.quarkus.qute.TemplateInstance;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-csrf-prevention.adoc:92
#: upstream/_guides/security-csrf-prevention.adoc:148
#, no-wrap
msgid ""
"@Path(\"/service\")\n"
"public class UserNameResource {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-csrf-prevention.adoc:95
#, no-wrap
msgid ""
"    @Inject\n"
"    Template csrfToken; <1>\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-csrf-prevention.adoc:102
#, no-wrap
msgid ""
"    @GET\n"
"    @Path(\"/csrfTokenForm\")\n"
"    @Produces(MediaType.TEXT_HTML)\n"
"    public TemplateInstance getCsrfTokenForm() {\n"
"        return csrfToken.instance(); <2>\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-csrf-prevention.adoc:111
#, no-wrap
msgid ""
"    @POST\n"
"    @Path(\"/csrfTokenForm\")\n"
"    @Consumes(MediaType.APPLICATION_FORM_URLENCODED)\n"
"    @Produces(MediaType.TEXT_PLAIN)\n"
"    public String postCsrfTokenForm(@FormParam(\"name\") String userName) {\n"
"        return userName; <3>\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-csrf-prevention.adoc:113
#, fuzzy
msgid "Inject the `csrfToken.html` as a `Template`."
msgstr "Inyecte el `csrfToken.html` como `Template`."

#. type: Plain text
#: upstream/_guides/security-csrf-prevention.adoc:114
#, fuzzy
msgid "Return the HTML form with a hidden form field containing a CSRF token created by the CSRF filter."
msgstr "Devuelve un formulario HTML con un campo de formulario oculto que contiene un token CSRF creado por el filtro CSRF."

#. type: Plain text
#: upstream/_guides/security-csrf-prevention.adoc:115
#, fuzzy
msgid "Handle the form POST request, this method can only be invoked if the CSRF filter has successfully verified the token."
msgstr "Maneja la solicitud POST del formulario, este método sólo puede ser invocado si el filtro CSRF ha verificado exitosamente el token."

#. type: Plain text
#: upstream/_guides/security-csrf-prevention.adoc:117
#, fuzzy
msgid "The form POST request will fail with HTTP status `400` if the filter finds the hidden CSRF form field is missing, the CSRF cookie is missing, or if the CSRF form field and CSRF cookie values do not match."
msgstr "La solicitud POST del formulario fallará con el estado HTTP `400` si el filtro encuentra que falta el campo de formulario CSRF oculto, falta la cookie CSRF o si los valores del campo de formulario CSRF y de la cookie CSRF no coinciden."

#. type: Plain text
#: upstream/_guides/security-csrf-prevention.adoc:119
#, fuzzy
msgid "At this stage no additional configuration is needed - by default the CSRF form field and cookie name will be set to `csrf_token`, and the filter will verify the token. But let's change these names:"
msgstr "En esta etapa no se necesita ninguna configuración adicional - por defecto el campo de formulario CSRF y el nombre de la cookie se establecerán en `csrf_token`, y el filtro verificará el token. Pero vamos a cambiar estos nombres:"

#. type: delimited block -
#: upstream/_guides/security-csrf-prevention.adoc:124
#, no-wrap
msgid ""
"quarkus.csrf-reactive.form-field-name=csrftoken\n"
"quarkus.csrf-reactive.cookie-name=csrftoken\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-csrf-prevention.adoc:127
msgid "Note that the CSRF filter has to read and cache the input stream in order to verify the token. However if you prefer you can compare the CSRF form field and cookie values in the application code:"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-csrf-prevention.adoc:142
#, no-wrap
msgid ""
"import javax.inject.Inject;\n"
"import javax.ws.rs.BadRequestException;\n"
"import javax.ws.rs.Consumes;\n"
"import javax.ws.rs.CookieParam;\n"
"import javax.ws.rs.FormParam;\n"
"import javax.ws.rs.GET;\n"
"import javax.ws.rs.POST;\n"
"import javax.ws.rs.Path;\n"
"import javax.ws.rs.Produces;\n"
"import javax.ws.rs.core.MediaType;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-csrf-prevention.adoc:151
#, no-wrap
msgid ""
"    @Inject\n"
"    Template csrfToken;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-csrf-prevention.adoc:158
#, no-wrap
msgid ""
"    @GET\n"
"    @Path(\"/csrfTokenForm\")\n"
"    @Produces(MediaType.TEXT_HTML)\n"
"    public TemplateInstance getCsrfTokenForm() {\n"
"        return csrfToken.instance();\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-csrf-prevention.adoc:170
#, no-wrap
msgid ""
"    @POST\n"
"    @Path(\"/csrfTokenForm\")\n"
"    @Consumes(MediaType.APPLICATION_FORM_URLENCODED)\n"
"    @Produces(MediaType.TEXT_PLAIN)\n"
"    public String postCsrfTokenForm(@CookieParam(\"csrf-token\") csrfCookie, @FormParam(\"csrf-token\") String formCsrfToken, @FormParam(\"name\") String userName) {\n"
"        if (!csrfCookie.getValue().equals(formCsrfToken)) { <1>\n"
"            throw new BadRequestException();\n"
"        }\n"
"        return userName;\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-csrf-prevention.adoc:172
#, fuzzy
msgid "Compare the CSRF form field and cookie values and fail with HTTP status `400` if they don't match."
msgstr "Compara los valores del campo del formulario CSRF y de la cookie y falla con el estado HTTP `400` si no coinciden."

#. type: Plain text
#: upstream/_guides/security-csrf-prevention.adoc:174
#, fuzzy
msgid "Also disable the token verification in the filter:"
msgstr "También desactiva la verificación de tokens en el filtro:"

#. type: delimited block -
#: upstream/_guides/security-csrf-prevention.adoc:178
#, no-wrap
msgid "quarkus.csrf-reactive.verify-token=false\n"
msgstr ""

#. type: Title ==
#: upstream/_guides/security-csrf-prevention.adoc:181
#, fuzzy, no-wrap
msgid "Configuration Reference"
msgstr "Referencia de configuración"

#. type: Title ==
#: upstream/_guides/security-csrf-prevention.adoc:185
#, fuzzy, no-wrap
msgid "References"
msgstr "Referencias"

#. type: Plain text
#: upstream/_guides/security-csrf-prevention.adoc:188
#, fuzzy
msgid "https://owasp.org/www-community/attacks/csrf[OWASP Cross-Site Request Forgery]"
msgstr "link:https://owasp.org/www-community/attacks/csrf[Falsificación de solicitud de sitio cruzado OWASP]"

#. type: Plain text
#: upstream/_guides/security-csrf-prevention.adoc:189
#, fuzzy
msgid "xref:resteasy-reactive.adoc[RESTEasy Reactive]"
msgstr "link:resteasy-reactive.html[RESTEasy Reactive]"

#. type: Plain text
#: upstream/_guides/security-csrf-prevention.adoc:190
#, fuzzy
msgid "xref:qute-reference.adoc[Qute Reference]"
msgstr "link:qute-reference.html[Referencia de Qute]"

#. type: Plain text
#: upstream/_guides/security-csrf-prevention.adoc:190
#, fuzzy
msgid "xref:security.adoc[Quarkus Security]"
msgstr "link:security.html[Seguridad Quarkus]"

#, fuzzy
#~ msgid "Note that the CSRF filter has to read the input stream in order to verify the token and then re-create the stream for the application code to read it as well. The filter performs this work on an event loop thread so for small form payloads, such as the one shown in the example above, it will have negligible performance side-effects. However if you deal with large form payloads then it is recommended to compare the CSRF form field and cookie values in the application code:"
#~ msgstr "Tenga en cuenta que el filtro CSRF tiene que leer el flujo de entrada para verificar el token y luego volver a crear el flujo para que el código de la aplicación lo lea también. El filtro realiza este trabajo en un bucle de eventos, por lo que para cargas útiles de formularios pequeños, como el que se muestra en el ejemplo anterior, tendrá efectos secundarios de rendimiento insignificantes. Sin embargo, si se trata de cargas útiles de formularios grandes, se recomienda comparar los valores del campo del formulario CSRF y de la cookie en el código de la aplicación:"

#, fuzzy
#~ msgid "Next lets add a Qute template producing an HTML form:"
#~ msgstr "A continuación vamos a añadir una plantilla Qute que produzca un formulario HTML:"
