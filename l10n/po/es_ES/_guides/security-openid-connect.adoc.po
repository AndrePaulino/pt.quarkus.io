# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2022-05-17 15:08+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc
#. type: Title =
#: upstream/_guides/security-openid-connect.adoc:6
#, fuzzy, no-wrap
msgid "Using OpenID Connect (OIDC) to Protect Service Applications using Bearer Token Authorization"
msgstr "Uso de OpenID Connect (OIDC) para proteger las aplicaciones de servicios mediante la autorización de tokens de portador"

#. type: Plain text
#: upstream/_guides/security-openid-connect.adoc:12
#, fuzzy
msgid "This guide demonstrates how to use Quarkus OpenID Connect (OIDC) Extension to protect your JAX-RS applications using Bearer Token Authorization where Bearer Tokens are issued by OpenID Connect and OAuth 2.0 compliant Authorization Servers such as https://www.keycloak.org[Keycloak]."
msgstr "Esta guía demuestra cómo utilizar la Extensión OpenID Connect (OIDC) de Quarkus para proteger sus aplicaciones JAX-RS utilizando la Autorización de Token Portador donde los Tokens Portadores son emitidos por OpenID Connect y los Servidores de Autorización compatibles con OAuth 2.0 como  link:https://www.keycloak.org[Keycloak]."

#. type: Plain text
#: upstream/_guides/security-openid-connect.adoc:14
#, fuzzy
msgid "Bearer Token Authorization is the process of authorizing HTTP requests based on the existence and validity of a Bearer Token which provides valuable information to determine the subject of the call as well as whether or not an HTTP resource can be accessed."
msgstr "La autorización de tokens portadores es el proceso de autorización de las solicitudes HTTP basado en la existencia y validez de un token portador que proporciona información valiosa para determinar el sujeto de la llamada, así como si se puede acceder a un recurso HTTP."

#. type: Plain text
#: upstream/_guides/security-openid-connect.adoc:16
#, fuzzy
msgid "Please read the xref:security-openid-connect-web-authentication.adoc[Using OpenID Connect to Protect Web Applications] guide if you need to authenticate and authorize the users using OpenID Connect Authorization Code Flow."
msgstr "Lea la guía  link:security-openid-connect-web-authentication.html[Using OpenID Connect to Protect Web Applications (Uso de OpenID Connect para proteger las aplicaciones web] ) si necesita autenticar y autorizar a los usuarios mediante el flujo de códigos de autorización de OpenID Connect."

#. type: Plain text
#: upstream/_guides/security-openid-connect.adoc:18
#, fuzzy
msgid "If you use Keycloak and Bearer tokens then also see the xref:security-keycloak-authorization.adoc[Using Keycloak to Centralize Authorization] guide."
msgstr "Si utiliza Keycloak y tokens de portador, consulte también la guía  link:security-keycloak-authorization.html[Uso de Keycloak para centralizar la autorización]."

#. type: Plain text
#: upstream/_guides/security-openid-connect.adoc:20
#, fuzzy
msgid "Please read the xref:security-openid-connect-multitenancy.adoc[Using OpenID Connect Multi-Tenancy] guide how to support multiple tenants."
msgstr "Lea la guía  link:security-openid-connect-multitenancy.html[Using OpenID Connect Multi-Tenancy (Uso de OpenID Connect Multi-Tenancy] ) para saber cómo admitir varios inquilinos."

#. type: Title ==
#: upstream/_guides/security-openid-connect.adoc:21
#, fuzzy, no-wrap
msgid "Quickstart"
msgstr "Inicio rápido"

#. type: Title ===
#: upstream/_guides/security-openid-connect.adoc:23
#, fuzzy, no-wrap
msgid "Prerequisites"
msgstr "Requisitos previos"

#. type: Plain text
#: upstream/_guides/security-openid-connect.adoc:28
#, fuzzy
msgid "https://stedolan.github.io/jq/[jq tool]"
msgstr "link:https://stedolan.github.io/jq/[herramienta jq]"

#. type: Title ===
#: upstream/_guides/security-openid-connect.adoc:29
#, fuzzy, no-wrap
msgid "Architecture"
msgstr "Arquitectura"

#. type: Plain text
#: upstream/_guides/security-openid-connect.adoc:32
#, fuzzy
msgid "In this example, we build a very simple microservice which offers two endpoints:"
msgstr "En este ejemplo, construimos un microservicio muy simple que ofrece dos puntos finales:"

#. type: Plain text
#: upstream/_guides/security-openid-connect.adoc:34
#, fuzzy
msgid "`/api/users/me`"
msgstr "`/api/users/me`"

#. type: Plain text
#: upstream/_guides/security-openid-connect.adoc:35
#, fuzzy
msgid "`/api/admin`"
msgstr "`/api/admin`"

#. type: Plain text
#: upstream/_guides/security-openid-connect.adoc:37
#, fuzzy
msgid "These endpoints are protected and can only be accessed if a client is sending a bearer token along with the request, which must be valid (e.g.: signature, expiration and audience) and trusted by the microservice."
msgstr "Estos puntos finales están protegidos y sólo se puede acceder a ellos si un cliente envía un token de portador junto con la solicitud, que debe ser válido (por ejemplo: firma, caducidad y audiencia) y de confianza para el microservicio."

#. type: Plain text
#: upstream/_guides/security-openid-connect.adoc:39
#, fuzzy
msgid "The bearer token is issued by a Keycloak Server and represents the subject to which the token was issued for. For being an OAuth 2.0 Authorization Server, the token also references the client acting on behalf of the user."
msgstr "El token de portador es emitido por un servidor de Keycloak y representa al sujeto para el que se emitió el token. Por ser un Servidor de Autorización OAuth 2.0, el token también hace referencia al cliente que actúa en nombre del usuario."

#. type: Plain text
#: upstream/_guides/security-openid-connect.adoc:41
#, fuzzy
msgid "The `/api/users/me` endpoint can be accessed by any user with a valid token. As a response, it returns a JSON document with details about the user where these details are obtained from the information carried on the token."
msgstr "Al punto final `/api/users/me` puede acceder cualquier usuario con un token válido. Como respuesta, devuelve un documento JSON con detalles sobre el usuario donde estos detalles se obtienen de la información que lleva el token."

#. type: Plain text
#: upstream/_guides/security-openid-connect.adoc:43
#, fuzzy
msgid "The `/api/admin` endpoint is protected with RBAC (Role-Based Access Control) where only users granted with the `admin` role can access. At this endpoint, we use the `@RolesAllowed` annotation to declaratively enforce the access constraint."
msgstr "El punto final `/api/admin` está protegido con RBAC (Role-Based Access Control) donde sólo los usuarios con el rol `admin` pueden acceder. En este punto final, utilizamos la anotación `@RolesAllowed` para imponer declarativamente la restricción de acceso."

#. type: Title ===
#: upstream/_guides/security-openid-connect.adoc:44
#, fuzzy, no-wrap
msgid "Solution"
msgstr "Solución"

#. type: Plain text
#: upstream/_guides/security-openid-connect.adoc:48
#, fuzzy
msgid "We recommend that you follow the instructions in the next sections and create the application step by step.  However, you can go right to the completed example."
msgstr "Le recomendamos que siga las instrucciones de las siguientes secciones y cree la aplicación paso a paso. Sin embargo, puede ir directamente al ejemplo completado."

#. type: Plain text
#: upstream/_guides/security-openid-connect.adoc:50
#, fuzzy
msgid "Clone the Git repository: `git clone {quickstarts-clone-url}`, or download an {quickstarts-archive-url}[archive]."
msgstr "Clone el repositorio Git: `git clone {quickstarts-clone-url}` o descargue un {quickstarts-archive-url}[archivo]."

#. type: Plain text
#: upstream/_guides/security-openid-connect.adoc:52
#, fuzzy
msgid "The solution is located in the `security-openid-connect-quickstart` {quickstarts-tree-url}/security-openid-connect-quickstart[directory]."
msgstr "La solución se encuentra en el `security-openid-connect-quickstart` {quickstarts-tree-url}/security-openid-connect-quickstart[directorio]."

#. type: Title ===
#: upstream/_guides/security-openid-connect.adoc:53
#, fuzzy, no-wrap
msgid "Creating the Maven Project"
msgstr "Creación del proyecto Maven"

#. type: Plain text
#: upstream/_guides/security-openid-connect.adoc:56
#, fuzzy
msgid "First, we need a new project. Create a new project with the following command:"
msgstr "En primer lugar, necesitamos un nuevo proyecto. Cree un nuevo proyecto con el siguiente comando:"

#. type: Plain text
#: upstream/_guides/security-openid-connect.adoc:63
#, fuzzy
msgid "This command generates a Maven project, importing the `oidc` extension which is an implementation of OIDC for Quarkus."
msgstr "Este comando genera un proyecto Maven, importando la extensión `oidc` que es una implementación de OIDC para Quarkus."

#. type: Plain text
#: upstream/_guides/security-openid-connect.adoc:66
#, fuzzy
msgid "If you already have your Quarkus project configured, you can add the `oidc` extension to your project by running the following command in your project base directory:"
msgstr "Si ya tienes tu proyecto Quarkus configurado, puedes añadir la extensión `oidc` a tu proyecto ejecutando el siguiente comando en el directorio base de tu proyecto:"

#. type: Plain text
#: upstream/_guides/security-openid-connect.adoc:71
#, fuzzy
msgid "This will add the following to your build file:"
msgstr "Esto añadirá lo siguiente a su archivo de construcción:"

#. type: Block title
#: upstream/_guides/security-openid-connect.adoc:73
#: upstream/_guides/security-openid-connect.adoc:582
#: upstream/_guides/security-openid-connect.adoc:609
#: upstream/_guides/security-openid-connect.adoc:733
#: upstream/_guides/security-openid-connect.adoc:825
#: upstream/_guides/security-openid-connect.adoc:936
#, fuzzy, no-wrap
msgid "pom.xml"
msgstr "pom.xml"

#. type: delimited block -
#: upstream/_guides/security-openid-connect.adoc:79
#, no-wrap
msgid ""
"<dependency>\n"
"    <groupId>io.quarkus</groupId>\n"
"    <artifactId>quarkus-oidc</artifactId>\n"
"</dependency>\n"
msgstr ""

#. type: Block title
#: upstream/_guides/security-openid-connect.adoc:82
#: upstream/_guides/security-openid-connect.adoc:597
#: upstream/_guides/security-openid-connect.adoc:619
#: upstream/_guides/security-openid-connect.adoc:743
#: upstream/_guides/security-openid-connect.adoc:835
#: upstream/_guides/security-openid-connect.adoc:946
#, fuzzy, no-wrap
msgid "build.gradle"
msgstr "build.gradle"

#. type: delimited block -
#: upstream/_guides/security-openid-connect.adoc:85
#, no-wrap
msgid "implementation(\"io.quarkus:quarkus-oidc\")\n"
msgstr ""

#. type: Title ===
#: upstream/_guides/security-openid-connect.adoc:87
#, fuzzy, no-wrap
msgid "Writing the application"
msgstr "Escribir la aplicación"

#. type: Plain text
#: upstream/_guides/security-openid-connect.adoc:90
#, fuzzy
msgid "Let's start by implementing the `/api/users/me` endpoint. As you can see from the source code below it is just a regular JAX-RS resource:"
msgstr "Empecemos por implementar el endpoint `/api/users/me`. Como se puede ver en el código fuente de abajo es sólo un recurso JAX-RS regular:"

#. type: delimited block -
#: upstream/_guides/security-openid-connect.adoc:94
#: upstream/_guides/security-openid-connect.adoc:137
#: upstream/_guides/security-openid-connect.adoc:323
#: upstream/_guides/security-openid-connect.adoc:772
#: upstream/_guides/security-openid-connect.adoc:806
#, no-wrap
msgid "package org.acme.security.openid.connect;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-openid-connect.adoc:99
#, no-wrap
msgid ""
"import javax.annotation.security.RolesAllowed;\n"
"import javax.inject.Inject;\n"
"import javax.ws.rs.GET;\n"
"import javax.ws.rs.Path;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-openid-connect.adoc:102
#, no-wrap
msgid ""
"import org.jboss.resteasy.reactive.NoCache;\n"
"import io.quarkus.security.identity.SecurityIdentity;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-openid-connect.adoc:105
#, no-wrap
msgid ""
"@Path(\"/api/users\")\n"
"public class UsersResource {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-openid-connect.adoc:108
#, no-wrap
msgid ""
"    @Inject\n"
"    SecurityIdentity securityIdentity;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-openid-connect.adoc:116
#, no-wrap
msgid ""
"    @GET\n"
"    @Path(\"/me\")\n"
"    @RolesAllowed(\"user\")\n"
"    @NoCache\n"
"    public User me() {\n"
"        return new User(securityIdentity);\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-openid-connect.adoc:118
#, no-wrap
msgid "    public static class User {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-openid-connect.adoc:120
#, no-wrap
msgid "        private final String userName;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-openid-connect.adoc:124
#, no-wrap
msgid ""
"        User(SecurityIdentity securityIdentity) {\n"
"            this.userName = securityIdentity.getPrincipal().getName();\n"
"        }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-openid-connect.adoc:130
#, no-wrap
msgid ""
"        public String getUserName() {\n"
"            return userName;\n"
"        }\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-openid-connect.adoc:133
#, fuzzy
msgid "The source code for the `/api/admin` endpoint is also very simple. The main difference here is that we are using a `@RolesAllowed` annotation to make sure that only users granted with the `admin` role can access the endpoint:"
msgstr "El código fuente del endpoint `/api/admin` también es muy sencillo. La principal diferencia aquí es que estamos utilizando una anotación `@RolesAllowed` para asegurarnos de que sólo los usuarios con el rol `admin` pueden acceder al endpoint:"

#. type: delimited block -
#: upstream/_guides/security-openid-connect.adoc:143
#, no-wrap
msgid ""
"import javax.annotation.security.RolesAllowed;\n"
"import javax.ws.rs.GET;\n"
"import javax.ws.rs.Path;\n"
"import javax.ws.rs.Produces;\n"
"import javax.ws.rs.core.MediaType;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-openid-connect.adoc:146
#: upstream/_guides/security-openid-connect.adoc:334
#, no-wrap
msgid ""
"@Path(\"/api/admin\")\n"
"public class AdminResource {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-openid-connect.adoc:154
#, no-wrap
msgid ""
"    @GET\n"
"    @RolesAllowed(\"admin\")\n"
"    @Produces(MediaType.TEXT_PLAIN)\n"
"    public String admin() {\n"
"        return \"granted\";\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-openid-connect.adoc:157
#, fuzzy
msgid "Injection of the `SecurityIdentity` is supported in both `@RequestScoped` and `@ApplicationScoped` contexts."
msgstr "La inyección del `SecurityIdentity` se admite tanto en los contextos de `@RequestScoped` como de `@ApplicationScoped`."

#. type: Title ===
#: upstream/_guides/security-openid-connect.adoc:158
#, fuzzy, no-wrap
msgid "Configuring the application"
msgstr "Configuración de la aplicación"

#. type: Plain text
#: upstream/_guides/security-openid-connect.adoc:161
#, fuzzy
msgid "The OpenID Connect extension allows you to define the adapter configuration using the `application.properties` file which should be located at the `src/main/resources` directory."
msgstr "La extensión de OpenID Connect permite definir la configuración del adaptador mediante el archivo `application.properties`, que debe encontrarse en el directorio `src/main/resources`."

#. type: Plain text
#: upstream/_guides/security-openid-connect.adoc:165
#, fuzzy
msgid "Example configuration:"
msgstr "Ejemplo de configuración:"

#. type: delimited block -
#: upstream/_guides/security-openid-connect.adoc:171
#, no-wrap
msgid ""
"%prod.quarkus.oidc.auth-server-url=http://localhost:8180/realms/quarkus\n"
"quarkus.oidc.client-id=backend-service\n"
"quarkus.oidc.credentials.secret=secret\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-openid-connect.adoc:174
#, no-wrap
msgid ""
"# Tell Dev Services for Keycloak to import the realm file\n"
"# This property is not effective when running the application in JVM or Native modes\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-openid-connect.adoc:176
#, no-wrap
msgid "quarkus.keycloak.devservices.realm-path=quarkus-realm.json\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-openid-connect.adoc:179
#, fuzzy
msgid "Adding a `%prod.` profile prefix to `quarkus.oidc.auth-server-url` ensures that `Dev Services for Keycloak` will launch a container for you when the application is run in a dev mode. See <<keycloak-dev-mode, Running the Application in Dev mode>> section below for more information."
msgstr "Añadir un prefijo de perfil `%prod.` a `quarkus.oidc.auth-server-url` asegura que `Dev Services for Keycloak` lanzará un contenedor por ti cuando la aplicación se ejecute en modo dev. Consulte la sección  link:#keycloak-dev-mode[Ejecutar la aplicación] en modo Dev más abajo para obtener más información."

#. type: Title ===
#: upstream/_guides/security-openid-connect.adoc:180
#, fuzzy, no-wrap
msgid "Starting and Configuring the Keycloak Server"
msgstr "Inicio y configuración del servidor Keycloak"

#. type: Plain text
#: upstream/_guides/security-openid-connect.adoc:183
#, fuzzy
msgid "Do not start the Keycloak server when you run the application in a dev mode - `Dev Services for Keycloak` will launch a container. See <<keycloak-dev-mode, Running the Application in Dev mode>> section below for more information. Make sure to put the {quickstarts-tree-url}/security-openid-connect-quickstart/config/quarkus-realm.json[realm configuration file] on the classpath (`target/classes` directory) so that it gets imported automatically when running in dev mode - unless you have already built a {quickstarts-tree-url}/security-openid-connect-quickstart[complete solution] in which case this realm file will be added to the classpath during the build."
msgstr "No inicie el servidor Keycloak cuando ejecute la aplicación en modo dev - `Dev Services for Keycloak` lanzará un contenedor. Vea la sección  link:#keycloak-dev-mode[Ejecutar la] aplicación en modo Dev más abajo para más información. Asegúrese de poner el {quickstarts-tree-url}/security-openid-connect-quickstart/config/quarkus-realm.json[archivo de configuración del reino] en el classpath (directorio `target/classes` ) para que se importe automáticamente cuando se ejecute en modo dev - a menos que ya haya construido un {quickstarts-tree-url}/security-openid-connect-quickstart[solución completa] en cuyo caso este archivo del reino se añadirá al classpath durante la construcción."

#. type: Plain text
#: upstream/_guides/security-openid-connect.adoc:185
#, fuzzy
msgid "To start a Keycloak Server you can use Docker and just run the following command:"
msgstr "Para iniciar un servidor de Keycloak puede utilizar Docker y simplemente ejecutar el siguiente comando:"

#. type: delimited block -
#: upstream/_guides/security-openid-connect.adoc:189
#, no-wrap
msgid "docker run --name keycloak -e KEYCLOAK_ADMIN=admin -e KEYCLOAK_ADMIN_PASSWORD=admin -p 8180:8080 quay.io/keycloak/keycloak:{keycloak.version} start-dev\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-openid-connect.adoc:192
#, fuzzy
msgid "where `keycloak.version` should be set to `17.0.0` or higher."
msgstr "donde `keycloak.version` debe estar ajustado a `17.0.0` o superior."

#. type: Plain text
#: upstream/_guides/security-openid-connect.adoc:194
#, fuzzy
msgid "You should be able to access your Keycloak Server at http://localhost:8180[localhost:8180]."
msgstr "Debería poder acceder a su servidor Keycloak en  link:http://localhost:8180[localhost:8180]."

#. type: Plain text
#: upstream/_guides/security-openid-connect.adoc:196
#, fuzzy
msgid "Log in as the `admin` user to access the Keycloak Administration Console. Username should be `admin` and password `admin`."
msgstr "Inicie sesión como el usuario `admin` para acceder a la consola de administración de Keycloak. El nombre de usuario debe ser `admin` y la contraseña `admin`."

#. type: Plain text
#: upstream/_guides/security-openid-connect.adoc:198
#, fuzzy
msgid "Import the {quickstarts-tree-url}/security-openid-connect-quickstart/config/quarkus-realm.json[realm configuration file] to create a new realm. For more details, see the Keycloak documentation about how to https://www.keycloak.org/docs/latest/server_admin/index.html#_create-realm[create a new realm]."
msgstr "Importe el {quickstarts-tree-url}/security-openid-connect-quickstart/config/quarkus-realm.json[archivo de configuración del reino] para crear un nuevo reino. Para más detalles, consulte la documentación de Keycloak sobre cómo  link:https://www.keycloak.org/docs/latest/server_admin/index.html#_create-realm[crear un] nuevo reino."

#. type: Plain text
#: upstream/_guides/security-openid-connect.adoc:201
#, fuzzy
msgid "If you want to use the Keycloak Admin Client to configure your server from your application you need to include the either `quarkus-keycloak-admin-client` or the `quarkus-keycloak-admin-client-reactive` (if the application uses `quarkus-rest-client-reactive`) extension."
msgstr "Si desea utilizar el cliente de administración de Keycloak para configurar su servidor desde su aplicación, debe incluir la extensión `quarkus-keycloak-admin-client` o `quarkus-keycloak-admin-client-reactive` (si la aplicación utiliza `quarkus-rest-client-reactive`)."

#. type: Title ===
#: upstream/_guides/security-openid-connect.adoc:203
#, fuzzy, no-wrap
msgid "Running the Application in Dev mode"
msgstr "Ejecutar la aplicación en modo Dev"

#. type: Plain text
#: upstream/_guides/security-openid-connect.adoc:206
#, fuzzy
msgid "To run the application in a dev mode, use:"
msgstr "Para ejecutar la aplicación en modo dev, utilice:"

#. type: Plain text
#: upstream/_guides/security-openid-connect.adoc:210
#, fuzzy
msgid "xref:security-openid-connect-dev-services.adoc[Dev Services for Keycloak] will launch a Keycloak container and import a `quarkus-realm.json`."
msgstr "link:security-openid-connect-dev-services.html[Dev Services for Keycloak] lanzará un contenedor Keycloak e importará un `quarkus-realm.json`."

#. type: Plain text
#: upstream/_guides/security-openid-connect.adoc:212
#, fuzzy
msgid "Open a xref:dev-ui.adoc[Dev UI] available at http://localhost:8080/q/dev[/q/dev] and click on a `Provider: Keycloak` link in an `OpenID Connect` `Dev UI` card."
msgstr "Abra una  link:dev-ui.html[interfaz de usuario de desarrollo] disponible en  link:http://localhost:8080/q/dev[/q/dev] y haga clic en un enlace `Provider: Keycloak` en una tarjeta `OpenID Connect` `Dev UI` ."

#. type: Plain text
#: upstream/_guides/security-openid-connect.adoc:214
#, fuzzy
msgid "You will be asked to login into a `Single Page Application` provided by `OpenID Connect Dev UI`:"
msgstr "Se le pedirá que inicie sesión en un `Single Page Application` proporcionado por `OpenID Connect Dev UI`:"

#. type: Plain text
#: upstream/_guides/security-openid-connect.adoc:216
#, fuzzy
msgid "Login as `alice` (password: `alice`) who has a `user` role"
msgstr "Inicie sesión como `alice` (contraseña: `alice`) que tiene un rol `user`"

#. type: Plain text
#: upstream/_guides/security-openid-connect.adoc:217
#, fuzzy
msgid "accessing `/api/admin` will return `403`"
msgstr "al acceder a `/api/admin` se obtendrá `403`"

#. type: Plain text
#: upstream/_guides/security-openid-connect.adoc:218
#: upstream/_guides/security-openid-connect.adoc:221
#, fuzzy
msgid "accessing `/api/users/me` will return `200`"
msgstr "al acceder a `/api/users/me` se obtendrá `200`"

#. type: Plain text
#: upstream/_guides/security-openid-connect.adoc:219
#, fuzzy
msgid "Logout and login as `admin` (password: `admin`) who has both `admin` and `user` roles"
msgstr "Salir y entrar como `admin` (contraseña: `admin`) que tiene los roles `admin` y `user`"

#. type: Plain text
#: upstream/_guides/security-openid-connect.adoc:220
#, fuzzy
msgid "accessing `/api/admin` will return `200`"
msgstr "al acceder a `/api/admin` se obtendrá `200`"

#. type: Title ===
#: upstream/_guides/security-openid-connect.adoc:222
#, fuzzy, no-wrap
msgid "Running the Application in JVM mode"
msgstr "Ejecutar la aplicación en modo JVM"

#. type: Plain text
#: upstream/_guides/security-openid-connect.adoc:225
#, fuzzy
msgid "When you're done playing with the `dev` mode\" you can run it as a standard Java application."
msgstr "Cuando haya terminado de jugar con el modo `dev` \" puede ejecutarlo como una aplicación Java estándar."

#. type: Plain text
#: upstream/_guides/security-openid-connect.adoc:227
#, fuzzy
msgid "First compile it:"
msgstr "Primero compilarlo:"

#. type: Plain text
#: upstream/_guides/security-openid-connect.adoc:231
#, fuzzy
msgid "Then run it:"
msgstr "Entonces, ejecútalo:"

#. type: delimited block -
#: upstream/_guides/security-openid-connect.adoc:235
#, no-wrap
msgid "java -jar target/quarkus-app/quarkus-run.jar\n"
msgstr ""

#. type: Title ===
#: upstream/_guides/security-openid-connect.adoc:237
#, fuzzy, no-wrap
msgid "Running the Application in Native Mode"
msgstr "Ejecutar la aplicación en modo nativo"

#. type: Plain text
#: upstream/_guides/security-openid-connect.adoc:240
#, fuzzy
msgid "This same demo can be compiled into native code: no modifications required."
msgstr "Esta misma demo se puede compilar en código nativo: no requiere modificaciones."

#. type: Plain text
#: upstream/_guides/security-openid-connect.adoc:244
#, fuzzy
msgid "This implies that you no longer need to install a JVM on your production environment, as the runtime technology is included in the produced binary, and optimized to run with minimal resource overhead."
msgstr "Esto implica que ya no es necesario instalar una JVM en su entorno de producción, ya que la tecnología de tiempo de ejecución está incluida en el binario producido, y optimizada para ejecutarse con una sobrecarga mínima de recursos."

#. type: Plain text
#: upstream/_guides/security-openid-connect.adoc:247
#, fuzzy
msgid "Compilation will take a bit longer, so this step is disabled by default; let's build again by enabling the `native` profile:"
msgstr "La compilación tardará un poco más, por lo que este paso está desactivado por defecto; volvamos a compilar activando el perfil `native`:"

#. type: Plain text
#: upstream/_guides/security-openid-connect.adoc:251
#, fuzzy
msgid "After getting a cup of coffee, you'll be able to run this binary directly:"
msgstr "Después de tomar una taza de café, podrás ejecutar este binario directamente:"

#. type: delimited block -
#: upstream/_guides/security-openid-connect.adoc:255
#, no-wrap
msgid "./target/security-openid-connect-quickstart-1.0.0-SNAPSHOT-runner\n"
msgstr ""

#. type: Title ===
#: upstream/_guides/security-openid-connect.adoc:257
#, fuzzy, no-wrap
msgid "Testing the Application"
msgstr "Probar la aplicación"

#. type: Plain text
#: upstream/_guides/security-openid-connect.adoc:260
#, fuzzy
msgid "See <<keycloak-dev-mode, Running the Application in Dev mode>> section above about testing your application in a dev mode."
msgstr "Consulte la sección  link:#keycloak-dev-mode[Ejecutar la aplicación en modo Dev] más arriba sobre cómo probar su aplicación en modo Dev."

#. type: Plain text
#: upstream/_guides/security-openid-connect.adoc:262
#, fuzzy
msgid "You can test the application launched in JVM or Native modes with `curl`."
msgstr "Puede probar la aplicación lanzada en los modos JVM o Nativo con `curl`."

#. type: Plain text
#: upstream/_guides/security-openid-connect.adoc:265
#, fuzzy
msgid "The application is using bearer token authorization and the first thing to do is obtain an access token from the Keycloak Server in order to access the application resources:"
msgstr "La aplicación está utilizando la autorización de token de portador y lo primero que debe hacer es obtener un token de acceso del servidor de Keycloak para poder acceder a los recursos de la aplicación:"

#. type: delimited block -
#: upstream/_guides/security-openid-connect.adoc:274
#, no-wrap
msgid ""
"export access_token=$(\\\n"
"    curl --insecure -X POST http://localhost:8180/realms/quarkus/protocol/openid-connect/token \\\n"
"    --user backend-service:secret \\\n"
"    -H 'content-type: application/x-www-form-urlencoded' \\\n"
"    -d 'username=alice&password=alice&grant_type=password' | jq --raw-output '.access_token' \\\n"
" )\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-openid-connect.adoc:277
#, fuzzy
msgid "The example above obtains an access token for user `alice`."
msgstr "El ejemplo anterior obtiene un token de acceso para el usuario `alice`."

#. type: Plain text
#: upstream/_guides/security-openid-connect.adoc:281
#, fuzzy
msgid "Any user is allowed to access the `http://localhost:8080/api/users/me` endpoint which basically returns a JSON payload with details about the user."
msgstr "Cualquier usuario puede acceder al `&lt;a href=\"http://localhost:8080/api/users/me\" class=\"bare\"&gt;http://localhost:8080/api/users/me&lt;/a&gt;` que básicamente devuelve una carga útil JSON con detalles sobre el usuario."

#. type: delimited block -
#: upstream/_guides/security-openid-connect.adoc:287
#, no-wrap
msgid ""
"curl -v -X GET \\\n"
"  http://localhost:8080/api/users/me \\\n"
"  -H \"Authorization: Bearer \"$access_token\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-openid-connect.adoc:292
#, fuzzy, no-wrap
msgid ""
"The `http://localhost:8080/api/admin` endpoint can only be accessed by users with the `admin` role. If you try to access this endpoint with the\n"
" previously issued access token, you should get a `403` response\n"
" from the server.\n"
msgstr "El punto final `&lt;a href=\"http://localhost:8080/api/admin\" class=\"bare\"&gt;http://localhost:8080/api/admin&lt;/a&gt;` sólo puede ser accedido por usuarios con el rol `admin`. Si intenta acceder a este punto final con el token de acceso emitido previamente, debería obtener una respuesta `403` del servidor."

#. type: delimited block -
#: upstream/_guides/security-openid-connect.adoc:298
#, no-wrap
msgid ""
"curl -v -X GET \\\n"
"   http://localhost:8080/api/admin \\\n"
"   -H \"Authorization: Bearer \"$access_token\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-openid-connect.adoc:301
#, fuzzy
msgid "In order to access the admin endpoint you should obtain a token for the `admin` user:"
msgstr "Para acceder al punto final de administración debe obtener un token para el usuario `admin`:"

#. type: delimited block -
#: upstream/_guides/security-openid-connect.adoc:310
#, no-wrap
msgid ""
"export access_token=$(\\\n"
"    curl --insecure -X POST http://localhost:8180/realms/quarkus/protocol/openid-connect/token \\\n"
"    --user backend-service:secret \\\n"
"    -H 'content-type: application/x-www-form-urlencoded' \\\n"
"    -d 'username=admin&password=admin&grant_type=password' | jq --raw-output '.access_token' \\\n"
" )\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-openid-connect.adoc:313
#, fuzzy
msgid "Please also see the <<integration-testing-keycloak-devservices, Dev Services for Keycloak>> section below about writing the integration tests which depend on `Dev Services for Keycloak`."
msgstr "Por favor, vea también la sección de  link:#integration-testing-keycloak-devservices[Servicios de Desarrollo para Keycloak] más abajo sobre cómo escribir las pruebas de integración que dependen de `Dev Services for Keycloak`."

#. type: Title ==
#: upstream/_guides/security-openid-connect.adoc:314
#, fuzzy, no-wrap
msgid "Reference Guide"
msgstr "Guía de referencia"

#. type: Title ===
#: upstream/_guides/security-openid-connect.adoc:316
#, fuzzy, no-wrap
msgid "Accessing JWT claims"
msgstr "Acceso a las reclamaciones JWT"

#. type: Plain text
#: upstream/_guides/security-openid-connect.adoc:319
#, fuzzy
msgid "If you need to access JWT token claims then you can inject `JsonWebToken`:"
msgstr "Si necesita acceder a las reclamaciones de tokens JWT, puede inyectar `JsonWebToken`:"

#. type: delimited block -
#: upstream/_guides/security-openid-connect.adoc:331
#, no-wrap
msgid ""
"import org.eclipse.microprofile.jwt.JsonWebToken;\n"
"import javax.inject.Inject;\n"
"import javax.annotation.security.RolesAllowed;\n"
"import javax.ws.rs.GET;\n"
"import javax.ws.rs.Path;\n"
"import javax.ws.rs.Produces;\n"
"import javax.ws.rs.core.MediaType;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-openid-connect.adoc:337
#, no-wrap
msgid ""
"    @Inject\n"
"    JsonWebToken jwt;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-openid-connect.adoc:345
#, no-wrap
msgid ""
"    @GET\n"
"    @RolesAllowed(\"admin\")\n"
"    @Produces(MediaType.TEXT_PLAIN)\n"
"    public String admin() {\n"
"        return \"Access for subject \" + jwt.getSubject() + \" is granted\";\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-openid-connect.adoc:348
#, fuzzy
msgid "Injection of `JsonWebToken` is supported in `@ApplicationScoped`, `@Singleton` and `@RequestScoped` scopes however the use of `@RequestScoped` is required if the individual claims are injected as simple types, please see xref:security-jwt.adoc#supported-injection-scopes[Support Injection Scopes for JsonWebToken and Claims] for more details."
msgstr "La inyección de `JsonWebToken` está soportada en los ámbitos `@ApplicationScoped`, `@Singleton` y `@RequestScoped` sin embargo se requiere el uso de `@RequestScoped` si las reclamaciones individuales son inyectadas como tipos simples, por favor vea  link:security-jwt.html#supported-injection-scopes[Ámbitos de Inyección de Soporte para JsonWebToken y Reclamaciones] para más detalles."

#. type: Title ===
#: upstream/_guides/security-openid-connect.adoc:350
#, fuzzy, no-wrap
msgid "User Info"
msgstr "Información del usuario"

#. type: Plain text
#: upstream/_guides/security-openid-connect.adoc:355
#, fuzzy
msgid "Set `quarkus.oidc.authentication.user-info-required=true` if a UserInfo JSON object from the OIDC userinfo endpoint has to be requested.  A request will be sent to the OpenID Provider UserInfo endpoint and an `io.quarkus.oidc.UserInfo` (a simple `javax.json.JsonObject` wrapper) object will be created.  `io.quarkus.oidc.UserInfo` can be either injected or accessed as a SecurityIdentity `userinfo` attribute."
msgstr "Establece `quarkus.oidc.authentication.user-info-required=true` si se debe solicitar un objeto JSON UserInfo desde el punto final OIDC userinfo. Se enviará una solicitud al punto final de UserInfo del proveedor de OpenID y se creará un objeto `io.quarkus.oidc.UserInfo` (un simple envoltorio de `javax.json.JsonObject` ). `io.quarkus.oidc.UserInfo` se puede inyectar o acceder como un atributo de SecurityIdentity `userinfo`."

#. type: Title ===
#: upstream/_guides/security-openid-connect.adoc:357
#, fuzzy, no-wrap
msgid "Configuration Metadata"
msgstr "Metadatos de configuración"

#. type: Plain text
#: upstream/_guides/security-openid-connect.adoc:360
#, fuzzy
msgid "The current tenant's discovered link:https://openid.net/specs/openid-connect-discovery-1_0.html#ProviderMetadata[OpenID Connect Configuration Metadata] is represented by `io.quarkus.oidc.OidcConfigurationMetadata` and can be either injected or accessed as a `SecurityIdentity` `configuration-metadata` attribute."
msgstr "Los  link:https://openid.net/specs/openid-connect-discovery-1_0.html#ProviderMetadata[metadatos de configuración de OpenID Connect] descubiertos por el inquilino actual están representados por `io.quarkus.oidc.OidcConfigurationMetadata` y se puede inyectar o acceder a ellos como un atributo de `SecurityIdentity` `configuration-metadata` ."

#. type: Plain text
#: upstream/_guides/security-openid-connect.adoc:362
#, fuzzy
msgid "The default tenant's `OidcConfigurationMetadata` is injected if the endpoint is public."
msgstr "Se inyecta el `OidcConfigurationMetadata` del inquilino por defecto si el punto final es público."

#. type: Title ===
#: upstream/_guides/security-openid-connect.adoc:363
#, fuzzy, no-wrap
msgid "Token Claims And SecurityIdentity Roles"
msgstr "Reclamos de tokens y roles de identidad de seguridad"

#. type: Plain text
#: upstream/_guides/security-openid-connect.adoc:366
#, fuzzy
msgid "SecurityIdentity roles can be mapped from the verified JWT access tokens as follows:"
msgstr "Los roles de SecurityIdentity pueden ser mapeados desde los tokens de acceso JWT verificados como sigue:"

#. type: Plain text
#: upstream/_guides/security-openid-connect.adoc:369
#, fuzzy
msgid "If `quarkus.oidc.roles.role-claim-path` property is set and matching array or string claims are found then the roles are extracted from these claims.  For example, `customroles`, `customroles/array`, `scope`, `\"http://namespace-qualified-custom-claim\"/roles`, `\"http://namespace-qualified-roles\"`, etc."
msgstr "Si se establece la propiedad `quarkus.oidc.roles.role-claim-path` y se encuentran declaraciones de matriz o de cadena que coincidan, los roles se extraen de estas declaraciones. Por ejemplo, `customroles`, `customroles/array`, `scope`, `\"http://namespace-qualified-custom-claim\"/roles`, `\"http://namespace-qualified-roles\"`, etc."

#. type: Plain text
#: upstream/_guides/security-openid-connect.adoc:370
#, fuzzy
msgid "If `groups` claim is available then its value is used"
msgstr "Si se dispone de la demanda `groups`, se utiliza su valor"

#. type: Plain text
#: upstream/_guides/security-openid-connect.adoc:372
#, fuzzy
msgid "If `realm_access/roles` or `resource_access/client_id/roles` (where `client_id` is the value of the `quarkus.oidc.client-id` property) claim is available then its value is used.  This check supports the tokens issued by Keycloak"
msgstr "Si el reclamo `realm_access/roles` o `resource_access/client_id/roles` (donde `client_id` es el valor de la propiedad `quarkus.oidc.client-id` ) está disponible, entonces se utiliza su valor. Esta comprobación es compatible con los tokens emitidos por Keycloak"

#. type: Plain text
#: upstream/_guides/security-openid-connect.adoc:374
#, fuzzy
msgid "If the token is opaque (binary) then a `scope` property from the remote token introspection response will be used."
msgstr "Si el token es opaco (binario), se utilizará una propiedad `scope` de la respuesta de introspección del token remoto."

#. type: Plain text
#: upstream/_guides/security-openid-connect.adoc:376
#, fuzzy
msgid "If UserInfo is the source of the roles then set `quarkus.oidc.authentication.user-info-required=true` and `quarkus.oidc.roles.source=userinfo`, and if needed, `quarkus.oidc.roles.role-claim-path`."
msgstr "Si UserInfo es la fuente de los roles, entonces establece `quarkus.oidc.authentication.user-info-required=true` y `quarkus.oidc.roles.source=userinfo`, y si es necesario, `quarkus.oidc.roles.role-claim-path`."

#. type: Plain text
#: upstream/_guides/security-openid-connect.adoc:378
#, fuzzy
msgid "Additionally a custom `SecurityIdentityAugmentor` can also be used to add the roles as documented xref:security.adoc#security-identity-customization[here]."
msgstr "Además, se puede utilizar un `SecurityIdentityAugmentor` personalizado para añadir los roles como se documenta  link:security.html#security-identity-customization[aquí]."

#. type: Title ===
#: upstream/_guides/security-openid-connect.adoc:380
#, fuzzy, no-wrap
msgid "Token Verification And Introspection"
msgstr "Verificación e introspección de fichas"

#. type: Plain text
#: upstream/_guides/security-openid-connect.adoc:385
#, fuzzy
msgid "If the token is a JWT token then, by default, it will be verified with a `JsonWebKey` (JWK) key from a local `JsonWebKeySet` retrieved from the OpenID Connect Provider's JWK endpoint. The token's key identifier `kid` header value will be used to find the matching JWK key.  If no matching `JWK` is available locally then `JsonWebKeySet` will be refreshed by fetching the current key set from the JWK endpoint. The `JsonWebKeySet` refresh can be repeated again only after the `quarkus.oidc.token.forced-jwk-refresh-interval` (default is 10 minutes) expires.  If no matching `JWK` is available after the refresh then the JWT token will be sent to the OpenID Connect Provider's token introspection endpoint."
msgstr "Si el token es un token JWT, entonces, por defecto, se verificará con una clave `JsonWebKey` (JWK) de un `JsonWebKeySet` local recuperado del punto final JWK del proveedor de OpenID Connect. El valor del identificador de clave del token `kid` se utilizará para encontrar la clave JWK correspondiente. Si no hay ninguna `JWK` que coincida localmente, se actualizará `JsonWebKeySet` recuperando el conjunto de claves actual del punto final JWK. La actualización de `JsonWebKeySet` puede repetirse sólo después de que expire el plazo de `quarkus.oidc.token.forced-jwk-refresh-interval` (por defecto es de 10 minutos). Si no hay ningún `JWK` disponible después de la actualización, el token JWT se enviará al punto final de introspección de tokens del proveedor de OpenID Connect."

#. type: Plain text
#: upstream/_guides/security-openid-connect.adoc:387
#, fuzzy
msgid "If the token is opaque (it can be a binary token or an encrypted JWT token) then it will always be sent to the OpenID Connect Provider's token introspection endpoint."
msgstr "Si el token es opaco (puede ser un token binario o un token JWT encriptado), siempre se enviará al punto final de introspección de tokens del proveedor de OpenID Connect."

#. type: Plain text
#: upstream/_guides/security-openid-connect.adoc:389
#, fuzzy
msgid "If you work with JWT tokens only and expect that a matching `JsonWebKey` will always be available (possibly after a key set refresh) then you should disable the token introspection:"
msgstr "Si trabajas con tokens JWT solamente y esperas que un `JsonWebKey` que coincida esté siempre disponible (posiblemente después de una actualización del conjunto de claves), entonces debes desactivar la introspección de tokens:"

#. type: delimited block -
#: upstream/_guides/security-openid-connect.adoc:394
#, no-wrap
msgid ""
"quarkus.oidc.token.allow-jwt-introspection=false\n"
"quarkus.oidc.token.allow-opaque-token-introspection=false\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-openid-connect.adoc:397
#, fuzzy
msgid "However, there could be cases where JWT tokens must be verified via the introspection only. It can be forced by configuring an introspection endpoint address only, for example, in case of Keycloak you can do it like this:"
msgstr "Sin embargo, puede haber casos en los que los tokens JWT deban ser verificados únicamente a través de la introspección. Se puede forzar configurando una dirección de punto final de introspección solamente, por ejemplo, en el caso de Keycloak se puede hacer así:"

#. type: delimited block -
#: upstream/_guides/security-openid-connect.adoc:404
#, no-wrap
msgid ""
"quarkus.oidc.auth-server-url=http://localhost:8180/realms/quarkus\n"
"quarkus.oidc.discovery-enabled=false\n"
"# Token Introspection endpoint: http://localhost:8180/realms/quarkus/protocol/openid-connect/tokens/introspect\n"
"quarkus.oidc.introspection-path=/protocol/openid-connect/tokens/introspect\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-openid-connect.adoc:407
#, fuzzy
msgid "Note that `io.quarkus.oidc.TokenIntrospection` (a simple `javax.json.JsonObject` wrapper) object will be created and can be either injected or accessed as a SecurityIdentity `introspection` attribute if either JWT or opaque token has been successfully introspected."
msgstr "Tenga en cuenta que se creará el objeto `io.quarkus.oidc.TokenIntrospection` (un simple envoltorio de `javax.json.JsonObject` ) y se podrá inyectar o acceder a él como atributo SecurityIdentity `introspection` si se ha introspeccionado con éxito el JWT o el token opaco."

#. type: Title ===
#: upstream/_guides/security-openid-connect.adoc:409
#, fuzzy, no-wrap
msgid "Token Introspection and UserInfo Cache"
msgstr "Introspección de tokens y caché de información de usuario"

#. type: Plain text
#: upstream/_guides/security-openid-connect.adoc:412
#, fuzzy
msgid "All opaque and sometimes JWT Bearer access tokens have to be remotely introspected. If `UserInfo` is also required then the same access token will be used to do a remote call to OpenID Connect Provider again. So, if `UserInfo` is required and the current access token is opaque then for every such token there will be 2 remote calls done - one to introspect it and one to get UserInfo with it, and if the token is JWT then usually only a single remote call will be needed - to get UserInfo with it."
msgstr "Todos los tokens de acceso opacos y a veces JWT Bearer tienen que ser introspeccionados remotamente. Si también se requiere `UserInfo` entonces el mismo token de acceso se utilizará para hacer una llamada remota al proveedor de OpenID Connect de nuevo. Por lo tanto, si se requiere `UserInfo` y el token de acceso actual es opaco, entonces para cada token de este tipo se realizarán 2 llamadas remotas - una para introspeccionarla y otra para obtener UserInfo con ella, y si el token es JWT entonces normalmente sólo se necesitará una única llamada remota - para obtener UserInfo con ella."

#. type: Plain text
#: upstream/_guides/security-openid-connect.adoc:414
#, fuzzy
msgid "The cost of making up to 2 remote calls per every incoming bearer or code flow access token can sometimes be problematic."
msgstr "El coste de realizar hasta 2 llamadas remotas por cada token de acceso de flujo de código o portador entrante puede ser a veces problemático."

#. type: Plain text
#: upstream/_guides/security-openid-connect.adoc:416
#, fuzzy
msgid "If it is the case in your production then it can be recommended that the token introspection and `UserInfo` data are cached for a short period of time, for example, for 3 or 5 minutes."
msgstr "Si es el caso en su producción, se puede recomendar que la introspección de tokens y los datos de `UserInfo` se almacenen en caché durante un corto período de tiempo, por ejemplo, durante 3 o 5 minutos."

#. type: Plain text
#: upstream/_guides/security-openid-connect.adoc:418
#, fuzzy
msgid "`quarkus-oidc` provides `quarkus.oidc.TokenIntrospectionCache` and `quarkus.oidc.UserInfoCache` interfaces which can be used to implement `@ApplicationScoped` cache implementation which can be used to store and retrieve `quarkus.oidc.TokenIntrospection` and/or `quarkus.oidc.UserInfo` objects, for example:"
msgstr "`quarkus-oidc` proporciona las interfaces `quarkus.oidc.TokenIntrospectionCache` y `quarkus.oidc.UserInfoCache` que pueden utilizarse para implementar la caché `@ApplicationScoped` que puede utilizarse para almacenar y recuperar objetos `quarkus.oidc.TokenIntrospection` y/o `quarkus.oidc.UserInfo`, por ejemplo:"

#. type: delimited block -
#: upstream/_guides/security-openid-connect.adoc:426
#, no-wrap
msgid ""
"@ApplicationScoped\n"
"@AlternativePriority(1)\n"
"public class CustomIntrospectionUserInfoCache implements TokenIntrospectionCache, UserInfoCache {\n"
"...\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-openid-connect.adoc:429
#, fuzzy
msgid "Each OIDC tenant can either permit or deny storing its `quarkus.oidc.TokenIntrospection` and/or `quarkus.oidc.UserInfo` data with boolean `quarkus.oidc.\"tenant\".allow-token-introspection-cache` and `quarkus.oidc.\"tenant\".allow-user-info-cache` properties."
msgstr "Cada inquilino de OIDC puede permitir o denegar el almacenamiento de sus datos de `quarkus.oidc.TokenIntrospection` y/o `quarkus.oidc.UserInfo` con las propiedades booleanas `quarkus.oidc.\"tenant\".allow-token-introspection-cache` y `quarkus.oidc.\"tenant\".allow-user-info-cache`."

#. type: Plain text
#: upstream/_guides/security-openid-connect.adoc:431
#, fuzzy
msgid "Additionally, `quarkus-oidc` provides a simple default memory based token cache which implements both `quarkus.oidc.TokenIntrospectionCache` and `quarkus.oidc.UserInfoCache` interfaces."
msgstr "Además, `quarkus-oidc` proporciona una sencilla caché de fichas basada en la memoria por defecto que implementa las interfaces `quarkus.oidc.TokenIntrospectionCache` y `quarkus.oidc.UserInfoCache`."

#. type: Plain text
#: upstream/_guides/security-openid-connect.adoc:433
#, fuzzy
msgid "It can be activated and configured as follows:"
msgstr "Se puede activar y configurar de la siguiente manera:"

#. type: delimited block -
#: upstream/_guides/security-openid-connect.adoc:442
#, no-wrap
msgid ""
"# 'max-size' is 0 by default so the cache can be activated by setting 'max-size' to a positive value.\n"
"quarkus.oidc.token-cache.max-size=1000\n"
"# 'time-to-live' specifies how long a cache entry can be valid for and will be used by a clean up timer.\n"
"quarkus.oidc.token-cache.time-to-live=3M\n"
"# 'clean-up-timer-interval' is not set by default so the clean up timer can be activated by setting 'clean-up-timer-interval'.\n"
"quarkus.oidc.token-cache.clean-up-timer-interval=1M\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-openid-connect.adoc:445
#, fuzzy
msgid "The default cache uses a token as a key and each entry can have `TokenIntrospection` and/or `UserInfo`. It will only keep up to a `max-size` number of entries. If the cache is full when a new entry is to be added then an attempt will be made to find a space for it by removing a single expired entry. Additionally, the clean up timer, if activated, will periodically check for the expired entries and remove them."
msgstr "La caché por defecto utiliza un token como clave y cada entrada puede tener `TokenIntrospection` y/o `UserInfo`. Sólo mantendrá hasta un número de entradas de `max-size`. Si la caché está llena cuando se va a añadir una nueva entrada, se intentará encontrar un espacio para ella eliminando una única entrada caducada. Además, el temporizador de limpieza, si está activado, comprobará periódicamente las entradas caducadas y las eliminará."

#. type: Plain text
#: upstream/_guides/security-openid-connect.adoc:447
#, fuzzy
msgid "Please experiment with the default cache implementation or register a custom one."
msgstr "Por favor, experimente con la implementación de la caché por defecto o registre una personalizada."

#. type: Title ===
#: upstream/_guides/security-openid-connect.adoc:449
#, fuzzy, no-wrap
msgid "JSON Web Token Claim Verification"
msgstr "Verificación de reclamaciones con tokens web JSON"

#. type: Plain text
#: upstream/_guides/security-openid-connect.adoc:452
#, fuzzy
msgid "Once the bearer JWT token's signature has been verified and its `expires at` (`exp`) claim has been checked, the `iss` (`issuer`) claim value is verified next."
msgstr "Una vez que se ha verificado la firma del token JWT portador y se ha comprobado su declaración `expires at` ( `exp`), se verifica a continuación el valor de la declaración `iss` ( `issuer`)."

#. type: Plain text
#: upstream/_guides/security-openid-connect.adoc:455
#, fuzzy
msgid "By default, the `iss` claim value is compared to the `issuer` property which may have been discovered in the well-known provider configuration.  But if `quarkus.oidc.token.issuer` property is set then the `iss` claim value is compared to it instead."
msgstr "Por defecto, el valor de la reclamación `iss` se compara con la propiedad `issuer` que puede haber sido descubierta en la configuración del proveedor conocido. Pero si la propiedad `quarkus.oidc.token.issuer` está establecida, entonces el valor de la reclamación `iss` se compara con ella."

#. type: Plain text
#: upstream/_guides/security-openid-connect.adoc:457
#, fuzzy
msgid "In some cases, this `iss` claim verification may not work. For example, if the discovered `issuer` property contains an internal HTTP/IP address while the token `iss` claim value contains an external HTTP/IP address. Or when a discovered `issuer` property contains the template tenant variable but the token `iss` claim value has the complete tenant-specific issuer value."
msgstr "En algunos casos, esta verificación de reclamaciones `iss` puede no funcionar. Por ejemplo, si la propiedad descubierta `issuer` contiene una dirección HTTP/IP interna mientras que el valor de reclamación del token `iss` contiene una dirección HTTP/IP externa. O cuando una propiedad descubierta `issuer` contiene la variable del inquilino de la plantilla pero el valor de reclamación del token `iss` tiene el valor completo del emisor específico del inquilino."

#. type: Plain text
#: upstream/_guides/security-openid-connect.adoc:459
#, fuzzy
msgid "In such cases you may want to consider skipping the issuer verification by setting `quarkus.oidc.token.issuer=any`. Please note that it is not recommended and should be avoided unless no other options are available:"
msgstr "En estos casos, puede considerar omitir la verificación del emisor configurando `quarkus.oidc.token.issuer=any`. Tenga en cuenta que no se recomienda y debe evitarse a menos que no haya otras opciones disponibles:"

#. type: Plain text
#: upstream/_guides/security-openid-connect.adoc:461
#, fuzzy
msgid "If you work with Keycloak and observe the issuer verification errors due to the different host addresses then configure Keycloak with a `KEYCLOAK_FRONTEND_URL` property to ensure the same host address is used."
msgstr "Si trabaja con Keycloak y observa los errores de verificación del emisor debido a las diferentes direcciones de host, configure Keycloak con una propiedad `KEYCLOAK_FRONTEND_URL` para asegurar que se utiliza la misma dirección de host."

#. type: Plain text
#: upstream/_guides/security-openid-connect.adoc:462
#, fuzzy
msgid "If the `iss` property is tenant specific in a multi-tenant deployment then you can use the `SecurityIdentity` `tenant-id` attribute to check the issuer is correct in the endpoint itself or the custom JAX-RS filter, for example:"
msgstr "Si la propiedad `iss` es específica del inquilino en un despliegue multi-inquilino, entonces puede utilizar el atributo `SecurityIdentity` `tenant-id` para comprobar que el emisor es correcto en el propio endpoint o en el filtro JAX-RS personalizado, por ejemplo:"

#. type: delimited block -
#: upstream/_guides/security-openid-connect.adoc:469
#, no-wrap
msgid ""
"import javax.inject.Inject;\n"
"import javax.ws.rs.container.ContainerRequestContext;\n"
"import javax.ws.rs.container.ContainerRequestFilter;\n"
"import javax.ws.rs.ext.Provider;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-openid-connect.adoc:473
#, no-wrap
msgid ""
"import org.eclipse.microprofile.jwt.JsonWebToken;\n"
"import io.quarkus.oidc.OidcConfigurationMetadata;\n"
"import io.quarkus.security.identity.SecurityIdentity;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-openid-connect.adoc:478
#, no-wrap
msgid ""
"@Provider\n"
"public class IssuerValidator implements ContainerRequestFilter {\n"
"    @Inject\n"
"    OidcConfigurationMetadata configMetadata;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-openid-connect.adoc:481
#, no-wrap
msgid ""
"    @Inject JsonWebToken jwt;\n"
"    @Inject SecurityIdentity identity;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-openid-connect.adoc:489
#, no-wrap
msgid ""
"    public void filter(ContainerRequestContext requestContext) {\n"
"        String issuer = configMetadata.getIssuer().replace(\"{tenant-id}\", identity.getAttribute(\"tenant-id\"));\n"
"        if (!issuer.equals(jwt.getIssuer())) {\n"
"            requestContext.abortWith(Response.status(401).build());\n"
"        }\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-openid-connect.adoc:492
#, fuzzy
msgid "Note it is also recommended to use `quarkus.oidc.token.audience` property to verify the token `aud` (`audience`) claim value."
msgstr "Se recomienda utilizar también la propiedad `quarkus.oidc.token.audience` para verificar el valor de la ficha `aud` ( `audience`)."

#. type: Title ===
#: upstream/_guides/security-openid-connect.adoc:494
#, fuzzy, no-wrap
msgid "Single Page Applications"
msgstr "Aplicaciones de una sola página"

#. type: Plain text
#: upstream/_guides/security-openid-connect.adoc:498
#, fuzzy
msgid "Single Page Application (SPA) typically uses `XMLHttpRequest`(XHR) and the Java Script utility code provided by the OpenID Connect provider to acquire a bearer token and use it to access Quarkus `service` applications."
msgstr "La aplicación de página única (SPA) suele utilizar `XMLHttpRequest`(XHR) y el código de utilidad Java Script proporcionado por el proveedor de OpenID Connect para adquirir un token de portador y utilizarlo para acceder a las aplicaciones de Quarkus `service`."

#. type: Plain text
#: upstream/_guides/security-openid-connect.adoc:500
#, fuzzy
msgid "For example, here is how you can use `keycloak.js` to authenticate the users and refresh the expired tokens from the SPA:"
msgstr "Por ejemplo, así es como se puede utilizar `keycloak.js` para autenticar a los usuarios y refrescar los tokens caducados desde el SPA:"

#. type: delimited block -
#: upstream/_guides/security-openid-connect.adoc:539
#, no-wrap
msgid ""
"<html>\n"
"<head>\n"
"    <title>keycloak-spa</title>\n"
"    <script src=\"https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js\"></script>\n"
"    <script src=\"http://localhost:8180/js/keycloak.js\"></script>\n"
"    <script>\n"
"        var keycloak = new Keycloak();\n"
"        keycloak.init({onLoad: 'login-required'}).success(function () {\n"
"            console.log('User is now authenticated.');\n"
"        }).error(function () {\n"
"            window.location.reload();\n"
"        });\n"
"        function makeAjaxRequest() {\n"
"            axios.get(\"/api/hello\", {\n"
"                headers: {\n"
"                    'Authorization': 'Bearer ' + keycloak.token\n"
"                }\n"
"            })\n"
"            .then( function (response) {\n"
"                console.log(\"Response: \", response.status);\n"
"            }).catch(function (error) {\n"
"                console.log('refreshing');\n"
"                keycloak.updateToken(5).then(function () {\n"
"                    console.log('Token refreshed');\n"
"                }).catch(function () {\n"
"                    console.log('Failed to refresh token');\n"
"                    window.location.reload();\n"
"                });\n"
"            });\n"
"    }\n"
"    </script>\n"
"</head>\n"
"<body>\n"
"    <button onclick=\"makeAjaxRequest()\">Request</button>\n"
"</body>\n"
"</html>\n"
msgstr ""

#. type: Title ===
#: upstream/_guides/security-openid-connect.adoc:541
#, fuzzy, no-wrap
msgid "Cross Origin Resource Sharing"
msgstr "Compartir recursos entre orígenes"

#. type: Plain text
#: upstream/_guides/security-openid-connect.adoc:544
#, fuzzy
msgid "If you plan to consume your OpenID Connect `service` application from a Single Page Application running on a different domain, you will need to configure CORS (Cross-Origin Resource Sharing). Please read the xref:http-reference.adoc#cors-filter[HTTP CORS documentation] for more details."
msgstr "Si planea consumir su aplicación OpenID Connect `service` desde una aplicación de página única que se ejecuta en un dominio diferente, tendrá que configurar CORS (Cross-Origin Resource Sharing). Lea la  link:http-reference.html#cors-filter[documentación de HTTP CORS] para obtener más detalles."

#. type: Title ===
#: upstream/_guides/security-openid-connect.adoc:545
#, fuzzy, no-wrap
msgid "Provider Endpoint configuration"
msgstr "Configuración del punto final del proveedor"

#. type: Plain text
#: upstream/_guides/security-openid-connect.adoc:548
#, fuzzy
msgid "OIDC `service` application needs to know OpenID Connect provider's token, `JsonWebKey` (JWK) set and possibly `UserInfo` and introspection endpoint addresses."
msgstr "La aplicación OIDC `service` necesita conocer el token del proveedor de OpenID Connect, el conjunto de `JsonWebKey` (JWK) y posiblemente las direcciones de los endpoints de introspección y `UserInfo`."

#. type: Plain text
#: upstream/_guides/security-openid-connect.adoc:550
#, fuzzy
msgid "By default they are discovered by adding a `/.well-known/openid-configuration` path to the configured `quarkus.oidc.auth-server-url`."
msgstr "Por defecto se descubren añadiendo una ruta `/.well-known/openid-configuration` a la configurada `quarkus.oidc.auth-server-url`."

#. type: Plain text
#: upstream/_guides/security-openid-connect.adoc:552
#, fuzzy
msgid "Alternatively, if the discovery endpoint is not available or you would like to save on the discovery endpoint roundtrip, you can disable the discovery and configure them with relative path values, for example:"
msgstr "Como alternativa, si el punto final de descubrimiento no está disponible o si desea ahorrar en el viaje de ida y vuelta del punto final de descubrimiento, puede desactivar el descubrimiento y configurarlos con valores de ruta relativa, por ejemplo:"

#. type: delimited block -
#: upstream/_guides/security-openid-connect.adoc:565
#, no-wrap
msgid ""
"quarkus.oidc.auth-server-url=http://localhost:8180/realms/quarkus\n"
"quarkus.oidc.discovery-enabled=false\n"
"# Token endpoint: http://localhost:8180/realms/quarkus/protocol/openid-connect/token\n"
"quarkus.oidc.token-path=/protocol/openid-connect/token\n"
"# JWK set endpoint: http://localhost:8180/realms/quarkus/protocol/openid-connect/certs\n"
"quarkus.oidc.jwks-path=/protocol/openid-connect/certs\n"
"# UserInfo endpoint: http://localhost:8180/realms/quarkus/protocol/openid-connect/userinfo\n"
"quarkus.oidc.user-info-path=/protocol/openid-connect/userinfo\n"
"# Token Introspection endpoint: http://localhost:8180/realms/quarkus/protocol/openid-connect/tokens/introspect\n"
"quarkus.oidc.introspection-path=/protocol/openid-connect/tokens/introspect\n"
msgstr ""

#. type: Title ===
#: upstream/_guides/security-openid-connect.adoc:567
#, fuzzy, no-wrap
msgid "Token Propagation"
msgstr "Propagación de fichas"

#. type: Plain text
#: upstream/_guides/security-openid-connect.adoc:570
#, fuzzy
msgid "Please see xref:security-openid-connect-client.adoc#token-propagation[Token Propagation] section about the Bearer access token propagation to the downstream services."
msgstr "Consulte la sección de  link:security-openid-connect-client.html#token-propagation[propagación de tokens] sobre la propagación de tokens de acceso al portador a los servicios posteriores."

#. type: Title ===
#: upstream/_guides/security-openid-connect.adoc:572
#, fuzzy, no-wrap
msgid "Oidc Provider Client Authentication"
msgstr "Autenticación de clientes del proveedor Oidc"

#. type: Plain text
#: upstream/_guides/security-openid-connect.adoc:575
#, fuzzy
msgid "`quarkus.oidc.runtime.OidcProviderClient` is used when a remote request to an OpenID Connect Provider has to be done. If the bearer token has to be introspected then `OidcProviderClient` has to authenticate to the OpenID Connect Provider. Please see xref:security-openid-connect-web-authentication.adoc#oidc-provider-client-authentication[OidcProviderClient Authentication] for more information about all the supported authentication options."
msgstr "`quarkus.oidc.runtime.OidcProviderClient` se utiliza cuando hay que hacer una petición remota a un proveedor de OpenID Connect. Si el token de portador tiene que ser introspeccionado, entonces `OidcProviderClient` tiene que autenticarse con el proveedor de OpenID Connect. Por favor, consulta  link:security-openid-connect-web-authentication.html#oidc-provider-client-authentication[OidcProviderClient Authentication] para más información sobre todas las opciones de autenticación soportadas."

#. type: Title ===
#: upstream/_guides/security-openid-connect.adoc:577
#, fuzzy, no-wrap
msgid "Testing"
msgstr "Probando"

#. type: Plain text
#: upstream/_guides/security-openid-connect.adoc:580
#, fuzzy
msgid "Start by adding the following dependencies to your test project:"
msgstr "Comience por añadir las siguientes dependencias a su proyecto de prueba:"

#. type: delimited block -
#: upstream/_guides/security-openid-connect.adoc:594
#, no-wrap
msgid ""
"<dependency>\n"
"    <groupId>io.rest-assured</groupId>\n"
"    <artifactId>rest-assured</artifactId>\n"
"    <scope>test</scope>\n"
"</dependency>\n"
"<dependency>\n"
"    <groupId>io.quarkus</groupId>\n"
"    <artifactId>quarkus-junit5</artifactId>\n"
"    <scope>test</scope>\n"
"</dependency>\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-openid-connect.adoc:601
#, no-wrap
msgid ""
"testImplementation(\"io.rest-assured:rest-assured\")\n"
"testImplementation(\"io.quarkus:quarkus-junit5\")\n"
msgstr ""

#. type: Title ====
#: upstream/_guides/security-openid-connect.adoc:604
#, fuzzy, no-wrap
msgid "Wiremock"
msgstr "Wiremock"

#. type: Plain text
#: upstream/_guides/security-openid-connect.adoc:607
#, fuzzy
msgid "Add the following dependencies to your test project:"
msgstr "Añada las siguientes dependencias a su proyecto de prueba:"

#. type: delimited block -
#: upstream/_guides/security-openid-connect.adoc:616
#, no-wrap
msgid ""
"<dependency>\n"
"    <groupId>io.quarkus</groupId>\n"
"    <artifactId>quarkus-test-oidc-server</artifactId>\n"
"    <scope>test</scope>\n"
"</dependency>\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-openid-connect.adoc:622
#, no-wrap
msgid "testImplementation(\"io.quarkus:quarkus-test-oidc-server\")\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-openid-connect.adoc:625
#: upstream/_guides/security-openid-connect.adoc:864
#, fuzzy
msgid "Prepare the REST test endpoint, set `application.properties`, for example:"
msgstr "Prepare el punto final de la prueba REST, establezca `application.properties`, por ejemplo:"

#. type: delimited block -
#: upstream/_guides/security-openid-connect.adoc:632
#, no-wrap
msgid ""
"# keycloak.url is set by OidcWiremockTestResource\n"
"quarkus.oidc.auth-server-url=${keycloak.url}/realms/quarkus/\n"
"quarkus.oidc.client-id=quarkus-service-app\n"
"quarkus.oidc.application-type=service\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-openid-connect.adoc:635
#: upstream/_guides/security-openid-connect.adoc:875
#, fuzzy
msgid "and finally write the test code, for example:"
msgstr "y finalmente escribir el código de prueba, por ejemplo:"

#. type: delimited block -
#: upstream/_guides/security-openid-connect.adoc:639
#, no-wrap
msgid "import static org.hamcrest.Matchers.equalTo;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-openid-connect.adoc:641
#, no-wrap
msgid "import java.util.Set;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-openid-connect.adoc:643
#: upstream/_guides/security-openid-connect.adoc:695
#, no-wrap
msgid "import org.junit.jupiter.api.Test;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-openid-connect.adoc:649
#, no-wrap
msgid ""
"import io.quarkus.test.common.QuarkusTestResource;\n"
"import io.quarkus.test.junit.QuarkusTest;\n"
"import io.quarkus.test.oidc.server.OidcWiremockTestResource;\n"
"import io.restassured.RestAssured;\n"
"import io.smallrye.jwt.build.Jwt;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-openid-connect.adoc:653
#, no-wrap
msgid ""
"@QuarkusTest\n"
"@QuarkusTestResource(OidcWiremockTestResource.class)\n"
"public class BearerTokenAuthorizationTest {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-openid-connect.adoc:663
#, no-wrap
msgid ""
"    @Test\n"
"    public void testBearerToken() {\n"
"        RestAssured.given().auth().oauth2(getAccessToken(\"alice\", Set.of(\"user\")))\n"
"            .when().get(\"/api/users/me\")\n"
"            .then()\n"
"            .statusCode(200)\n"
"            // the test endpoint returns the name extracted from the injected SecurityIdentity Principal\n"
"            .body(\"userName\", equalTo(\"alice\"));\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-openid-connect.adoc:672
#, no-wrap
msgid ""
"    private String getAccessToken(String userName, Set<String> groups) {\n"
"        return Jwt.preferredUserName(userName)\n"
"                .groups(groups)\n"
"                .issuer(\"https://server.example.com\")\n"
"                .audience(\"https://service.example.com\")\n"
"                .sign();\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-openid-connect.adoc:675
#, fuzzy
msgid "Note that the `quarkus-test-oidc-server` extension includes a signing RSA private key file in a `JSON Web Key` (`JWK`) format and points to it with a `smallrye.jwt.sign.key.location` configuration property. It allows to use a no argument `sign()` operation to sign the token."
msgstr "Tenga en cuenta que la extensión `quarkus-test-oidc-server` incluye un archivo de clave privada RSA de firma en formato `JSON Web Key` ( `JWK`) y apunta a él con una propiedad de configuración `smallrye.jwt.sign.key.location`. Permite utilizar una operación sin argumento `sign()` para firmar el token."

#. type: Plain text
#: upstream/_guides/security-openid-connect.adoc:678
#, fuzzy
msgid "Testing your `quarkus-oidc` `service` application with `OidcWiremockTestResource` provides the best coverage as even the communication channel is tested against the Wiremock HTTP stubs.  `OidcWiremockTestResource` will be enhanced going forward to support more complex Bearer token test scenarios."
msgstr "Probar su aplicación `quarkus-oidc` `service` con `OidcWiremockTestResource` proporciona la mejor cobertura ya que incluso el canal de comunicación se prueba contra los stubs HTTP de Wiremock. `OidcWiremockTestResource` se mejorará en el futuro para soportar escenarios de prueba de token de portador más complejos."

#. type: Plain text
#: upstream/_guides/security-openid-connect.adoc:681
#, fuzzy
msgid "If there is an immediate need for a test to define Wiremock stubs not currently supported by `OidcWiremockTestResource` one can do so via a `WireMockServer` instance injected into the test class, for example:"
msgstr "Si hay una necesidad inmediata de que una prueba defina stubs de Wiremock no soportados actualmente por `OidcWiremockTestResource` se puede hacer a través de una instancia de `WireMockServer` inyectada en la clase de prueba, por ejemplo:"

#. type: delimited block =
#: upstream/_guides/security-openid-connect.adoc:685
#, fuzzy
msgid "`OidcWiremockTestResource` does not work with `@QuarkusIntegrationTest` against Docker containers, because the Wiremock server is running in the JVM running the test, which cannot be accessed from the Docker container running the Quarkus application."
msgstr "`OidcWiremockTestResource` no funciona con `@QuarkusIntegrationTest` contra contenedores Docker, porque el servidor Wiremock se ejecuta en la JVM que ejecuta la prueba, a la que no se puede acceder desde el contenedor Docker que ejecuta la aplicación Quarkus."

#. type: delimited block -
#: upstream/_guides/security-openid-connect.adoc:690
#, no-wrap
msgid "package io.quarkus.it.keycloak;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-openid-connect.adoc:693
#, no-wrap
msgid ""
"import static com.github.tomakehurst.wiremock.client.WireMock.matching;\n"
"import static org.hamcrest.Matchers.equalTo;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-openid-connect.adoc:698
#, no-wrap
msgid ""
"import com.github.tomakehurst.wiremock.WireMockServer;\n"
"import com.github.tomakehurst.wiremock.client.WireMock;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-openid-connect.adoc:702
#, no-wrap
msgid ""
"import io.quarkus.test.junit.QuarkusTest;\n"
"import io.quarkus.test.oidc.server.OidcWireMock;\n"
"import io.restassured.RestAssured;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-openid-connect.adoc:705
#, no-wrap
msgid ""
"@QuarkusTest\n"
"public class CustomOidcWireMockStubTest {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-openid-connect.adoc:708
#, no-wrap
msgid ""
"    @OidcWireMock\n"
"    WireMockServer wireMockServer;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-openid-connect.adoc:714
#, no-wrap
msgid ""
"    @Test\n"
"    public void testInvalidBearerToken() {\n"
"        wireMockServer.stubFor(WireMock.post(\"/auth/realms/quarkus/protocol/openid-connect/token/introspect\")\n"
"                .withRequestBody(matching(\".*token=invalid_token.*\"))\n"
"                .willReturn(WireMock.aResponse().withStatus(400)));\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-openid-connect.adoc:722
#, no-wrap
msgid ""
"        RestAssured.given().auth().oauth2(\"invalid_token\").when()\n"
"                .get(\"/api/users/me/bearer\")\n"
"                .then()\n"
"                .statusCode(401)\n"
"                .header(\"WWW-Authenticate\", equalTo(\"Bearer\"));\n"
"    }\n"
"}\n"
msgstr ""

#. type: Title ====
#: upstream/_guides/security-openid-connect.adoc:725
#, fuzzy, no-wrap
msgid "Dev Services for Keycloak"
msgstr "Servicios de desarrollo para Keycloak"

#. type: Plain text
#: upstream/_guides/security-openid-connect.adoc:729
#, fuzzy
msgid "Using xref:security-openid-connect-dev-services.adoc[Dev Services for Keycloak] is recommended for the integration testing against Keycloak.  `Dev Services for Keycloak` will launch and initialize a test container: it will create a `quarkus` realm, a `quarkus-app` client (`secret` secret) and add `alice` (`admin` and `user` roles) and `bob` (`user` role) users, where all of these properties can be customized."
msgstr "Se recomienda el uso de  link:security-openid-connect-dev-services.html[Dev Services para Keycloak] para las pruebas de integración contra Keycloak. `Dev Services for Keycloak` lanzará e inicializará un contenedor de prueba: creará un reino `quarkus`, un cliente `quarkus-app` ( `secret` secreto) y añadirá usuarios `alice` ( `admin` y `user` roles) y `bob` ( `user` rol), donde todas estas propiedades pueden ser personalizadas."

#. type: Plain text
#: upstream/_guides/security-openid-connect.adoc:731
#, fuzzy
msgid "First you need to add the following dependency:"
msgstr "En primer lugar, hay que añadir la siguiente dependencia:"

#. type: delimited block -
#: upstream/_guides/security-openid-connect.adoc:740
#: upstream/_guides/security-openid-connect.adoc:832
#, no-wrap
msgid ""
"<dependency>\n"
"    <groupId>io.quarkus</groupId>\n"
"    <artifactId>quarkus-test-keycloak-server</artifactId>\n"
"    <scope>test</scope>\n"
"</dependency>\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-openid-connect.adoc:746
#: upstream/_guides/security-openid-connect.adoc:838
#, no-wrap
msgid "testImplementation(\"io.quarkus:quarkus-test-keycloak-server\")\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-openid-connect.adoc:749
#, fuzzy
msgid "which provides a utility class `io.quarkus.test.keycloak.client.KeycloakTestClient` you can use in tests for acquiring the access tokens."
msgstr "que proporciona una clase de utilidad `io.quarkus.test.keycloak.client.KeycloakTestClient` que puede utilizar en las pruebas para adquirir los tokens de acceso."

#. type: Plain text
#: upstream/_guides/security-openid-connect.adoc:751
#, fuzzy
msgid "Next prepare your `application.properties`. You can start with a completely empty `application.properties` as `Dev Services for Keycloak` will register `quarkus.oidc.auth-server-url` pointing to the running test container as well as `quarkus.oidc.client-id=quarkus-app` and `quarkus.oidc.credentials.secret=secret`."
msgstr "A continuación, prepare su `application.properties`. Puede comenzar con un `application.properties` completamente vacío, ya que `Dev Services for Keycloak` registrará `quarkus.oidc.auth-server-url` apuntando al contenedor de prueba en ejecución, así como `quarkus.oidc.client-id=quarkus-app` y `quarkus.oidc.credentials.secret=secret`."

#. type: Plain text
#: upstream/_guides/security-openid-connect.adoc:753
#, fuzzy
msgid "But if you already have all the required `quarkus-oidc` properties configured then you only need to associate `quarkus.oidc.auth-server-url` with the `prod` profile for `Dev Services for Keycloak`to start a container, for example:"
msgstr "Pero si ya tiene configuradas todas las propiedades requeridas de `quarkus-oidc` entonces sólo necesita asociar `quarkus.oidc.auth-server-url` con el perfil `prod` para `Servicios de desarrollo para Keycloak` para iniciar un contenedor, por ejemplo:"

#. type: delimited block -
#: upstream/_guides/security-openid-connect.adoc:757
#, no-wrap
msgid "%prod.quarkus.oidc.auth-server-url=http://localhost:8180/realms/quarkus\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-openid-connect.adoc:760
#, fuzzy
msgid "If a custom realm file has to be imported into Keycloak before running the tests then you can configure `Dev Services for Keycloak` as follows:"
msgstr "Si hay que importar un archivo de dominio personalizado en Keycloak antes de ejecutar las pruebas, se puede configurar `Dev Services for Keycloak` de la siguiente manera:"

#. type: delimited block -
#: upstream/_guides/security-openid-connect.adoc:765
#, no-wrap
msgid ""
"%prod.quarkus.oidc.auth-server-url=http://localhost:8180/realms/quarkus\n"
"quarkus.keycloak.devservices.realm-path=quarkus-realm.json\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-openid-connect.adoc:768
#, fuzzy
msgid "Finally write your test which will be executed in JVM mode:"
msgstr "Finalmente escriba su prueba que se ejecutará en modo JVM:"

#. type: delimited block -
#: upstream/_guides/security-openid-connect.adoc:777
#, no-wrap
msgid ""
"import io.quarkus.test.junit.QuarkusTest;\n"
"import io.quarkus.test.keycloak.client.KeycloakTestClient;\n"
"import io.restassured.RestAssured;\n"
"import org.junit.jupiter.api.Test;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-openid-connect.adoc:780
#, no-wrap
msgid ""
"@QuarkusTest\n"
"public class BearerTokenAuthenticationTest {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-openid-connect.adoc:782
#, no-wrap
msgid "    KeycloakTestClient keycloakClient = new KeycloakTestClient();\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-openid-connect.adoc:794
#, no-wrap
msgid ""
"    @Test\n"
"    public void testAdminAccess() {\n"
"        RestAssured.given().auth().oauth2(getAccessToken(\"alice\"))\n"
"                .when().get(\"/api/admin\")\n"
"                .then()\n"
"                .statusCode(200);\n"
"        RestAssured.given().auth().oauth2(getAccessToken(\"bob\"))\n"
"                .when().get(\"/api/admin\")\n"
"                .then()\n"
"                .statusCode(403);\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-openid-connect.adoc:799
#, no-wrap
msgid ""
"    protected String getAccessToken(String userName) {\n"
"        return keycloakClient.getAccessToken(userName);\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-openid-connect.adoc:802
#, fuzzy
msgid "and in native mode:"
msgstr "y en modo nativo:"

#. type: delimited block -
#: upstream/_guides/security-openid-connect.adoc:808
#, no-wrap
msgid "import io.quarkus.test.junit.QuarkusIntegrationTest;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-openid-connect.adoc:812
#, no-wrap
msgid ""
"@QuarkusIntegrationTest\n"
"public class NativeBearerTokenAuthenticationIT extends BearerTokenAuthenticationTest {\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-openid-connect.adoc:815
#, fuzzy
msgid "Please see xref:security-openid-connect-dev-services.adoc[Dev Services for Keycloak] for more information about the way it is initialized and configured."
msgstr "Por favor, vea  link:security-openid-connect-dev-services.html[Dev Services for Keycloak] para más información sobre la forma en que se inicializa y configura."

#. type: Title ====
#: upstream/_guides/security-openid-connect.adoc:817
#, fuzzy, no-wrap
msgid "KeycloakTestResourceLifecycleManager"
msgstr "KeycloakTestResourceLifecycleManager"

#. type: Plain text
#: upstream/_guides/security-openid-connect.adoc:821
#, fuzzy
msgid "If you need to do some integration testing against Keycloak then you are encouraged to do it with <<integration-testing-keycloak-devservices,Dev Services For Keycloak>>.  Use `KeycloakTestResourceLifecycleManager` for your tests only if there is a good reason not to use `Dev Services for Keycloak`."
msgstr "Si necesita hacer algunas pruebas de integración contra Keycloak, se le anima a hacerlo con  link:#integration-testing-keycloak-devservices[Dev Services For Keycloak]. Utilice `KeycloakTestResourceLifecycleManager` para sus pruebas sólo si hay una buena razón para no utilizar `Dev Services for Keycloak`."

#. type: Plain text
#: upstream/_guides/security-openid-connect.adoc:823
#, fuzzy
msgid "Start with adding the following dependency:"
msgstr "Empiece por añadir la siguiente dependencia:"

#. type: Plain text
#: upstream/_guides/security-openid-connect.adoc:841
#, fuzzy
msgid "which provides `io.quarkus.test.keycloak.server.KeycloakTestResourceLifecycleManager` - an implementation of `io.quarkus.test.common.QuarkusTestResourceLifecycleManager` which starts a Keycloak container."
msgstr "que proporciona `io.quarkus.test.keycloak.server.KeycloakTestResourceLifecycleManager` - una implementación de `io.quarkus.test.common.QuarkusTestResourceLifecycleManager` que inicia un contenedor Keycloak."

#. type: Plain text
#: upstream/_guides/security-openid-connect.adoc:843
#, fuzzy
msgid "And configure the Maven Surefire plugin as follows:"
msgstr "Y configure el plugin Maven Surefire como sigue:"

#. type: delimited block -
#: upstream/_guides/security-openid-connect.adoc:859
#, no-wrap
msgid ""
"<plugin>\n"
"    <artifactId>maven-surefire-plugin</artifactId>\n"
"    <configuration>\n"
"        <systemPropertyVariables>\n"
"            <!-- or, alternatively, configure 'keycloak.version' -->\n"
"            <keycloak.docker.image>${keycloak.docker.image}</keycloak.docker.image>\n"
"            <!--\n"
"              Disable HTTPS if required:\n"
"              <keycloak.use.https>false</keycloak.use.https>\n"
"            -->\n"
"        </systemPropertyVariables>\n"
"    </configuration>\n"
"</plugin>\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-openid-connect.adoc:862
#, fuzzy
msgid "(and similarly `maven.failsafe.plugin` when testing in native image)."
msgstr "(y de forma similar `maven.failsafe.plugin` cuando se prueba en imagen nativa)."

#. type: delimited block -
#: upstream/_guides/security-openid-connect.adoc:872
#, no-wrap
msgid ""
"# keycloak.url is set by KeycloakTestResourceLifecycleManager\n"
"quarkus.oidc.auth-server-url=${keycloak.url}/realms/quarkus/\n"
"quarkus.oidc.client-id=quarkus-service-app\n"
"quarkus.oidc.credentials=secret\n"
"quarkus.oidc.application-type=service\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-openid-connect.adoc:880
#, no-wrap
msgid ""
"import static io.quarkus.test.keycloak.server.KeycloakTestResourceLifecycleManager.getAccessToken;\n"
"import static org.hamcrest.Matchers.equalTo;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-openid-connect.adoc:883
#, no-wrap
msgid ""
"import org.hamcrest.Matchers;\n"
"import org.junit.jupiter.api.Test;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-openid-connect.adoc:888
#, no-wrap
msgid ""
"import io.quarkus.test.common.QuarkusTestResource;\n"
"import io.quarkus.test.junit.QuarkusTest;\n"
"import io.quarkus.test.keycloak.server.KeycloakTestResourceLifecycleManager;\n"
"import io.restassured.RestAssured;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-openid-connect.adoc:892
#, no-wrap
msgid ""
"@QuarkusTest\n"
"@QuarkusTestResource(KeycloakTestResourceLifecycleManager.class)\n"
"public class BearerTokenAuthorizationTest {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-openid-connect.adoc:902
#, no-wrap
msgid ""
"    @Test\n"
"    public void testBearerToken() {\n"
"        RestAssured.given().auth().oauth2(getAccessToken(\"alice\"))))\n"
"            .when().get(\"/api/users/preferredUserName\")\n"
"            .then()\n"
"            .statusCode(200)\n"
"            // the test endpoint returns the name extracted from the injected SecurityIdentity Principal\n"
"            .body(\"userName\", equalTo(\"alice\"));\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-openid-connect.adoc:904
#: upstream/_guides/security-openid-connect.adoc:993
#: upstream/_guides/security-openid-connect.adoc:1065
#, no-wrap
msgid "}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-openid-connect.adoc:907
#, fuzzy
msgid "`KeycloakTestResourceLifecycleManager` registers `alice` and `admin` users. The user `alice` has the `user` role only by default - it can be customized with a `keycloak.token.user-roles` system property. The user `admin` has the `user` and `admin` roles by default - it can be customized with a `keycloak.token.admin-roles` system property."
msgstr "`KeycloakTestResourceLifecycleManager` registra los usuarios `alice` y `admin`. El usuario `alice` tiene el rol `user` sólo por defecto - puede ser personalizado con una propiedad del sistema `keycloak.token.user-roles`. El usuario `admin` tiene los roles `user` y `admin` por defecto - puede ser personalizado con una propiedad del sistema `keycloak.token.admin-roles`."

#. type: Plain text
#: upstream/_guides/security-openid-connect.adoc:910
#, fuzzy
msgid "By default, `KeycloakTestResourceLifecycleManager` uses HTTPS to initialize a Keycloak instance which can be disabled with `keycloak.use.https=false`.  Default realm name is `quarkus` and client id - `quarkus-service-app` - set `keycloak.realm` and `keycloak.service.client` system properties to customize the values if needed."
msgstr "Por defecto, `KeycloakTestResourceLifecycleManager` utiliza HTTPS para inicializar una instancia de Keycloak, lo que puede desactivarse con `keycloak.use.https=false`. El nombre del reino por defecto es `quarkus` y el id de cliente - `quarkus-service-app` - establezca las propiedades del sistema `keycloak.realm` y `keycloak.service.client` para personalizar los valores si es necesario."

#. type: Title ====
#: upstream/_guides/security-openid-connect.adoc:912
#, fuzzy, no-wrap
msgid "Local Public Key"
msgstr "Clave pública local"

#. type: Plain text
#: upstream/_guides/security-openid-connect.adoc:915
#, fuzzy
msgid "You can also use a local inlined public key for testing your `quarkus-oidc` `service` applications:"
msgstr "También puede utilizar una clave pública local para probar sus aplicaciones de `quarkus-oidc` `service` :"

#. type: delimited block -
#: upstream/_guides/security-openid-connect.adoc:920
#, no-wrap
msgid ""
"quarkus.oidc.client-id=test\n"
"quarkus.oidc.public-key=MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAlivFI8qB4D0y2jy0CfEqFyy46R0o7S8TKpsx5xbHKoU1VWg6QkQm+ntyIv1p4kE1sPEQO73+HY8+Bzs75XwRTYL1BmR1w8J5hmjVWjc6R2BTBGAYRPFRhor3kpM6ni2SPmNNhurEAHw7TaqszP5eUF/F9+KEBWkwVta+PZ37bwqSE4sCb1soZFrVz/UT/LF4tYpuVYt3YbqToZ3pZOZ9AX2o1GCG3xwOjkc4x0W7ezbQZdC9iftPxVHR8irOijJRRjcPDtA6vPKpzLl6CyYnsIYPd99ltwxTHjr3npfv/3Lw50bAkbT4HeLFxTx4flEoZLKO/g0bAoV2uqBhkA9xnQIDAQAB\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-openid-connect.adoc:922
#, no-wrap
msgid "smallrye.jwt.sign.key.location=/privateKey.pem\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-openid-connect.adoc:925
#, fuzzy
msgid "copy `privateKey.pem` from the `integration-tests/oidc-tenancy` in the `main` Quarkus repository and use a test code similar to the one in the `Wiremock` section above to generate JWT tokens. You can use your own test keys if preferred."
msgstr "copia `privateKey.pem` del `integration-tests/oidc-tenancy` en el repositorio de Quarkus `main` y utiliza un código de prueba similar al de la sección `Wiremock` anterior para generar tokens JWT. Puedes usar tus propias claves de prueba si lo prefieres."

#. type: Plain text
#: upstream/_guides/security-openid-connect.adoc:927
#, fuzzy
msgid "This approach provides a more limited coverage compared to the Wiremock approach - for example, the remote communication code is not covered."
msgstr "Este enfoque proporciona una cobertura más limitada en comparación con el enfoque Wiremock - por ejemplo, el código de comunicación remota no está cubierto."

#. type: Title ====
#: upstream/_guides/security-openid-connect.adoc:929
#, fuzzy, no-wrap
msgid "TestSecurity annotation"
msgstr "Anotación TestSecurity"

#. type: Plain text
#: upstream/_guides/security-openid-connect.adoc:932
#, fuzzy
msgid "You can use `@TestSecurity` and `@OidcSecurity` annotations for testing the `service` application endpoint code which depends on the injected `JsonWebToken` as well as `UserInfo` and `OidcConfigurationMetadata`."
msgstr "Puede utilizar las anotaciones `@TestSecurity` y `@OidcSecurity` para probar el código del punto final de la aplicación `service` que depende del inyectado `JsonWebToken` así como `UserInfo` y `OidcConfigurationMetadata`."

#. type: Plain text
#: upstream/_guides/security-openid-connect.adoc:934
#, fuzzy
msgid "Add the following dependency:"
msgstr "Añade la siguiente dependencia:"

#. type: delimited block -
#: upstream/_guides/security-openid-connect.adoc:943
#, no-wrap
msgid ""
"<dependency>\n"
"    <groupId>io.quarkus</groupId>\n"
"    <artifactId>quarkus-test-security-oidc</artifactId>\n"
"    <scope>test</scope>\n"
"</dependency>\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-openid-connect.adoc:949
#, no-wrap
msgid "testImplementation(\"io.quarkus:quarkus-test-security-oidc\")\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-openid-connect.adoc:952
#, fuzzy
msgid "and write a test code like this one:"
msgstr "y escribir un código de prueba como éste:"

#. type: delimited block -
#: upstream/_guides/security-openid-connect.adoc:966
#, no-wrap
msgid ""
"import static org.hamcrest.Matchers.is;\n"
"import org.junit.jupiter.api.Test;\n"
"import io.quarkus.test.common.http.TestHTTPEndpoint;\n"
"import io.quarkus.test.junit.QuarkusTest;\n"
"import io.quarkus.test.security.TestSecurity;\n"
"import io.quarkus.test.security.oidc.Claim;\n"
"import io.quarkus.test.security.oidc.ConfigMetadata;\n"
"import io.quarkus.test.security.oidc.OidcSecurity;\n"
"import io.quarkus.test.security.oidc.OidcConfigurationMetadata;\n"
"import io.quarkus.test.security.oidc.UserInfo;\n"
"import io.restassured.RestAssured;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-openid-connect.adoc:970
#: upstream/_guides/security-openid-connect.adoc:1051
#, no-wrap
msgid ""
"@QuarkusTest\n"
"@TestHTTPEndpoint(ProtectedResource.class)\n"
"public class TestSecurityAuthTest {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-openid-connect.adoc:977
#, no-wrap
msgid ""
"    @Test\n"
"    @TestSecurity(user = \"userOidc\", roles = \"viewer\")\n"
"    public void testOidc() {\n"
"        RestAssured.when().get(\"test-security-oidc\").then()\n"
"                .body(is(\"userOidc:viewer\"));\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-openid-connect.adoc:991
#, no-wrap
msgid ""
"    @Test\n"
"    @TestSecurity(user = \"userOidc\", roles = \"viewer\")\n"
"    @OidcSecurity(claims = {\n"
"            @Claim(key = \"email\", value = \"user@gmail.com\")\n"
"    }, userinfo = {\n"
"            @UserInfo(key = \"sub\", value = \"subject\")\n"
"    }, config = {\n"
"            @ConfigMetadata(key = \"issuer\", value = \"issuer\")\n"
"    })\n"
"    public void testOidcWithClaimsUserInfoAndMetadata() {\n"
"        RestAssured.when().get(\"test-security-oidc-claims-userinfo-metadata\").then()\n"
"                .body(is(\"userOidc:viewer:user@gmail.com:subject:issuer\"));\n"
"    }\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-openid-connect.adoc:996
#: upstream/_guides/security-openid-connect.adoc:1068
#, fuzzy
msgid "where `ProtectedResource` class may look like this:"
msgstr "donde la clase `ProtectedResource` puede tener este aspecto:"

#. type: delimited block -
#: upstream/_guides/security-openid-connect.adoc:1002
#, no-wrap
msgid ""
"import io.quarkus.oidc.OidcConfigurationMetadata;\n"
"import io.quarkus.oidc.UserInfo;\n"
"import org.eclipse.microprofile.jwt.JsonWebToken;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-openid-connect.adoc:1006
#: upstream/_guides/security-openid-connect.adoc:1077
#, no-wrap
msgid ""
"@Path(\"/service\")\n"
"@Authenticated\n"
"public class ProtectedResource {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-openid-connect.adoc:1013
#, no-wrap
msgid ""
"    @Inject\n"
"    JsonWebToken accessToken;\n"
"    @Inject\n"
"    UserInfo userInfo;\n"
"    @Inject\n"
"    OidcConfigurationMetadata configMetadata;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-openid-connect.adoc:1019
#, no-wrap
msgid ""
"    @GET\n"
"    @Path(\"test-security-oidc\")\n"
"    public String testSecurityOidc() {\n"
"        return accessToken.getName() + \":\" + accessToken.getGroups().iterator().next();\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-openid-connect.adoc:1029
#, no-wrap
msgid ""
"    @GET\n"
"    @Path(\"test-security-oidc-claims-userinfo-metadata\")\n"
"    public String testSecurityOidcWithClaimsUserInfoMetadata() {\n"
"        return accessToken.getName() + \":\" + accessToken.getGroups().iterator().next()\n"
"                + \":\" + accessToken.getClaim(\"email\")\n"
"                + \":\" + userInfo.getString(\"sub\")\n"
"                + \":\" + configMetadata.get(\"issuer\");\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-openid-connect.adoc:1034
#, fuzzy
msgid "Note that `@TestSecurity` annotation must always be used and its `user` property is returned as `JsonWebToken.getName()` and `roles` property - as `JsonWebToken.getGroups()`.  `@OidcSecurity` annotation is optional and can be used to set the additional token claims, as well as `UserInfo` and `OidcConfigurationMetadata` properties.  Additionally, if `quarkus.oidc.token.issuer` property is configured then it will be used as an `OidcConfigurationMetadata` `issuer` property value."
msgstr "Tenga en cuenta que la anotación `@TestSecurity` debe utilizarse siempre y su propiedad `user` se devuelve como `JsonWebToken.getName()` y la propiedad `roles` - como `JsonWebToken.getGroups()`. La anotación `@OidcSecurity` es opcional y puede utilizarse para establecer las reclamaciones de token adicionales, así como las propiedades `UserInfo` y `OidcConfigurationMetadata`. Además, si se configura la propiedad `quarkus.oidc.token.issuer`, se utilizará como valor de la propiedad `OidcConfigurationMetadata` `issuer` ."

#. type: Plain text
#: upstream/_guides/security-openid-connect.adoc:1036
#, fuzzy
msgid "If you work with the opaque tokens then you can test them as follows:"
msgstr "Si trabajas con las fichas opacas, puedes probarlas de la siguiente manera:"

#. type: delimited block -
#: upstream/_guides/security-openid-connect.adoc:1047
#, no-wrap
msgid ""
"import static org.hamcrest.Matchers.is;\n"
"import org.junit.jupiter.api.Test;\n"
"import io.quarkus.test.common.http.TestHTTPEndpoint;\n"
"import io.quarkus.test.junit.QuarkusTest;\n"
"import io.quarkus.test.security.TestSecurity;\n"
"import io.quarkus.test.security.oidc.OidcSecurity;\n"
"import io.quarkus.test.security.oidc.TokenIntrospection;\n"
"import io.restassured.RestAssured;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-openid-connect.adoc:1063
#, no-wrap
msgid ""
"    @Test\n"
"    @TestSecurity(user = \"userOidc\", roles = \"viewer\")\n"
"    @OidcSecurity(introspectionRequired = true,\n"
"        introspection = {\n"
"            @TokenIntrospection(key = \"email\", value = \"user@gmail.com\")\n"
"        }\n"
"    )\n"
"    public void testOidcWithClaimsUserInfoAndMetadata() {\n"
"        RestAssured.when().get(\"test-security-oidc-claims-userinfo-metadata\").then()\n"
"                .body(is(\"userOidc:viewer:userOidc:viewer\"));\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-openid-connect.adoc:1073
#, no-wrap
msgid ""
"import io.quarkus.oidc.TokenIntrospection;\n"
"import io.quarkus.security.identity.SecurityIdentity;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-openid-connect.adoc:1082
#, no-wrap
msgid ""
"    @Inject\n"
"    SecurityIdentity securityIdentity;\n"
"    @Inject\n"
"    TokenIntrospection introspection;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-openid-connect.adoc:1092
#, no-wrap
msgid ""
"    @GET\n"
"    @Path(\"test-security-oidc-opaque-token\")\n"
"    public String testSecurityOidcOpaqueToken() {\n"
"        return securityIdentity.getPrincipal().getName() + \":\" + securityIdentity.getRoles().iterator().next()\n"
"            + \":\" + introspection.getString(\"username\")\n"
"            + \":\" + introspection.getString(\"scope\")\n"
"            + \":\" + introspection.getString(\"email\");\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-openid-connect.adoc:1095
#, fuzzy
msgid "Note that `@TestSecurity` `user` and `roles` attributes are available as `TokenIntrospection` `username` and `scope` properties and you can use `io.quarkus.test.security.oidc.TokenIntrospection` to add the additional introspection response properties such as an `email`, etc."
msgstr "Tenga en cuenta que los atributos `@TestSecurity` `user` y `roles` están disponibles como propiedades `TokenIntrospection` `username` y `scope` y puede utilizar `io.quarkus.test.security.oidc.TokenIntrospection` para añadir las propiedades de respuesta de introspección adicionales como una `email`, etc."

#. type: Title ===
#: upstream/_guides/security-openid-connect.adoc:1096
#, fuzzy, no-wrap
msgid "How to check the errors in the logs"
msgstr "Cómo comprobar los errores en los registros"

#. type: Plain text
#: upstream/_guides/security-openid-connect.adoc:1099
#, fuzzy
msgid "Please enable `io.quarkus.oidc.runtime.OidcProvider` `TRACE` level logging to see more details about the token verification errors:"
msgstr "Por favor, active el registro de nivel `io.quarkus.oidc.runtime.OidcProvider` `TRACE` para ver más detalles sobre los errores de verificación de tokens:"

#. type: delimited block -
#: upstream/_guides/security-openid-connect.adoc:1104
#, no-wrap
msgid ""
"quarkus.log.category.\"io.quarkus.oidc.runtime.OidcProvider\".level=TRACE\n"
"quarkus.log.category.\"io.quarkus.oidc.runtime.OidcProvider\".min-level=TRACE\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-openid-connect.adoc:1107
#, fuzzy
msgid "Please enable `io.quarkus.oidc.runtime.OidcRecorder` `TRACE` level logging to see more details about the OidcProvider client initialization errors:"
msgstr "Por favor, active el registro de nivel `io.quarkus.oidc.runtime.OidcRecorder` `TRACE` para ver más detalles sobre los errores de inicialización del cliente OidcProvider:"

#. type: delimited block -
#: upstream/_guides/security-openid-connect.adoc:1112
#, no-wrap
msgid ""
"quarkus.log.category.\"io.quarkus.oidc.runtime.OidcRecorder\".level=TRACE\n"
"quarkus.log.category.\"io.quarkus.oidc.runtime.OidcRecorder\".min-level=TRACE\n"
msgstr ""

#. type: Title ===
#: upstream/_guides/security-openid-connect.adoc:1114
#, fuzzy, no-wrap
msgid "External and Internal Access to OpenID Connect Provider"
msgstr "Acceso externo e interno al proveedor de OpenID Connect"

#. type: Plain text
#: upstream/_guides/security-openid-connect.adoc:1117
#, fuzzy
msgid "Note that the OpenID Connect Provider externally accessible token and other endpoints may have different HTTP(S) URLs compared to the URLs auto-discovered or configured relative to `quarkus.oidc.auth-server-url` internal URL. For example, if your SPA acquires a token from an external token endpoint address and sends it to Quarkus as a Bearer token then an issuer verification failure may be reported by the endpoint."
msgstr "Tenga en cuenta que el token accesible externamente del proveedor de OpenID Connect y otros puntos finales pueden tener diferentes URLs HTTP(S) en comparación con las URLs autodescubiertas o configuradas en relación con la URL interna de `quarkus.oidc.auth-server-url`. Por ejemplo, si su SPA adquiere un token de una dirección de punto final de token externo y lo envía a Quarkus como un token de portador, el punto final puede informar de un fallo de verificación del emisor."

#. type: Plain text
#: upstream/_guides/security-openid-connect.adoc:1120
#, fuzzy
msgid "In such cases, if you work with Keycloak then please start it with a `KEYCLOAK_FRONTEND_URL` system property set to the externally accessible base URL.  If you work with other Openid Connect providers then please check your provider's documentation."
msgstr "En estos casos, si trabajas con Keycloak, por favor, inícialo con una propiedad del sistema `KEYCLOAK_FRONTEND_URL` establecida en la URL base accesible externamente. Si trabaja con otros proveedores de Openid Connect, consulte la documentación de su proveedor."

#. type: Title ===
#: upstream/_guides/security-openid-connect.adoc:1121
#, fuzzy, no-wrap
msgid "How to use 'client-id' property"
msgstr "Cómo utilizar la propiedad 'client-id'"

#. type: Plain text
#: upstream/_guides/security-openid-connect.adoc:1124
#, fuzzy
msgid "`quarkus.oidc.client-id` property identifies an OpenID Connect Client which requested the current bearer token. It can be an SPA application running in a browser or a Quarkus `web-app` confidential client application propagating the access token to the Quarkus `service` application."
msgstr "`quarkus.oidc.client-id` identifica a un cliente de OpenID Connect que solicitó el token de acceso actual. Puede ser una aplicación SPA que se ejecuta en un navegador o una aplicación cliente confidencial de Quarkus `web-app` que propaga el token de acceso a la aplicación de Quarkus `service`."

#. type: Plain text
#: upstream/_guides/security-openid-connect.adoc:1127
#, fuzzy
msgid "This property is required if the `service` application is expected to introspect the tokens remotely - which is always the case for the opaque tokens.  This property is optional if the local Json Web Key token verification only is used."
msgstr "Esta propiedad es necesaria si se espera que la aplicación `service` introspeccione los tokens de forma remota, lo cual es siempre el caso de los tokens opacos. Esta propiedad es opcional si sólo se utiliza la verificación local de tokens Json Web Key."

#. type: Plain text
#: upstream/_guides/security-openid-connect.adoc:1129
#, fuzzy
msgid "Nonetheless, setting this property is encouraged even if the endpoint does not require an access to the remote introspection endpoint. The reasons behind it that `client-id`, if set, can be used to verify the token audience and will also be included in the logs when the token verification fails for the better traceability of the tokens issued to specific clients to be analyzed over a longer period of time."
msgstr "No obstante, se recomienda establecer esta propiedad incluso si el punto final no requiere un acceso al punto final de introspección remoto. Las razones detrás de esto es que `client-id`, si se establece, puede ser utilizado para verificar la audiencia del token y también se incluirá en los registros cuando la verificación del token falle para la mejor trazabilidad de los tokens emitidos a clientes específicos para ser analizados durante un período de tiempo más largo."

#. type: Plain text
#: upstream/_guides/security-openid-connect.adoc:1131
#, fuzzy
msgid "For example, if your OpenID Connect provider sets a token audience then the following configuration pattern is recommended:"
msgstr "Por ejemplo, si su proveedor de OpenID Connect establece una audiencia de tokens, se recomienda el siguiente patrón de configuración:"

#. type: delimited block -
#: upstream/_guides/security-openid-connect.adoc:1138
#, no-wrap
msgid ""
"# Set client-id\n"
"quarkus.oidc.client-id=quarkus-app\n"
"# Token audience claim must contain 'quarkus-app'\n"
"quarkus.oidc.token.audience=${quarkus.oidc.client-id}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-openid-connect.adoc:1141
#, fuzzy
msgid "If you set `quarkus.oidc.client-id` but your endpoint does not require a remote access to one of OpenID Connect Provider endpoints (introspection, token acquisition, etc) then do not set a client secret with the `quarkus.oidc.credentials` or similar properties as it will not be used."
msgstr "Si establece `quarkus.oidc.client-id` pero su punto final no requiere un acceso remoto a uno de los puntos finales del proveedor de OpenID Connect (introspección, adquisición de tokens, etc.), no establezca un secreto de cliente con las propiedades `quarkus.oidc.credentials` o similares, ya que no se utilizará."

#. type: Plain text
#: upstream/_guides/security-openid-connect.adoc:1143
#, fuzzy
msgid "Note Quarkus `web-app` applications always require `quarkus.oidc.client-id` property."
msgstr "Tenga en cuenta que las aplicaciones de Quarkus `web-app` siempre requieren la propiedad `quarkus.oidc.client-id`."

#. type: Title ==
#: upstream/_guides/security-openid-connect.adoc:1144
#, fuzzy, no-wrap
msgid "References"
msgstr "Referencias"

#. type: Plain text
#: upstream/_guides/security-openid-connect.adoc:1147
#, fuzzy
msgid "https://www.keycloak.org/documentation.html[Keycloak Documentation]"
msgstr "link:https://www.keycloak.org/documentation.html[Documentación de Keycloak]"

#. type: Plain text
#: upstream/_guides/security-openid-connect.adoc:1148
#, fuzzy
msgid "https://openid.net/connect/[OpenID Connect]"
msgstr "link:https://openid.net/connect/[OpenID Connect]"

#. type: Plain text
#: upstream/_guides/security-openid-connect.adoc:1149
#, fuzzy
msgid "https://tools.ietf.org/html/rfc7519[JSON Web Token]"
msgstr "link:https://tools.ietf.org/html/rfc7519[Token web JSON]"

#. type: Plain text
#: upstream/_guides/security-openid-connect.adoc:1150
#, fuzzy
msgid "xref:security-openid-connect-client.adoc[Quarkus - Using OpenID Connect and OAuth2 Client and Filters to manage access tokens]"
msgstr "link:security-openid-connect-client.html[Quarkus - Uso de OpenID Connect y OAuth2 Client y Filtros para gestionar los tokens de acceso]"

#. type: Plain text
#: upstream/_guides/security-openid-connect.adoc:1151
#, fuzzy
msgid "xref:security-openid-connect-dev-services.adoc[Dev Services for Keycloak]"
msgstr "link:security-openid-connect-dev-services.html[Servicios de desarrollo para Keycloak]"

#. type: Plain text
#: upstream/_guides/security-openid-connect.adoc:1152
#, fuzzy
msgid "xref:security-jwt-build.adoc[Sign and encrypt JWT tokens with SmallRye JWT Build]"
msgstr "link:security-jwt-build.html[Firmar y cifrar tokens JWT con SmallRye JWT Build]"

#. type: Plain text
#: upstream/_guides/security-openid-connect.adoc:1153
#, fuzzy
msgid "xref:security.adoc#oidc-jwt-oauth2-comparison[Summary of Quarkus OIDC, JWT and OAuth2 features]"
msgstr "link:security.html#oidc-jwt-oauth2-comparison[Resumen de las características de Quarkus OIDC, JWT y OAuth2]"

#. type: Plain text
#: upstream/_guides/security-openid-connect.adoc:1153
#, fuzzy
msgid "xref:security.adoc[Quarkus Security]"
msgstr "link:security.html[Seguridad Quarkus]"

#, fuzzy
#~ msgid "Do not start the Keycloak server when you run the application in a dev mode - `Dev Services for Keycloak` will launch a container. See <<keycloak-dev-mode, Running the Application in Dev mode>> section below for more information."
#~ msgstr "No inicie el servidor Keycloak cuando ejecute la aplicación en modo dev - `Dev Services for Keycloak` lanzará un contenedor. Vea la sección  link:#keycloak-dev-mode[Ejecutar la] aplicación en modo Dev más abajo para más información."
