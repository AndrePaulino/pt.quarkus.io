# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2022-09-28 11:15+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc
#. type: Title =
#: upstream/_guides/security-getting-started.adoc:6
#, no-wrap
msgid "Secure a Quarkus application with Basic authentication"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-getting-started.adoc:11
msgid "Secure your Quarkus application endpoints by combining xref:security-built-in-authentication.adoc#basic-auth[Quarkus built-in basic HTTP authentication] with the JPA identity provider to enable role-based access control (RBAC).  The JPA `IdentityProvider` creates a `SecurityIdentity` instance, which is used during user authentication to verify and authorize access requests making your Quarkus application secure."
msgstr ""

#. type: Plain text
#: upstream/_guides/security-getting-started.adoc:13
msgid "This tutorial prepares you for implementing more advanced security mechanisms in Quarkus, for example, how to use the OpenID Connect (OIDC) authentication mechanism."
msgstr ""

#. type: Title ==
#: upstream/_guides/security-getting-started.adoc:14
#, fuzzy, no-wrap
msgid "Prerequisites"
msgstr "Requisitos previos"

#. type: Title ==
#: upstream/_guides/security-getting-started.adoc:18
#, no-wrap
msgid "What you will build"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-getting-started.adoc:21
msgid "The steps in this tutorial guide you through building an application that provides the following endpoints:"
msgstr ""

#. type: Table
#: upstream/_guides/security-getting-started.adoc:24
#, no-wrap
msgid "Endpoint"
msgstr ""

#. type: Table
#: upstream/_guides/security-getting-started.adoc:25
#, no-wrap
msgid "Description"
msgstr ""

#. type: Table
#: upstream/_guides/security-getting-started.adoc:25
#, fuzzy, no-wrap
msgid "`/api/public`"
msgstr "`/api/public`"

#. type: Table
#: upstream/_guides/security-getting-started.adoc:26
#, no-wrap
msgid "The `/api/public` endpoint can be accessed anonymously."
msgstr ""

#. type: Table
#: upstream/_guides/security-getting-started.adoc:26
#, fuzzy, no-wrap
msgid "`/api/users/me`"
msgstr "`/api/users/me`"

#. type: Table
#: upstream/_guides/security-getting-started.adoc:28
#, no-wrap
msgid ""
"The `/api/admin` endpoint is protected with role-based access control (RBAC), and only users who have been granted the `admin` role can access it. \n"
"At this endpoint, the `@RolesAllowed` annotation is used to declaratively enforce the access constraint."
msgstr ""

#. type: Table
#: upstream/_guides/security-getting-started.adoc:28
#, fuzzy, no-wrap
msgid "`/api/admin`"
msgstr "`/api/admin`"

#. type: Table
#: upstream/_guides/security-getting-started.adoc:29
#, no-wrap
msgid "The `/api/users/me` endpoint is protected with RBAC and only users that have been granted the `user` role can access it. A JSON document with details about the user is returned as a response."
msgstr ""

#. type: delimited block =
#: upstream/_guides/security-getting-started.adoc:34
msgid "If you just want to examine the code, you can fast-forward to the completed example by using one of the following ways:"
msgstr ""

#. type: delimited block =
#: upstream/_guides/security-getting-started.adoc:36
msgid "Download the {quickstarts-archive-url}[archive]"
msgstr ""

#. type: delimited block =
#: upstream/_guides/security-getting-started.adoc:37
#, fuzzy
#| msgid "Clone the Git repository: `git clone {quickstarts-clone-url}`, or download an {quickstarts-archive-url}[archive]."
msgid "Clone the Git repository: `git clone {quickstarts-clone-url}`"
msgstr "Clone el repositorio Git: `git clone {quickstarts-clone-url}` o descargue un {quickstarts-archive-url}[archivo]."

#. type: delimited block =
#: upstream/_guides/security-getting-started.adoc:39
#, fuzzy
msgid "You can find the solution in the `security-jpa-quickstart` {quickstarts-tree-url}/security-jpa-quickstart[directory]."
msgstr "La solución se encuentra en el `security-jpa-quickstart` {quickstarts-tree-url}/security-jpa-quickstart[directorio]."

#. type: Title ==
#: upstream/_guides/security-getting-started.adoc:44
#, fuzzy, no-wrap
msgid "Create a Maven project"
msgstr "Creación del proyecto Maven"

#. type: Plain text
#: upstream/_guides/security-getting-started.adoc:48
msgid "For Quarkus security to be able to map your security source to JPA entities, ensure that the Maven project that is used in this tutorial includes the `security-jpa` extension.  You can either create a new Maven project with the `security-jpa` extension or you can add the extension to an existing Maven project."
msgstr ""

#. type: Plain text
#: upstream/_guides/security-getting-started.adoc:50
#, fuzzy
msgid "To create the Maven project, use the following command:"
msgstr "En primer lugar, necesitamos un nuevo proyecto. Cree un nuevo proyecto con el siguiente comando:"

#. type: delimited block =
#: upstream/_guides/security-getting-started.adoc:59
#, fuzzy
msgid "xref:hibernate-orm-panache.adoc[Hibernate ORM with Panache] is used to store your user identities but you can also use xref:hibernate-orm.adoc[Hibernate ORM].  You must also add your preferred database connector library.  The instructions in this example tutorial use a PostgreSQL database for the identity store."
msgstr "link:hibernate-orm-panache.html[Hibernate ORM con Panache] se utiliza para almacenar las identidades de los usuarios, pero también se puede utilizar  link:hibernate-orm.html[Hibernate ORM]."

#. type: Plain text
#: upstream/_guides/security-getting-started.adoc:61
#, fuzzy
msgid "To add the `security-jpa` extension to an existing Maven project, run the following command from your project base directory:"
msgstr "Si ya tienes configurado tu proyecto Quarkus, puedes añadir la extensión `security-jpa` a tu proyecto ejecutando el siguiente comando en el directorio base de tu proyecto:"

#. type: Title ===
#: upstream/_guides/security-getting-started.adoc:65
#, no-wrap
msgid "Verification"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-getting-started.adoc:68
#, fuzzy
msgid "When you run either command, the following XML is added to your build file:"
msgstr "Esto añadirá lo siguiente a su archivo de construcción:"

#. type: Block title
#: upstream/_guides/security-getting-started.adoc:70
#, no-wrap
msgid "pom.xml"
msgstr "pom.xml"

#. type: delimited block -
#: upstream/_guides/security-getting-started.adoc:76
#, no-wrap
msgid ""
"<dependency>\n"
"    <groupId>io.quarkus</groupId>\n"
"    <artifactId>quarkus-security-jpa</artifactId>\n"
"</dependency>\n"
msgstr ""

#. type: Block title
#: upstream/_guides/security-getting-started.adoc:79
#, no-wrap
msgid "build.gradle"
msgstr "build.gradle"

#. type: delimited block -
#: upstream/_guides/security-getting-started.adoc:82
#, no-wrap
msgid "implementation(\"io.quarkus:quarkus-security-jpa\")\n"
msgstr ""

#. type: Title ==
#: upstream/_guides/security-getting-started.adoc:84
#, fuzzy, no-wrap
msgid "Write the application"
msgstr "Escribir la aplicación"

#. type: Plain text
#: upstream/_guides/security-getting-started.adoc:88
#, fuzzy
msgid "Let's start by implementing the `/api/public` endpoint to allow all users access to access the application.  Add a regular JAX-RS resource to your Java source code, as outlined in the following code snippet:"
msgstr "Empecemos por implementar el endpoint `/api/public`. Como puedes ver en el código fuente de abajo, es sólo un recurso JAX-RS normal:"

#. type: delimited block -
#: upstream/_guides/security-getting-started.adoc:92
#: upstream/_guides/security-getting-started.adoc:116
#: upstream/_guides/security-getting-started.adoc:139
#: upstream/_guides/security-getting-started.adoc:166
#: upstream/_guides/security-getting-started.adoc:249
#, no-wrap
msgid "package org.acme.security.jpa;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-getting-started.adoc:98
#, no-wrap
msgid ""
"import javax.annotation.security.PermitAll;\n"
"import javax.ws.rs.GET;\n"
"import javax.ws.rs.Path;\n"
"import javax.ws.rs.Produces;\n"
"import javax.ws.rs.core.MediaType;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-getting-started.adoc:101
#, no-wrap
msgid ""
"@Path(\"/api/public\")\n"
"public class PublicResource {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-getting-started.adoc:109
#, no-wrap
msgid ""
"    @GET\n"
"    @PermitAll\n"
"    @Produces(MediaType.TEXT_PLAIN)\n"
"    public String publicResource() {\n"
"        return \"public\";\n"
"   }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-getting-started.adoc:112
#, fuzzy
msgid "The source code for the `/api/admin` endpoint is similar but instead you use a `@RolesAllowed` annotation to make sure that only users granted the `admin` role can access the endpoint.  Add a JAX-RS resource with the following `@RolesAllowed` annotation:"
msgstr "El código fuente del endpoint `/api/admin` también es muy sencillo. La principal diferencia aquí es que estamos utilizando una anotación `@RolesAllowed` para asegurarnos de que sólo los usuarios con el rol `admin` pueden acceder al endpoint:"

#. type: delimited block -
#: upstream/_guides/security-getting-started.adoc:122
#, no-wrap
msgid ""
"import javax.annotation.security.RolesAllowed;\n"
"import javax.ws.rs.GET;\n"
"import javax.ws.rs.Path;\n"
"import javax.ws.rs.Produces;\n"
"import javax.ws.rs.core.MediaType;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-getting-started.adoc:125
#, no-wrap
msgid ""
"@Path(\"/api/admin\")\n"
"public class AdminResource {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-getting-started.adoc:133
#, no-wrap
msgid ""
"    @GET\n"
"    @RolesAllowed(\"admin\")\n"
"    @Produces(MediaType.TEXT_PLAIN)\n"
"    public String adminResource() {\n"
"         return \"admin\";\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-getting-started.adoc:136
#, fuzzy
msgid "Finally, implement the `/api/users/me` endpoint. As you can see from the source code example below, we are trusting only users with the `user` role.  We are also using `SecurityContext` to get access to the currently authenticated `Principal`, and we return the user name, all of which is loaded from the database."
msgstr "Finalmente, consideremos el endpoint `/api/users/me`. Como puedes ver en el código fuente de abajo, estamos confiando sólo en los usuarios con el rol `user`. Estamos usando `SecurityContext` para obtener acceso al Principal autenticado actual, y devolvemos el nombre del usuario. Esta información se carga desde la base de datos."

#. type: delimited block -
#: upstream/_guides/security-getting-started.adoc:146
#, no-wrap
msgid ""
"import javax.annotation.security.RolesAllowed;\n"
"import javax.inject.Inject;\n"
"import javax.ws.rs.GET;\n"
"import javax.ws.rs.Path;\n"
"import javax.ws.rs.core.Context;\n"
"import javax.ws.rs.core.SecurityContext;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-getting-started.adoc:149
#, no-wrap
msgid ""
"@Path(\"/api/users\")\n"
"public class UserResource {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-getting-started.adoc:157
#, no-wrap
msgid ""
"    @GET\n"
"    @RolesAllowed(\"user\")\n"
"    @Path(\"/me\")\n"
"    public String me(@Context SecurityContext securityContext) {\n"
"        return securityContext.getUserPrincipal().getName();\n"
"    }\n"
"}\n"
msgstr ""

#. type: Title ===
#: upstream/_guides/security-getting-started.adoc:159
#, fuzzy, no-wrap
msgid "Define the user entity"
msgstr "Definir nuestra entidad de usuario"

#. type: Plain text
#: upstream/_guides/security-getting-started.adoc:162
#, fuzzy
msgid "You can now describe how you want security information to be stored in the model by adding annotations to the `user` entity, as outlined in the following code snippet:"
msgstr "Ahora podemos describir cómo se almacena nuestra información de seguridad en nuestro modelo añadiendo algunas anotaciones a nuestra entidad `User`:"

#. type: delimited block -
#: upstream/_guides/security-getting-started.adoc:169
#, no-wrap
msgid ""
"import javax.persistence.Entity;\n"
"import javax.persistence.Table;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-getting-started.adoc:176
#, no-wrap
msgid ""
"import io.quarkus.hibernate.orm.panache.PanacheEntity;\n"
"import io.quarkus.elytron.security.common.BcryptUtil;\n"
"import io.quarkus.security.jpa.Password;\n"
"import io.quarkus.security.jpa.Roles;\n"
"import io.quarkus.security.jpa.UserDefinition;\n"
"import io.quarkus.security.jpa.Username;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-getting-started.adoc:187
#, no-wrap
msgid ""
"@Entity\n"
"@Table(name = \"test_user\")\n"
"@UserDefinition <1>\n"
"public class User extends PanacheEntity {\n"
"    @Username <2>\n"
"    public String username;\n"
"    @Password <3>\n"
"    public String password;\n"
"    @Roles <4>\n"
"    public String role;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-getting-started.adoc:202
#, no-wrap
msgid ""
"    /**\n"
"     * Adds a new user to the database\n"
"     * @param username the username\n"
"     * @param password the unencrypted password (it will be encrypted with bcrypt)\n"
"     * @param role the comma-separated roles\n"
"     */\n"
"    public static void add(String username, String password, String role) { <5>\n"
"        User user = new User();\n"
"        user.username = username;\n"
"        user.password = BcryptUtil.bcryptHash(password);\n"
"        user.role = role;\n"
"        user.persist();\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-getting-started.adoc:206
#, fuzzy
msgid "The `security-jpa` extension initializes only if there is a single entity annotated with `@UserDefinition`."
msgstr "La extensión `security-jpa` sólo se inicializa si hay una única entidad anotada con `@UserDefinition`."

#. type: Plain text
#: upstream/_guides/security-getting-started.adoc:208
#, fuzzy
msgid "The `@UserDefinition` annotation must be present on a single entity and can be either a regular Hibernate ORM entity or a Hibernate ORM with Panache entity."
msgstr "Esta anotación debe estar presente en una sola entidad. Puede ser una entidad Hibernate ORM normal o una entidad Hibernate ORM con Panache como en este ejemplo."

#. type: Plain text
#: upstream/_guides/security-getting-started.adoc:209
#, fuzzy
msgid "Indicates the field used for the user name."
msgstr "Indica el campo utilizado para el nombre de usuario."

#. type: Plain text
#: upstream/_guides/security-getting-started.adoc:210
#, fuzzy
msgid "Indicates the field used for the password, which defaults to using bcrypt hashed passwords but you can also configure it for plain text or custom passwords."
msgstr "Indica el campo utilizado para la contraseña. Por defecto se utilizan contraseñas con hash bcrypt, pero también se puede configurar para contraseñas en texto claro o personalizadas."

#. type: Plain text
#: upstream/_guides/security-getting-started.adoc:211
#, fuzzy
msgid "This indicates the comma-separated list of roles added to the target principal representation attributes."
msgstr "Indica la lista separada por comas de los roles añadidos a los atributos de representación del director de destino."

#. type: Plain text
#: upstream/_guides/security-getting-started.adoc:212
#, fuzzy
msgid "This method allows us to add users while hashing the password with the proper bcrypt hash."
msgstr "Este método nos permite añadir usuarios mientras se hace el hash de la contraseña con el hash de bcrypt adecuado."

#. type: Title ===
#: upstream/_guides/security-getting-started.adoc:213
#, fuzzy, no-wrap
msgid "Configure the application"
msgstr "Configuración de la aplicación"

#. type: Plain text
#: upstream/_guides/security-getting-started.adoc:216
msgid "Enable xref:security-built-in-authentication.adoc#basic-auth[Quarkus built-in basic HTTP authentication] by setting the `quarkus.http.auth.basic` property to `true`:"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-getting-started.adoc:218
msgid "`quarkus.http.auth.basic`=true`"
msgstr ""

#. type: delimited block =
#: upstream/_guides/security-getting-started.adoc:223
msgid "When secure access is required and no other authentication mechanisms are enabled, xref:security-built-in-authentication.adoc#basic-auth[Quarkus built-in basic HTTP authentication] is the fallback authentication mechanism.  Therefore, in this tutorial, you do not need to set the property `quarkus.http.auth.basic=true`."
msgstr ""

#. type: Plain text
#: upstream/_guides/security-getting-started.adoc:226
#, fuzzy
msgid "Configure at least one data source so that the `security-jpa` extension can access your database."
msgstr "A continuación, configure el origen de datos. La extensión `security-jpa` requiere al menos una fuente de datos para acceder a su base de datos."

#. type: delimited block -
#: upstream/_guides/security-getting-started.adoc:230
#, no-wrap
msgid "quarkus.http.auth.basic=true\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-getting-started.adoc:235
#, no-wrap
msgid ""
"quarkus.datasource.db-kind=postgresql\n"
"quarkus.datasource.username=quarkus\n"
"quarkus.datasource.password=quarkus\n"
"quarkus.datasource.jdbc.url=jdbc:postgresql:security_jpa\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-getting-started.adoc:237
#: upstream/_guides/security-getting-started.adoc:299
#, no-wrap
msgid "quarkus.hibernate-orm.database.generation=drop-and-create\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-getting-started.adoc:240
msgid "To initialize the database with users and roles, implement the `Startup` class, as outlined in the following code snippet:"
msgstr ""

#. type: delimited block =
#: upstream/_guides/security-getting-started.adoc:244
msgid "In this tutorial, a PostgreSQL database is used for the identity store. Hibernate ORM automatically creates the database schema on startup (change this in production)."
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-getting-started.adoc:253
#, no-wrap
msgid ""
"import javax.enterprise.event.Observes;\n"
"import javax.inject.Singleton;\n"
"import javax.transaction.Transactional;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-getting-started.adoc:255
#, no-wrap
msgid "import io.quarkus.runtime.StartupEvent;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-getting-started.adoc:267
#, no-wrap
msgid ""
"@Singleton\n"
"public class Startup {\n"
"    @Transactional\n"
"    public void loadUsers(@Observes StartupEvent evt) {\n"
"        // reset and load all test users\n"
"        User.deleteAll();\n"
"        User.add(\"admin\", \"admin\", \"admin\");\n"
"        User.add(\"user\", \"user\", \"user\");\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-getting-started.adoc:270
#, fuzzy
msgid "The application is now protected and the user identities are provided by the specified database."
msgstr "La aplicación está ahora protegida y las identidades son proporcionadas por nuestra base de datos."

#. type: delimited block =
#: upstream/_guides/security-getting-started.adoc:275
#, fuzzy
msgid "In a production environment, do not store plain text passwords.  As a result, the `security-jpa` defaults to using bcrypt-hashed passwords."
msgstr "Le recordamos que no debe almacenar contraseñas en texto claro en entornos de producción ;-). Por lo tanto, `security-jpa` utiliza por defecto contraseñas cifradas con bcrypt."

#. type: Title ==
#: upstream/_guides/security-getting-started.adoc:277
#, fuzzy, no-wrap
msgid "Test your application"
msgstr "Probar la aplicación"

#. type: Title ===
#: upstream/_guides/security-getting-started.adoc:279
#, fuzzy, no-wrap
msgid "Use Dev Services for PostgreSQL to test your application"
msgstr "Con los servicios de desarrollo para PostgreSQL"

#. type: Plain text
#: upstream/_guides/security-getting-started.adoc:284
#, fuzzy
msgid "Add the integration tests before you run your application in production mode."
msgstr "Añadamos las pruebas de integración antes de ejecutar la aplicación en modo de producción."

#. type: Plain text
#: upstream/_guides/security-getting-started.adoc:287
#, fuzzy
msgid "Use xref:https://quarkus.io/guides/dev-services#databases[Dev Services for PostgreSQL] for the integration testing of your application in JVM and native modes."
msgstr "Recomendamos el uso de  link:https://quarkus.io/guides/dev-services.html#databases[Dev Services for PostgreSQL] para las pruebas de integración de su aplicación en los modos JVM y nativo. `Dev Services for PostgreSQL` lanzará y configurará un contenedor de prueba `PostgreSQL` si las propiedades de configuración de PostgreSQL están habilitadas sólo en el modo de producción ( `prod`):"

#. type: Plain text
#: upstream/_guides/security-getting-started.adoc:290
msgid "The following properties configuration demonstrates how you can enable PostgreSQL testing to run in production (`prod`) mode only.  In this scenario, `Dev Services for PostgreSQL` launches and configures a `PostgreSQL` test container."
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-getting-started.adoc:297
#, no-wrap
msgid ""
"%prod.quarkus.datasource.db-kind=postgresql\n"
"%prod.quarkus.datasource.username=quarkus\n"
"%prod.quarkus.datasource.password=quarkus\n"
"%prod.quarkus.datasource.jdbc.url=jdbc:postgresql:elytron_security_jpa\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-getting-started.adoc:302
#, fuzzy
msgid "If you add the `%prod.` profile prefix, data source properties are not visible to `Dev Services for PostgreSQL` and are only observed by an application running in production mode."
msgstr "Tenga en cuenta que si añade un prefijo de perfil `%prod.` las propiedades de la fuente de datos no serán visibles para `Dev Services for PostgreSQL` sino sólo para la aplicación que se ejecuta en modo de producción."

#. type: Plain text
#: upstream/_guides/security-getting-started.adoc:304
msgid "To write the integration test, use the following code sample:"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-getting-started.adoc:308
#, no-wrap
msgid "package org.acme.elytron.security.jpa;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-getting-started.adoc:312
#, no-wrap
msgid ""
"import static io.restassured.RestAssured.get;\n"
"import static io.restassured.RestAssured.given;\n"
"import static org.hamcrest.core.Is.is;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-getting-started.adoc:315
#, no-wrap
msgid ""
"import org.apache.http.HttpStatus;\n"
"import org.junit.jupiter.api.Test;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-getting-started.adoc:317
#, no-wrap
msgid "import io.quarkus.test.junit.QuarkusTest;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-getting-started.adoc:320
#, no-wrap
msgid ""
"@QuarkusTest\n"
"public class JpaSecurityRealmTest {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-getting-started.adoc:326
#, no-wrap
msgid ""
"    @Test\n"
"    void shouldAccessPublicWhenAnonymous() {\n"
"        get(\"/api/public\")\n"
"                .then()\n"
"                .statusCode(HttpStatus.SC_OK);\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-getting-started.adoc:328
#: upstream/_guides/security-getting-started.adoc:336
#: upstream/_guides/security-getting-started.adoc:347
#, no-wrap
msgid "    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-getting-started.adoc:334
#, no-wrap
msgid ""
"    @Test\n"
"    void shouldNotAccessAdminWhenAnonymous() {\n"
"        get(\"/api/admin\")\n"
"                .then()\n"
"                .statusCode(HttpStatus.SC_UNAUTHORIZED);\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-getting-started.adoc:345
#, no-wrap
msgid ""
"    @Test\n"
"    void shouldAccessAdminWhenAdminAuthenticated() {\n"
"        given()\n"
"                .auth().preemptive().basic(\"admin\", \"admin\")\n"
"                .when()\n"
"                .get(\"/api/admin\")\n"
"                .then()\n"
"                .statusCode(HttpStatus.SC_OK);\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-getting-started.adoc:357
#, no-wrap
msgid ""
"    @Test\n"
"    void shouldNotAccessUserWhenAdminAuthenticated() {\n"
"        given()\n"
"                .auth().preemptive().basic(\"admin\", \"admin\")\n"
"                .when()\n"
"                .get(\"/api/users/me\")\n"
"                .then()\n"
"                .statusCode(HttpStatus.SC_FORBIDDEN);\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-getting-started.adoc:369
#, no-wrap
msgid ""
"    @Test\n"
"    void shouldAccessUserAndGetIdentityWhenUserAuthenticated() {\n"
"        given()\n"
"                .auth().preemptive().basic(\"user\", \"user\")\n"
"                .when()\n"
"                .get(\"/api/users/me\")\n"
"                .then()\n"
"                .statusCode(HttpStatus.SC_OK)\n"
"                .body(is(\"user\"));\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-getting-started.adoc:372
#, fuzzy
msgid "As you can see in this code sample, you do not need to start the test container from the test code."
msgstr "Como puede ver, no tiene que lanzar el contenedor de prueba desde el código de prueba."

#. type: delimited block =
#: upstream/_guides/security-getting-started.adoc:378
#, fuzzy
msgid "If you start your application in dev mode, `Dev Services for PostgreSQL` launches a `PostgreSQL` `devmode` container so that you can start developing your application.  While developing your application, you can also start to add tests one by one and run them by using the xref:continuous-testing.adoc[Continous Testing] feature.  `Dev Services for PostgreSQL` supports testing while you develop by providing a separate `PostgreSQL` test container that does not conflict with the `devmode` container."
msgstr "Si inicias tu aplicación en `devmode` entonces `Dev Services for PostgreSQL` lanzará un contenedor en modo devmode `PostgreSQL` para que te centres en el desarrollo de la aplicación. Durante el desarrollo también puedes empezar a añadir pruebas una a una y ejecutarlas con la función de  link:continuous-testing.html[pruebas continuas] - `Dev Services for PostgreSQL` soportará estas pruebas con un contenedor de pruebas separado `PostgreSQL` que no entrará en conflicto con el contenedor devmode."

#. type: Title ===
#: upstream/_guides/security-getting-started.adoc:380
#, no-wrap
msgid "Use `curl` or a browser to test your application"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-getting-started.adoc:383
#, fuzzy
msgid "Use the following example to start the PostgreSQL server:"
msgstr "En primer lugar, inicie un servidor PostgreSQL:"

#. type: delimited block -
#: upstream/_guides/security-getting-started.adoc:388
#, no-wrap
msgid ""
"docker run --rm=true --name security-getting-started -e POSTGRES_USER=quarkus \\\n"
"           -e POSTGRES_PASSWORD=quarkus -e POSTGRES_DB=elytron_security_jpa \\\n"
"           -p 5432:5432 postgres:14.1\n"
msgstr ""

#. type: Title ===
#: upstream/_guides/security-getting-started.adoc:389
#, fuzzy, no-wrap
msgid "Compile and run the application"
msgstr "Compilar la aplicación:"

#. type: Plain text
#: upstream/_guides/security-getting-started.adoc:392
msgid "Compile and run your Quarkus application by using one of the following methods:"
msgstr ""

#. type: Title ====
#: upstream/_guides/security-getting-started.adoc:393
#, fuzzy, no-wrap
msgid "JVM mode"
msgstr "Modo JVM"

#. type: Plain text
#: upstream/_guides/security-getting-started.adoc:398
#, fuzzy
msgid "Compile the application: Run the application:"
msgstr "Compilar la aplicación:"

#. type: delimited block -
#: upstream/_guides/security-getting-started.adoc:402
#, no-wrap
msgid "java -jar target/quarkus-app/quarkus-run.jar\n"
msgstr ""

#. type: Title ====
#: upstream/_guides/security-getting-started.adoc:404
#, fuzzy, no-wrap
msgid "Native mode"
msgstr "Modo nativo"

#. type: Plain text
#: upstream/_guides/security-getting-started.adoc:407
#, fuzzy
msgid "Compile the application:"
msgstr "Compilar la aplicación:"

#. type: Plain text
#: upstream/_guides/security-getting-started.adoc:411
#, fuzzy
msgid "Run the application:"
msgstr "Escribir la aplicación"

#. type: delimited block -
#: upstream/_guides/security-getting-started.adoc:414
#, no-wrap
msgid "./target/security-jpa-quickstart-runner\n"
msgstr ""

#. type: Title ===
#: upstream/_guides/security-getting-started.adoc:416
#, no-wrap
msgid "Access and test the application security"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-getting-started.adoc:420
msgid "When your application is running, you can access your application by using one of the following `curl` commands.  You can also access the same endpoint URLs by using a browser."
msgstr ""

#. type: Plain text
#: upstream/_guides/security-getting-started.adoc:422
#: upstream/_guides/security-getting-started.adoc:433
#, fuzzy
msgid "Connect to a protected endpoint anonymously:"
msgstr "Ahora, intentemos atacar un recurso protegido de forma anónima."

#. type: delimited block -
#: upstream/_guides/security-getting-started.adoc:428
#, no-wrap
msgid ""
"$ curl -i -X GET http://localhost:8080/api/public\n"
"HTTP/1.1 200 OK\n"
"Content-Length: 6\n"
"Content-Type: text/plain;charset=UTF-8\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-getting-started.adoc:430
#, no-wrap
msgid "public%\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-getting-started.adoc:440
#, no-wrap
msgid ""
"$ curl -i -X GET http://localhost:8080/api/admin\n"
"HTTP/1.1 401 Unauthorized\n"
"Content-Length: 14\n"
"Content-Type: text/html;charset=UTF-8\n"
"WWW-Authenticate: Basic\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-getting-started.adoc:442
#, no-wrap
msgid "Not authorized%\n"
msgstr ""

#. type: delimited block =
#: upstream/_guides/security-getting-started.adoc:447
msgid "When you use a browser to anonymously connect to a protected resource, a basic authentication form displays prompting you to enter credentials."
msgstr ""

#. type: Plain text
#: upstream/_guides/security-getting-started.adoc:450
msgid "Connect to a protected endpoint as an authorized user:"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-getting-started.adoc:457
#, no-wrap
msgid ""
"$ curl -i -X GET -u admin:admin http://localhost:8080/api/admin\n"
"HTTP/1.1 200 OK\n"
"Content-Length: 5\n"
"Content-Type: text/plain;charset=UTF-8\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-getting-started.adoc:459
#, no-wrap
msgid "admin%\n"
msgstr ""

#. type: Title ===
#: upstream/_guides/security-getting-started.adoc:461
#, no-wrap
msgid "Results"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-getting-started.adoc:465
#, fuzzy
msgid "When you provide the credentials of an authorized user, for example, `admin:admin`, the JPA security extension authenticates and loads the roles of the user.  The `admin` user is authorized to access the protected resources."
msgstr "Al proporcionar las credenciales de `admin:admin`, la extensión autentificó al usuario y cargó sus roles. El usuario de `admin` está autorizado a acceder a los recursos protegidos."

#. type: Plain text
#: upstream/_guides/security-getting-started.adoc:467
msgid "If a resource is protected with `@RolesAllowed(\"user\")`, the user `admin` is not authorized to access the resource because it is not assigned to the \"user\" role, as outlined in the following shell example:"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-getting-started.adoc:474
#, no-wrap
msgid ""
"$ curl -i -X GET -u admin:admin http://localhost:8080/api/users/me\n"
"HTTP/1.1 403 Forbidden\n"
"Content-Length: 34\n"
"Content-Type: text/html;charset=UTF-8\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-getting-started.adoc:476
#, no-wrap
msgid "Forbidden%\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-getting-started.adoc:479
#, fuzzy
msgid "Finally, the user name `user` is authorized and the security context contains the principal details, for example, the user name."
msgstr "Por último, el uso del usuario `user` funciona y el contexto de seguridad contiene los detalles principales (nombre de usuario, por ejemplo)."

#. type: delimited block -
#: upstream/_guides/security-getting-started.adoc:486
#, no-wrap
msgid ""
"$ curl -i -X GET -u user:user http://localhost:8080/api/users/me\n"
"HTTP/1.1 200 OK\n"
"Content-Length: 4\n"
"Content-Type: text/plain;charset=UTF-8\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-getting-started.adoc:488
#, no-wrap
msgid "user%\n"
msgstr ""

#.  The following section needs to be moved as SMEs confirmed that it does not really fit in the new content here. In the next phase of refactoring, consider moving this section into a dedicated concept/reference topic.
#. type: Title ==
#: upstream/_guides/security-getting-started.adoc:494
#, no-wrap
msgid "Quarkus Security JPA information"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-getting-started.adoc:497
#, fuzzy
msgid "Now that you have successfully run and tested the security quick start project, you are ready to explore more security features of Quarkus Security and the JPA identity store."
msgstr "Ahora que ha ejecutado y probado la demo, por favor, eche un vistazo a la información más específica sobre la preparación de su almacén de identidades JPA."

#. type: Title ===
#: upstream/_guides/security-getting-started.adoc:498
#, fuzzy, no-wrap
msgid "Supported model types"
msgstr "Tipos de modelos admitidos"

#. type: Plain text
#: upstream/_guides/security-getting-started.adoc:501
#, fuzzy
msgid "The `@UserDefinition` class must be a JPA entity (with Panache or not)."
msgstr "La clase `@UserDefinition` debe ser una entidad JPA (con Panache o no)."

#. type: Plain text
#: upstream/_guides/security-getting-started.adoc:502
#, fuzzy
msgid "The `@Username` and `@Password` field types must be of type `String`."
msgstr "Los tipos de campo `@Username` y `@Password` deben ser del tipo `String`."

#. type: Plain text
#: upstream/_guides/security-getting-started.adoc:503
#, fuzzy
msgid "The `@Roles` field must either be of type `String` or `Collection<String>` or alternately a `Collection<X>` where `X` is an entity class with one `String` field annotated with the `@RolesValue` annotation."
msgstr "El campo `@Roles` debe ser del tipo `String` o `Collection&amp;lt;String&amp;gt;` o, alternativamente, un `Collection&amp;lt;X&amp;gt;` donde `X` es una clase de entidad con un campo `String` anotado con la anotación `@RolesValue`."

#. type: Plain text
#: upstream/_guides/security-getting-started.adoc:504
#, fuzzy
msgid "Each `String` role element type will be parsed as a comma-separated list of roles."
msgstr "Cada tipo de elemento de rol de `String` se analizará como una lista de roles separada por comas."

#. type: Title ===
#: upstream/_guides/security-getting-started.adoc:505
#, fuzzy, no-wrap
msgid "Storing roles in another entity"
msgstr "Almacenamiento de roles en otra entidad"

#. type: Plain text
#: upstream/_guides/security-getting-started.adoc:508
#, fuzzy
msgid "Use the following sample to store roles inside another entity:"
msgstr "También puede almacenar los roles en otra entidad:"

#. type: delimited block -
#: upstream/_guides/security-getting-started.adoc:517
#, no-wrap
msgid ""
"@UserDefinition\n"
"@Table(name = \"test_user\")\n"
"@Entity\n"
"public class User extends PanacheEntity {\n"
"    @Username\n"
"    public String name;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-getting-started.adoc:520
#, no-wrap
msgid ""
"    @Password\n"
"    public String pass;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-getting-started.adoc:525
#, no-wrap
msgid ""
"    @ManyToMany\n"
"    @Roles\n"
"    public List<Role> roles = new ArrayList<>();\n"
"}\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-getting-started.adoc:528
#, no-wrap
msgid ""
"@Entity\n"
"public class Role extends PanacheEntity {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-getting-started.adoc:531
#, no-wrap
msgid ""
"    @ManyToMany(mappedBy = \"roles\")\n"
"    public List<ExternalRolesUserEntity> users;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-getting-started.adoc:535
#, no-wrap
msgid ""
"    @RolesValue\n"
"    public String role;\n"
"}\n"
msgstr ""

#. type: Title ===
#: upstream/_guides/security-getting-started.adoc:537
#, fuzzy, no-wrap
msgid "Password storage and hashing"
msgstr "Almacenamiento de contraseñas y hashing"

#. type: Plain text
#: upstream/_guides/security-getting-started.adoc:541
#, fuzzy
msgid "By default, passwords are stored and hashed by using https://en.wikipedia.org/wiki/Bcrypt[bcrypt] under the https://en.wikipedia.org/wiki/Crypt_(C)[Modular Crypt Format] (MCF)."
msgstr "Por defecto, consideramos que las contraseñas se almacenan con hash con  link:https://en.wikipedia.org/wiki/Bcrypt[bcrypt] bajo el  link:https://en.wikipedia.org/wiki/Crypt_©[formato Modular Crypt Format] (MCF)."

#. type: Plain text
#: upstream/_guides/security-getting-started.adoc:545
#, fuzzy
msgid "When you need to create a hashed password we provide the convenient `String BcryptUtil.bcryptHash(String password)` function, which defaults to creating a random salt and hashing in 10 iterations.  You can also specify the number of iterations and the salt."
msgstr "Cuando necesites crear una contraseña con hash, te ofrecemos la práctica función `String BcryptUtil.bcryptHash(String password)`, que por defecto crea una sal aleatoria y hace un hash en 10 iteraciones (aunque también puedes especificar las iteraciones y la sal)."

#. type: Plain text
#: upstream/_guides/security-getting-started.adoc:547
#, fuzzy
msgid "When you use MCF, you don't need dedicated columns to store the hashing algorithm, the iterations count, or the salt because they are all stored in the hashed value."
msgstr "Con MCF no se necesitan columnas dedicadas para almacenar el algoritmo de hashing, el recuento de iteraciones o la sal, ya que todo se almacena en el valor de hashed."

#. type: Plain text
#: upstream/_guides/security-getting-started.adoc:549
#, fuzzy
msgid "You can also store passwords by using a different hashing algorithm, for example, `@Password(value = PasswordType.CUSTOM, provider = CustomPasswordProvider.class)`, as outlined in the following code snippet:"
msgstr "También tiene la posibilidad de almacenar la contraseña utilizando diferentes algoritmos de hashing `@Password(value = PasswordType.CUSTOM, provider = CustomPasswordProvider.class)`:"

#. type: delimited block -
#: upstream/_guides/security-getting-started.adoc:559
#, no-wrap
msgid ""
"@UserDefinition\n"
"@Table(name = \"test_user\")\n"
"@Entity\n"
"public class CustomPasswordUserEntity {\n"
"    @Id\n"
"    @GeneratedValue\n"
"    public Long id;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-getting-started.adoc:563
#, no-wrap
msgid ""
"    @Column(name = \"username\")\n"
"    @Username\n"
"    public String name;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-getting-started.adoc:567
#, no-wrap
msgid ""
"    @Column(name = \"password\")\n"
"    @Password(value = PasswordType.CUSTOM, provider = CustomPasswordProvider.class)\n"
"    public String pass;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-getting-started.adoc:571
#, no-wrap
msgid ""
"    @Roles\n"
"    public String role;\n"
"}\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-getting-started.adoc:579
#, no-wrap
msgid ""
"public class CustomPasswordProvider implements PasswordProvider {\n"
"    @Override\n"
"    public Password getPassword(String pass) {\n"
"        byte[] digest = DatatypeConverter.parseHexBinary(pass);\n"
"        return SimpleDigestPassword.createRaw(SimpleDigestPassword.ALGORITHM_SIMPLE_DIGEST_SHA_256, digest);\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-getting-started.adoc:583
#, fuzzy
msgid "In a test environment, you can also store passwords in plain text by using `@Password(PasswordType.CLEAR)`.  For applications running in production, do not store passwords in plain text."
msgstr "ADVERTENCIA: también se pueden almacenar contraseñas en texto claro con `@Password(PasswordType.CLEAR)`, pero se desaconseja encarecidamente en producción."

#. type: Title ==
#: upstream/_guides/security-getting-started.adoc:584
#, fuzzy, no-wrap
msgid "What's next"
msgstr "Qué es lo que sigue"

#. type: Plain text
#: upstream/_guides/security-getting-started.adoc:588
#, fuzzy
msgid "Congratulations! You have learned how to create and test a secure Quarkus application by combining the xref:security-built-in-authentication.adoc#basic-auth[Quarkus built-in basic HTTP authentication] with the JPA identity provider."
msgstr "Ha aprendido a crear y probar una aplicación segura de Quarkus utilizando  link:security-built-in-authentication.html#basic-auth[el mecanismo básico de autenticación HTTPAuthenticationMechanism], `JPA IdentityProvider`."

#. type: Plain text
#: upstream/_guides/security-getting-started.adoc:591
msgid "After you have completed this tutorial, explore some of the more advanced security mechanisms in Quarkus.  Use the following information to learn how you can securely use `OpenID Connect` to provide secure single sign-on access to your Quarkus endpoints:"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-getting-started.adoc:593
#: upstream/_guides/security-getting-started.adoc:600
#, fuzzy
msgid "xref:security-openid-connect.adoc[Using OpenID Connect (OIDC) to Protect Service Applications using Bearer Token Authorization]"
msgstr "link:security-openid-connect.html[Quarkus - Uso de OpenID Connect para proteger las aplicaciones de servicios mediante la autorización de tokens de portador]"

#. type: Plain text
#: upstream/_guides/security-getting-started.adoc:595
#: upstream/_guides/security-getting-started.adoc:602
#, fuzzy
msgid "xref:security-openid-connect-web-authentication.adoc[Using OpenID Connect (OIDC) to Protect Web Applications using Authorization Code Flow ]"
msgstr "link:security-openid-connect-web-authentication.html[Quarkus - Uso de OpenID Connect para proteger las aplicaciones web mediante el flujo de código de autorización]"

#. type: Title ==
#: upstream/_guides/security-getting-started.adoc:596
#, fuzzy, no-wrap
msgid "References"
msgstr "Referencias"

#. type: Plain text
#: upstream/_guides/security-getting-started.adoc:599
#, fuzzy
msgid "xref:security.adoc[Security Architecture and Guides]"
msgstr "link:security.html[Seguridad Quarkus]"

#. type: Plain text
#: upstream/_guides/security-getting-started.adoc:603
#, fuzzy
msgid "xref:hibernate-orm-panache.adoc[Simplified Hibernate ORM with Panache]"
msgstr "link:hibernate-orm-panache.html[Hibernate ORM con Panache]"

#. type: Plain text
#: upstream/_guides/security-getting-started.adoc:603
#, fuzzy
msgid "xref:hibernate-orm.adoc[Using Hibernate ORM and JPA]"
msgstr "link:hibernate-orm.html[Hibernate ORM]"

#, fuzzy
#~ msgid "Getting Started with Quarkus Security"
#~ msgstr "Introducción a Quarkus Security"

#, fuzzy
#~ msgid "This guide demonstartes how you can quickly create a secure Quarkus application by using xref:security-built-in-authentication.adoc#basic-auth[Basic AuthenticationMechanism] and `JPA IdentityProvider` to create `SecurityIdentity` which is authorized by the `Role Based Access Control` (RBAC) layer before the access to application is permitted."
#~ msgstr "Esta guía demuestra cómo se puede crear rápidamente una aplicación segura de Quarkus mediante el uso de  link:security-built-in-authentication.html#basic-auth[Basic AuthenticationMechanism] y `JPA IdentityProvider` para crear `SecurityIdentity` que es autorizada por la capa `Role Based Access Control` (RBAC) antes de que se permita el acceso a la aplicación."

#, fuzzy
#~ msgid "Using `Basic AuthenticationMechanism` with `JPA IdentityProvider` is better than configuring the users and roles in `application.properties` therefore this guide recommends to combine `Basic AuthenticationMechanism` and `JPA IdentityProvider`. We will update this recommendation to use a reactive equivalent of the `JPA IdentityProvider` as soon as it is introduced."
#~ msgstr "Utilizar `Basic AuthenticationMechanism` con `JPA IdentityProvider` es mejor que configurar los usuarios y roles en `application.properties` por lo que esta guía recomienda combinar `Basic AuthenticationMechanism` y `JPA IdentityProvider`. Actualizaremos esta recomendación para utilizar un equivalente reactivo de `JPA IdentityProvider` tan pronto como se introduzca."

#, fuzzy
#~ msgid "This guide will conclude with recommending how to learn more about Quarkus Security, and in particular about its `OpenId Connect Authentication Mechanism`."
#~ msgstr "Esta guía concluirá recomendando cómo aprender más sobre Quarkus Security, y en particular sobre su `OpenId Connect Authentication Mechanism`."

#, fuzzy
#~ msgid "Architecture"
#~ msgstr "Arquitectura"

#, fuzzy
#~ msgid "In this example, we build a very simple microservice which offers three endpoints:"
#~ msgstr "En este ejemplo, construimos un microservicio muy simple que ofrece tres puntos finales:"

#, fuzzy
#~ msgid "The `/api/public` endpoint can be accessed anonymously.  The `/api/admin` endpoint is protected with RBAC (Role-Based Access Control) where only users granted with the `admin` role can access. At this endpoint, we use the `@RolesAllowed` annotation to declaratively enforce the access constraint.  The `/api/users/me` endpoint is also protected with RBAC (Role-Based Access Control) where only users granted with the `user` role can access. As a response, it returns a JSON document with details about the user."
#~ msgstr "Se puede acceder al endpoint `/api/public` de forma anónima. El punto final `/api/admin` está protegido con RBAC (Role-Based Access Control), donde sólo los usuarios con el rol `admin` pueden acceder. En este punto final, utilizamos la anotación `@RolesAllowed` para imponer declarativamente la restricción de acceso. El endpoint `/api/users/me` también está protegido con RBAC (Role-Based Access Control) donde sólo los usuarios con el rol `user` pueden acceder. Como respuesta, devuelve un documento JSON con detalles sobre el usuario."

#, fuzzy
#~ msgid "Solution"
#~ msgstr "Solución"

#~ msgid "We recommend that you follow the instructions in the next sections and create the application step by step.  However, you can go right to the completed example."
#~ msgstr "Le recomendamos que siga las instrucciones de las siguientes secciones y cree la aplicación paso a paso. Sin embargo, puede ir directamente al ejemplo completado."

#, fuzzy
#~ msgid "This command generates a Maven project, importing the `security-jpa` extension which allows you to map your security source to JPA entities."
#~ msgstr "Este comando genera un proyecto Maven, importando la extensión `security-jpa` que permite mapear su fuente de seguridad a entidades JPA."

#, fuzzy
#~ msgid "Don't forget to add the database connector library of choice. Here we are using PostgreSQL as identity store."
#~ msgstr "No te olvides de añadir la biblioteca del conector de la base de datos que elijas. Aquí estamos usando PostgreSQL como almacén de identidad."

#, fuzzy
#~ msgid "First, xref:security-built-in-authentication.adoc#basic-auth[Basic HTTPAuthenticationMechanism] has to be enabled with `quarkus.http.auth.basic=true`. In fact, you do not even have to set `quarkus.http.auth.basic=true` to enable it in this demo as `Basic HTTPAuthenticationMechanism` is used as a fallback authentication mechanism when a secure access is required and no other authentication mechanisms are enabled."
#~ msgstr "En primer lugar,  link:security-built-in-authentication.html#basic-auth[el Basic HTTPAuthenticationMechanism] tiene que estar habilitado con `quarkus.http.auth.basic=true`. De hecho, ni siquiera es necesario configurar `quarkus.http.auth.basic=true` para habilitarlo en esta demostración, ya que `Basic HTTPAuthenticationMechanism` se utiliza como mecanismo de autenticación de reserva cuando se requiere un acceso seguro y no hay otros mecanismos de autenticación habilitados."

#, fuzzy
#~ msgid "In our context, we are using PostgreSQL as identity store. The database schema is created by Hibernate ORM automatically on startup (change this in production), and we initialize the database with users and roles in the `Startup` class:"
#~ msgstr "En nuestro contexto, estamos utilizando PostgreSQL como almacén de identidades. El esquema de la base de datos es creado por Hibernate ORM automáticamente al inicio (cambiar esto en producción), y se inicializa la base de datos con los usuarios y roles en la clase `Startup`:"

#, fuzzy
#~ msgid "Next you can write the integration test:"
#~ msgstr "A continuación, puede escribir la prueba de integración:"

#, fuzzy
#~ msgid "With Curl or Browser"
#~ msgstr "Con Curl o Browser"

#, fuzzy
#~ msgid "Next, compile and run the application in either JVM or Native mode:"
#~ msgstr "A continuación, compile y ejecute la aplicación en modo JVM o nativo:"

#, fuzzy
#~ msgid "Then run it:"
#~ msgstr "Entonces, ejecútalo:"

#, fuzzy
#~ msgid "and run it:"
#~ msgstr "y ejecutarlo:"

#, fuzzy
#~ msgid "Now you can test it with `curl` or your favourite browser.  We will use `curl` in this section but you can try to access the same endpoint URLs from the browser."
#~ msgstr "Ahora puedes probarlo con `curl` o tu navegador favorito. En esta sección utilizaremos `curl` pero puedes intentar acceder a las mismas URLs de los endpoints desde el navegador."

#, fuzzy
#~ msgid "The very first thing to check is to ensure the anonymous access works."
#~ msgstr "Lo primero que hay que comprobar es que el acceso anónimo funciona."

#, fuzzy
#~ msgid "Note, if you are using the browser then you should see the browser displaying a Basic Authentication challenge form."
#~ msgstr "Tenga en cuenta que, si está utilizando el navegador, debería ver que éste muestra un formulario de desafío de autenticación básica."

#, fuzzy
#~ msgid "So far so good, now let's try with an allowed user."
#~ msgstr "Hasta aquí todo bien, ahora probemos con un usuario permitido."

#, fuzzy
#~ msgid "The user `admin` should be forbidden to access a resource protected with `@RolesAllowed(\"user\")` because it doesn't have this role."
#~ msgstr "El usuario `admin` debería tener prohibido el acceso a un recurso protegido con `@RolesAllowed(\"user\")` porque no tiene este rol."

#, fuzzy
#~ msgid "Security JPA Reference Guide "
#~ msgstr "Guía de referencia de la APP de seguridad"

#, fuzzy
#~ msgid "Next we recommend you to see how `OpenId Connect` can be used to provide a secure, single sign on access to your Quarkus endpoints. Please follow xref:security-openid-connect.adoc[Quarkus - Using OpenID Connect to Protect Service Applications using Bearer Token Authorization] and xref:security-openid-connect-web-authentication.adoc[Quarkus - Using OpenID Connect to Protect Web Applications using Authorization Code Flow] guides."
#~ msgstr "A continuación, le recomendamos que vea cómo `OpenId Connect` puede ser utilizado para proporcionar un acceso seguro y de inicio de sesión único a sus puntos finales de Quarkus. Por favor, sigue las guías Quarkus - Using OpenID Connect to  link:security-openid-connect.html[Protect Service Applications using Bearer Token Authorization] y  link:security-openid-connect-web-authentication.html[Quarkus - Using OpenID Connect to Protect Web Applications using Authorization Code Flow]."

#, fuzzy
#~ msgid "For a complete reference to Quarkus Security please read a xref:security.adoc[Quarkus Security] document."
#~ msgstr "Para una referencia completa a Quarkus Security, por favor lea un documento de  link:security.html[Quarkus Security]."
