# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2022-08-02 09:15+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc
#. type: Title =
#: upstream/_guides/security-getting-started.adoc:6
#, fuzzy, no-wrap
msgid "Getting Started with Quarkus Security"
msgstr "Introducción a Quarkus Security"

#. type: Plain text
#: upstream/_guides/security-getting-started.adoc:11
#, fuzzy
msgid "This guide demonstartes how you can quickly create a secure Quarkus application by using xref:security-built-in-authentication.adoc#basic-auth[Basic AuthenticationMechanism] and `JPA IdentityProvider` to create `SecurityIdentity` which is authorized by the `Role Based Access Control` (RBAC) layer before the access to application is permitted."
msgstr "Esta guía demuestra cómo se puede crear rápidamente una aplicación segura de Quarkus mediante el uso de  link:security-built-in-authentication.html#basic-auth[Basic AuthenticationMechanism] y `JPA IdentityProvider` para crear `SecurityIdentity` que es autorizada por la capa `Role Based Access Control` (RBAC) antes de que se permita el acceso a la aplicación."

#. type: delimited block =
#: upstream/_guides/security-getting-started.adoc:15
#, fuzzy
msgid "Using `Basic AuthenticationMechanism` with `JPA IdentityProvider` is better than configuring the users and roles in `application.properties` therefore this guide recommends to combine `Basic AuthenticationMechanism` and `JPA IdentityProvider`. We will update this recommendation to use a reactive equivalent of the `JPA IdentityProvider` as soon as it is introduced."
msgstr "Utilizar `Basic AuthenticationMechanism` con `JPA IdentityProvider` es mejor que configurar los usuarios y roles en `application.properties` por lo que esta guía recomienda combinar `Basic AuthenticationMechanism` y `JPA IdentityProvider`. Actualizaremos esta recomendación para utilizar un equivalente reactivo de `JPA IdentityProvider` tan pronto como se introduzca."

#. type: Plain text
#: upstream/_guides/security-getting-started.adoc:18
#, fuzzy
msgid "This guide will conclude with recommending how to learn more about Quarkus Security, and in particular about its `OpenId Connect Authentication Mechanism`."
msgstr "Esta guía concluirá recomendando cómo aprender más sobre Quarkus Security, y en particular sobre su `OpenId Connect Authentication Mechanism`."

#. type: Title ==
#: upstream/_guides/security-getting-started.adoc:20
#, fuzzy, no-wrap
msgid "Prerequisites"
msgstr "Requisitos previos"

#. type: Title ==
#: upstream/_guides/security-getting-started.adoc:24
#, fuzzy, no-wrap
msgid "Architecture"
msgstr "Arquitectura"

#. type: Plain text
#: upstream/_guides/security-getting-started.adoc:27
#, fuzzy
msgid "In this example, we build a very simple microservice which offers three endpoints:"
msgstr "En este ejemplo, construimos un microservicio muy simple que ofrece tres puntos finales:"

#. type: Plain text
#: upstream/_guides/security-getting-started.adoc:29
#, fuzzy
msgid "`/api/public`"
msgstr "`/api/public`"

#. type: Plain text
#: upstream/_guides/security-getting-started.adoc:30
#, fuzzy
msgid "`/api/users/me`"
msgstr "`/api/users/me`"

#. type: Plain text
#: upstream/_guides/security-getting-started.adoc:31
#, fuzzy
msgid "`/api/admin`"
msgstr "`/api/admin`"

#. type: Plain text
#: upstream/_guides/security-getting-started.adoc:35
#, fuzzy
msgid "The `/api/public` endpoint can be accessed anonymously.  The `/api/admin` endpoint is protected with RBAC (Role-Based Access Control) where only users granted with the `admin` role can access. At this endpoint, we use the `@RolesAllowed` annotation to declaratively enforce the access constraint.  The `/api/users/me` endpoint is also protected with RBAC (Role-Based Access Control) where only users granted with the `user` role can access. As a response, it returns a JSON document with details about the user."
msgstr "Se puede acceder al endpoint `/api/public` de forma anónima. El punto final `/api/admin` está protegido con RBAC (Role-Based Access Control), donde sólo los usuarios con el rol `admin` pueden acceder. En este punto final, utilizamos la anotación `@RolesAllowed` para imponer declarativamente la restricción de acceso. El endpoint `/api/users/me` también está protegido con RBAC (Role-Based Access Control) donde sólo los usuarios con el rol `user` pueden acceder. Como respuesta, devuelve un documento JSON con detalles sobre el usuario."

#. type: Title ==
#: upstream/_guides/security-getting-started.adoc:36
#, fuzzy, no-wrap
msgid "Solution"
msgstr "Solución"

#. type: Plain text
#: upstream/_guides/security-getting-started.adoc:40
msgid "We recommend that you follow the instructions in the next sections and create the application step by step.  However, you can go right to the completed example."
msgstr "Le recomendamos que siga las instrucciones de las siguientes secciones y cree la aplicación paso a paso. Sin embargo, puede ir directamente al ejemplo completado."

#. type: Plain text
#: upstream/_guides/security-getting-started.adoc:42
msgid "Clone the Git repository: `git clone {quickstarts-clone-url}`, or download an {quickstarts-archive-url}[archive]."
msgstr "Clone el repositorio Git: `git clone {quickstarts-clone-url}` o descargue un {quickstarts-archive-url}[archivo]."

#. type: Plain text
#: upstream/_guides/security-getting-started.adoc:44
#, fuzzy
msgid "The solution is located in the `security-jpa-quickstart` {quickstarts-tree-url}/security-jpa-quickstart[directory]."
msgstr "La solución se encuentra en el `security-jpa-quickstart` {quickstarts-tree-url}/security-jpa-quickstart[directorio]."

#. type: Title ==
#: upstream/_guides/security-getting-started.adoc:45
#, fuzzy, no-wrap
msgid "Creating the Maven Project"
msgstr "Creación del proyecto Maven"

#. type: Plain text
#: upstream/_guides/security-getting-started.adoc:48
#, fuzzy
msgid "First, we need a new project. Create a new project with the following command:"
msgstr "En primer lugar, necesitamos un nuevo proyecto. Cree un nuevo proyecto con el siguiente comando:"

#. type: Plain text
#: upstream/_guides/security-getting-started.adoc:55
#, fuzzy
msgid "This command generates a Maven project, importing the `security-jpa` extension which allows you to map your security source to JPA entities."
msgstr "Este comando genera un proyecto Maven, importando la extensión `security-jpa` que permite mapear su fuente de seguridad a entidades JPA."

#. type: delimited block =
#: upstream/_guides/security-getting-started.adoc:59
#, fuzzy
msgid "xref:hibernate-orm-panache.adoc[Hibernate ORM with Panache] is used to store your user identities but you can also use xref:hibernate-orm.adoc[Hibernate ORM]."
msgstr "link:hibernate-orm-panache.html[Hibernate ORM con Panache] se utiliza para almacenar las identidades de los usuarios, pero también se puede utilizar  link:hibernate-orm.html[Hibernate ORM]."

#. type: delimited block =
#: upstream/_guides/security-getting-started.adoc:61
#, fuzzy
msgid "Don't forget to add the database connector library of choice. Here we are using PostgreSQL as identity store."
msgstr "No te olvides de añadir la biblioteca del conector de la base de datos que elijas. Aquí estamos usando PostgreSQL como almacén de identidad."

#. type: Plain text
#: upstream/_guides/security-getting-started.adoc:65
#, fuzzy
msgid "If you already have your Quarkus project configured, you can add the `security-jpa` extension to your project by running the following command in your project base directory:"
msgstr "Si ya tienes configurado tu proyecto Quarkus, puedes añadir la extensión `security-jpa` a tu proyecto ejecutando el siguiente comando en el directorio base de tu proyecto:"

#. type: Plain text
#: upstream/_guides/security-getting-started.adoc:70
#, fuzzy
msgid "This will add the following to your build file:"
msgstr "Esto añadirá lo siguiente a su archivo de construcción:"

#. type: Block title
#: upstream/_guides/security-getting-started.adoc:72
#, no-wrap
msgid "pom.xml"
msgstr "pom.xml"

#. type: delimited block -
#: upstream/_guides/security-getting-started.adoc:78
#, no-wrap
msgid ""
"<dependency>\n"
"    <groupId>io.quarkus</groupId>\n"
"    <artifactId>quarkus-security-jpa</artifactId>\n"
"</dependency>\n"
msgstr ""

#. type: Block title
#: upstream/_guides/security-getting-started.adoc:81
#, no-wrap
msgid "build.gradle"
msgstr "build.gradle"

#. type: delimited block -
#: upstream/_guides/security-getting-started.adoc:84
#, no-wrap
msgid "implementation(\"io.quarkus:quarkus-security-jpa\")\n"
msgstr ""

#. type: Title ==
#: upstream/_guides/security-getting-started.adoc:86
#, fuzzy, no-wrap
msgid "Writing the application"
msgstr "Escribir la aplicación"

#. type: Plain text
#: upstream/_guides/security-getting-started.adoc:89
#, fuzzy
msgid "Let's start by implementing the `/api/public` endpoint. As you can see from the source code below, it is just a regular JAX-RS resource:"
msgstr "Empecemos por implementar el endpoint `/api/public`. Como puedes ver en el código fuente de abajo, es sólo un recurso JAX-RS normal:"

#. type: delimited block -
#: upstream/_guides/security-getting-started.adoc:93
#: upstream/_guides/security-getting-started.adoc:118
#: upstream/_guides/security-getting-started.adoc:143
#: upstream/_guides/security-getting-started.adoc:170
#: upstream/_guides/security-getting-started.adoc:241
#, no-wrap
msgid "package org.acme.security.jpa;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-getting-started.adoc:99
#, no-wrap
msgid ""
"import javax.annotation.security.PermitAll;\n"
"import javax.ws.rs.GET;\n"
"import javax.ws.rs.Path;\n"
"import javax.ws.rs.Produces;\n"
"import javax.ws.rs.core.MediaType;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-getting-started.adoc:102
#, no-wrap
msgid ""
"@Path(\"/api/public\")\n"
"public class PublicResource {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-getting-started.adoc:110
#, no-wrap
msgid ""
"    @GET\n"
"    @PermitAll\n"
"    @Produces(MediaType.TEXT_PLAIN)\n"
"    public String publicResource() {\n"
"        return \"public\";\n"
"   }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-getting-started.adoc:113
#, fuzzy
msgid "The source code for the `/api/admin` endpoint is also very simple. The main difference here is that we are using a `@RolesAllowed` annotation to make sure that only users granted with the `admin` role can access the endpoint:"
msgstr "El código fuente del endpoint `/api/admin` también es muy sencillo. La principal diferencia aquí es que estamos utilizando una anotación `@RolesAllowed` para asegurarnos de que sólo los usuarios con el rol `admin` pueden acceder al endpoint:"

#. type: delimited block -
#: upstream/_guides/security-getting-started.adoc:124
#, no-wrap
msgid ""
"import javax.annotation.security.RolesAllowed;\n"
"import javax.ws.rs.GET;\n"
"import javax.ws.rs.Path;\n"
"import javax.ws.rs.Produces;\n"
"import javax.ws.rs.core.MediaType;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-getting-started.adoc:127
#, no-wrap
msgid ""
"@Path(\"/api/admin\")\n"
"public class AdminResource {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-getting-started.adoc:135
#, no-wrap
msgid ""
"    @GET\n"
"    @RolesAllowed(\"admin\")\n"
"    @Produces(MediaType.TEXT_PLAIN)\n"
"    public String adminResource() {\n"
"         return \"admin\";\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-getting-started.adoc:139
#, fuzzy
msgid "Finally, let's consider the `/api/users/me` endpoint. As you can see from the source code below, we are trusting only users with the `user` role.  We are using `SecurityContext` to get access to the current authenticated Principal, and we return the user's name. This information is loaded from the database."
msgstr "Finalmente, consideremos el endpoint `/api/users/me`. Como puedes ver en el código fuente de abajo, estamos confiando sólo en los usuarios con el rol `user`. Estamos usando `SecurityContext` para obtener acceso al Principal autenticado actual, y devolvemos el nombre del usuario. Esta información se carga desde la base de datos."

#. type: delimited block -
#: upstream/_guides/security-getting-started.adoc:150
#, no-wrap
msgid ""
"import javax.annotation.security.RolesAllowed;\n"
"import javax.inject.Inject;\n"
"import javax.ws.rs.GET;\n"
"import javax.ws.rs.Path;\n"
"import javax.ws.rs.core.Context;\n"
"import javax.ws.rs.core.SecurityContext;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-getting-started.adoc:153
#, no-wrap
msgid ""
"@Path(\"/api/users\")\n"
"public class UserResource {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-getting-started.adoc:161
#, no-wrap
msgid ""
"    @GET\n"
"    @RolesAllowed(\"user\")\n"
"    @Path(\"/me\")\n"
"    public String me(@Context SecurityContext securityContext) {\n"
"        return securityContext.getUserPrincipal().getName();\n"
"    }\n"
"}\n"
msgstr ""

#. type: Title ===
#: upstream/_guides/security-getting-started.adoc:163
#, fuzzy, no-wrap
msgid "Defining our user entity"
msgstr "Definir nuestra entidad de usuario"

#. type: Plain text
#: upstream/_guides/security-getting-started.adoc:166
#, fuzzy
msgid "We can now describe how our security information is stored in our model by adding a few annotations to our `User` entity:"
msgstr "Ahora podemos describir cómo se almacena nuestra información de seguridad en nuestro modelo añadiendo algunas anotaciones a nuestra entidad `User`:"

#. type: delimited block -
#: upstream/_guides/security-getting-started.adoc:173
#, no-wrap
msgid ""
"import javax.persistence.Entity;\n"
"import javax.persistence.Table;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-getting-started.adoc:180
#, no-wrap
msgid ""
"import io.quarkus.hibernate.orm.panache.PanacheEntity;\n"
"import io.quarkus.elytron.security.common.BcryptUtil;\n"
"import io.quarkus.security.jpa.Password;\n"
"import io.quarkus.security.jpa.Roles;\n"
"import io.quarkus.security.jpa.UserDefinition;\n"
"import io.quarkus.security.jpa.Username;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-getting-started.adoc:191
#, no-wrap
msgid ""
"@Entity\n"
"@Table(name = \"test_user\")\n"
"@UserDefinition <1>\n"
"public class User extends PanacheEntity {\n"
"    @Username <2>\n"
"    public String username;\n"
"    @Password <3>\n"
"    public String password;\n"
"    @Roles <4>\n"
"    public String role;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-getting-started.adoc:206
#, no-wrap
msgid ""
"    /**\n"
"     * Adds a new user in the database\n"
"     * @param username the username\n"
"     * @param password the unencrypted password (it will be encrypted with bcrypt)\n"
"     * @param role the comma-separated roles\n"
"     */\n"
"    public static void add(String username, String password, String role) { <5>\n"
"        User user = new User();\n"
"        user.username = username;\n"
"        user.password = BcryptUtil.bcryptHash(password);\n"
"        user.role = role;\n"
"        user.persist();\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-getting-started.adoc:210
#, fuzzy
msgid "The `security-jpa` extension is only initialized if there is a single entity annotated with `@UserDefinition`."
msgstr "La extensión `security-jpa` sólo se inicializa si hay una única entidad anotada con `@UserDefinition`."

#. type: Plain text
#: upstream/_guides/security-getting-started.adoc:212
#, fuzzy
msgid "This annotation must be present on a single entity. It can be a regular Hibernate ORM entity or a Hibernate ORM with Panache entity as in this example."
msgstr "Esta anotación debe estar presente en una sola entidad. Puede ser una entidad Hibernate ORM normal o una entidad Hibernate ORM con Panache como en este ejemplo."

#. type: Plain text
#: upstream/_guides/security-getting-started.adoc:213
#, fuzzy
msgid "This indicates the field used for the username."
msgstr "Indica el campo utilizado para el nombre de usuario."

#. type: Plain text
#: upstream/_guides/security-getting-started.adoc:214
#, fuzzy
msgid "This indicates the field used for the password. This defaults to using bcrypt hashed passwords, but you can also configure it for clear text passwords or custom passwords."
msgstr "Indica el campo utilizado para la contraseña. Por defecto se utilizan contraseñas con hash bcrypt, pero también se puede configurar para contraseñas en texto claro o personalizadas."

#. type: Plain text
#: upstream/_guides/security-getting-started.adoc:215
#, fuzzy
msgid "This indicates the comma-separated list of roles added to the target Principal representation attributes."
msgstr "Indica la lista separada por comas de los roles añadidos a los atributos de representación del director de destino."

#. type: Plain text
#: upstream/_guides/security-getting-started.adoc:216
#, fuzzy
msgid "This method allows us to add users while hashing the password with the proper bcrypt hash."
msgstr "Este método nos permite añadir usuarios mientras se hace el hash de la contraseña con el hash de bcrypt adecuado."

#. type: Title ===
#: upstream/_guides/security-getting-started.adoc:217
#, fuzzy, no-wrap
msgid "Configuring the Application"
msgstr "Configuración de la aplicación"

#. type: Plain text
#: upstream/_guides/security-getting-started.adoc:220
#, fuzzy
msgid "First, xref:security-built-in-authentication.adoc#basic-auth[Basic HTTPAuthenticationMechanism] has to be enabled with `quarkus.http.auth.basic=true`. In fact, you do not even have to set `quarkus.http.auth.basic=true` to enable it in this demo as `Basic HTTPAuthenticationMechanism` is used as a fallback authentication mechanism when a secure access is required and no other authentication mechanisms are enabled."
msgstr "En primer lugar,  link:security-built-in-authentication.html#basic-auth[el Basic HTTPAuthenticationMechanism] tiene que estar habilitado con `quarkus.http.auth.basic=true`. De hecho, ni siquiera es necesario configurar `quarkus.http.auth.basic=true` para habilitarlo en esta demostración, ya que `Basic HTTPAuthenticationMechanism` se utiliza como mecanismo de autenticación de reserva cuando se requiere un acceso seguro y no hay otros mecanismos de autenticación habilitados."

#. type: Plain text
#: upstream/_guides/security-getting-started.adoc:222
#, fuzzy
msgid "Next, configure the datasource. The `security-jpa` extension requires at least one datasource to access to your database."
msgstr "A continuación, configure el origen de datos. La extensión `security-jpa` requiere al menos una fuente de datos para acceder a su base de datos."

#. type: delimited block -
#: upstream/_guides/security-getting-started.adoc:226
#, no-wrap
msgid "quarkus.http.auth.basic=true\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-getting-started.adoc:231
#, no-wrap
msgid ""
"quarkus.datasource.db-kind=postgresql\n"
"quarkus.datasource.username=quarkus\n"
"quarkus.datasource.password=quarkus\n"
"quarkus.datasource.jdbc.url=jdbc:postgresql:security_jpa\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-getting-started.adoc:233
#: upstream/_guides/security-getting-started.adoc:288
#, no-wrap
msgid "quarkus.hibernate-orm.database.generation=drop-and-create\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-getting-started.adoc:237
#, fuzzy
msgid "In our context, we are using PostgreSQL as identity store. The database schema is created by Hibernate ORM automatically on startup (change this in production), and we initialize the database with users and roles in the `Startup` class:"
msgstr "En nuestro contexto, estamos utilizando PostgreSQL como almacén de identidades. El esquema de la base de datos es creado por Hibernate ORM automáticamente al inicio (cambiar esto en producción), y se inicializa la base de datos con los usuarios y roles en la clase `Startup`:"

#. type: delimited block -
#: upstream/_guides/security-getting-started.adoc:245
#, no-wrap
msgid ""
"import javax.enterprise.event.Observes;\n"
"import javax.inject.Singleton;\n"
"import javax.transaction.Transactional;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-getting-started.adoc:247
#, no-wrap
msgid "import io.quarkus.runtime.StartupEvent;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-getting-started.adoc:259
#, no-wrap
msgid ""
"@Singleton\n"
"public class Startup {\n"
"    @Transactional\n"
"    public void loadUsers(@Observes StartupEvent evt) {\n"
"        // reset and load all test users\n"
"        User.deleteAll();\n"
"        User.add(\"admin\", \"admin\", \"admin\");\n"
"        User.add(\"user\", \"user\", \"user\");\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-getting-started.adoc:262
#, fuzzy
msgid "The application is now protected and the identities are provided by our database."
msgstr "La aplicación está ahora protegida y las identidades son proporcionadas por nuestra base de datos."

#. type: delimited block =
#: upstream/_guides/security-getting-started.adoc:267
#, fuzzy
msgid "We kindly remind you that you must not store clear-text passwords in production environments ;-).  As a result, the `security-jpa` defaults to using bcrypt-hashed passwords."
msgstr "Le recordamos que no debe almacenar contraseñas en texto claro en entornos de producción ;-). Por lo tanto, `security-jpa` utiliza por defecto contraseñas cifradas con bcrypt."

#. type: Title ==
#: upstream/_guides/security-getting-started.adoc:269
#, fuzzy, no-wrap
msgid "Testing the Application"
msgstr "Probar la aplicación"

#. type: Title ===
#: upstream/_guides/security-getting-started.adoc:271
#, fuzzy, no-wrap
msgid "With Dev Services for PostgreSQL"
msgstr "Con los servicios de desarrollo para PostgreSQL"

#. type: Plain text
#: upstream/_guides/security-getting-started.adoc:276
#, fuzzy
msgid "Lets add the integration tests before running your application in production mode."
msgstr "Añadamos las pruebas de integración antes de ejecutar la aplicación en modo de producción."

#. type: Plain text
#: upstream/_guides/security-getting-started.adoc:279
#, fuzzy
msgid "We recommend using xref:https://quarkus.io/guides/dev-services#databases[Dev Services for PostgreSQL] for the integration testing of your application in JVM and native modes.  `Dev Services for PostgreSQL` will launch and configure a `PostgreSQL` test container if PostgreSQL configuration properties are enabled only in production (`prod`) mode:"
msgstr "Recomendamos el uso de  link:https://quarkus.io/guides/dev-services.html#databases[Dev Services for PostgreSQL] para las pruebas de integración de su aplicación en los modos JVM y nativo. `Dev Services for PostgreSQL` lanzará y configurará un contenedor de prueba `PostgreSQL` si las propiedades de configuración de PostgreSQL están habilitadas sólo en el modo de producción ( `prod`):"

#. type: delimited block -
#: upstream/_guides/security-getting-started.adoc:286
#, no-wrap
msgid ""
"%prod.quarkus.datasource.db-kind=postgresql\n"
"%prod.quarkus.datasource.username=quarkus\n"
"%prod.quarkus.datasource.password=quarkus\n"
"%prod.quarkus.datasource.jdbc.url=jdbc:postgresql:elytron_security_jpa\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-getting-started.adoc:291
#, fuzzy
msgid "Note that adding a `%prod.` profile prefix the datasource properties will not make them visible to `Dev Services for PostgreSQL` but only to the application runnnig in production mode."
msgstr "Tenga en cuenta que si añade un prefijo de perfil `%prod.` las propiedades de la fuente de datos no serán visibles para `Dev Services for PostgreSQL` sino sólo para la aplicación que se ejecuta en modo de producción."

#. type: Plain text
#: upstream/_guides/security-getting-started.adoc:293
#, fuzzy
msgid "Next you can write the integration test:"
msgstr "A continuación, puede escribir la prueba de integración:"

#. type: delimited block -
#: upstream/_guides/security-getting-started.adoc:297
#, no-wrap
msgid "package org.acme.elytron.security.jpa;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-getting-started.adoc:301
#, no-wrap
msgid ""
"import static io.restassured.RestAssured.get;\n"
"import static io.restassured.RestAssured.given;\n"
"import static org.hamcrest.core.Is.is;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-getting-started.adoc:304
#, no-wrap
msgid ""
"import org.apache.http.HttpStatus;\n"
"import org.junit.jupiter.api.Test;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-getting-started.adoc:306
#, no-wrap
msgid "import io.quarkus.test.junit.QuarkusTest;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-getting-started.adoc:309
#, no-wrap
msgid ""
"@QuarkusTest\n"
"public class JpaSecurityRealmTest {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-getting-started.adoc:315
#, no-wrap
msgid ""
"    @Test\n"
"    void shouldAccessPublicWhenAnonymous() {\n"
"        get(\"/api/public\")\n"
"                .then()\n"
"                .statusCode(HttpStatus.SC_OK);\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-getting-started.adoc:317
#: upstream/_guides/security-getting-started.adoc:325
#: upstream/_guides/security-getting-started.adoc:336
#, no-wrap
msgid "    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-getting-started.adoc:323
#, no-wrap
msgid ""
"    @Test\n"
"    void shouldNotAccessAdminWhenAnonymous() {\n"
"        get(\"/api/admin\")\n"
"                .then()\n"
"                .statusCode(HttpStatus.SC_UNAUTHORIZED);\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-getting-started.adoc:334
#, no-wrap
msgid ""
"    @Test\n"
"    void shouldAccessAdminWhenAdminAuthenticated() {\n"
"        given()\n"
"                .auth().preemptive().basic(\"admin\", \"admin\")\n"
"                .when()\n"
"                .get(\"/api/admin\")\n"
"                .then()\n"
"                .statusCode(HttpStatus.SC_OK);\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-getting-started.adoc:346
#, no-wrap
msgid ""
"    @Test\n"
"    void shouldNotAccessUserWhenAdminAuthenticated() {\n"
"        given()\n"
"                .auth().preemptive().basic(\"admin\", \"admin\")\n"
"                .when()\n"
"                .get(\"/api/users/me\")\n"
"                .then()\n"
"                .statusCode(HttpStatus.SC_FORBIDDEN);\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-getting-started.adoc:358
#, no-wrap
msgid ""
"    @Test\n"
"    void shouldAccessUserAndGetIdentityWhenUserAuthenticated() {\n"
"        given()\n"
"                .auth().preemptive().basic(\"user\", \"user\")\n"
"                .when()\n"
"                .get(\"/api/users/me\")\n"
"                .then()\n"
"                .statusCode(HttpStatus.SC_OK)\n"
"                .body(is(\"user\"));\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-getting-started.adoc:361
#, fuzzy
msgid "As you can see you do not have to launch the test container from the test code."
msgstr "Como puede ver, no tiene que lanzar el contenedor de prueba desde el código de prueba."

#. type: delimited block =
#: upstream/_guides/security-getting-started.adoc:367
#, fuzzy
msgid "If you start your application in `devmode` then `Dev Services for PostgreSQL` will launch a `PostgreSQL` devmode container for a start for you to focus on the application development.  While developing you can also start adding tests one by one and run them with the xref:continuous-testing.adoc[Continous Testing] feature - `Dev Services for PostgreSQL` will support these tests with a separate `PostgreSQL` test container which will not conflict with the devmode container."
msgstr "Si inicias tu aplicación en `devmode` entonces `Dev Services for PostgreSQL` lanzará un contenedor en modo devmode `PostgreSQL` para que te centres en el desarrollo de la aplicación. Durante el desarrollo también puedes empezar a añadir pruebas una a una y ejecutarlas con la función de  link:continuous-testing.html[pruebas continuas] - `Dev Services for PostgreSQL` soportará estas pruebas con un contenedor de pruebas separado `PostgreSQL` que no entrará en conflicto con el contenedor devmode."

#. type: Title ===
#: upstream/_guides/security-getting-started.adoc:369
#, fuzzy, no-wrap
msgid "With Curl or Browser"
msgstr "Con Curl o Browser"

#. type: Plain text
#: upstream/_guides/security-getting-started.adoc:372
#, fuzzy
msgid "First, start a PostgreSQL server:"
msgstr "En primer lugar, inicie un servidor PostgreSQL:"

#. type: delimited block -
#: upstream/_guides/security-getting-started.adoc:378
#, no-wrap
msgid ""
"docker run --rm=true --name security-getting-started -e POSTGRES_USER=quarkus \\\n"
"           -e POSTGRES_PASSWORD=quarkus -e POSTGRES_DB=elytron_security_jpa \\\n"
"           -p 5432:5432 postgres:14.1\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-getting-started.adoc:381
#, fuzzy
msgid "Next, compile and run the application in either JVM or Native mode:"
msgstr "A continuación, compile y ejecute la aplicación en modo JVM o nativo:"

#. type: Title ====
#: upstream/_guides/security-getting-started.adoc:382
#, fuzzy, no-wrap
msgid "JVM mode"
msgstr "Modo JVM"

#. type: Plain text
#: upstream/_guides/security-getting-started.adoc:385
#: upstream/_guides/security-getting-started.adoc:398
#, fuzzy
msgid "Compile the application:"
msgstr "Compilar la aplicación:"

#. type: Plain text
#: upstream/_guides/security-getting-started.adoc:389
#, fuzzy
msgid "Then run it:"
msgstr "Entonces, ejecútalo:"

#. type: delimited block -
#: upstream/_guides/security-getting-started.adoc:393
#, no-wrap
msgid "java -jar target/quarkus-app/quarkus-run.jar\n"
msgstr ""

#. type: Title ====
#: upstream/_guides/security-getting-started.adoc:395
#, fuzzy, no-wrap
msgid "Native Mode"
msgstr "Modo nativo"

#. type: Plain text
#: upstream/_guides/security-getting-started.adoc:402
#, fuzzy
msgid "and run it:"
msgstr "y ejecutarlo:"

#. type: delimited block -
#: upstream/_guides/security-getting-started.adoc:406
#, no-wrap
msgid "./target/security-jpa-quickstart-runner\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-getting-started.adoc:410
#, fuzzy
msgid "Now you can test it with `curl` or your favourite browser.  We will use `curl` in this section but you can try to access the same endpoint URLs from the browser."
msgstr "Ahora puedes probarlo con `curl` o tu navegador favorito. En esta sección utilizaremos `curl` pero puedes intentar acceder a las mismas URLs de los endpoints desde el navegador."

#. type: Plain text
#: upstream/_guides/security-getting-started.adoc:412
#, fuzzy
msgid "The very first thing to check is to ensure the anonymous access works."
msgstr "Lo primero que hay que comprobar es que el acceso anónimo funciona."

#. type: delimited block -
#: upstream/_guides/security-getting-started.adoc:419
#, no-wrap
msgid ""
"$ curl -i -X GET http://localhost:8080/api/public\n"
"HTTP/1.1 200 OK\n"
"Content-Length: 6\n"
"Content-Type: text/plain;charset=UTF-8\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-getting-started.adoc:421
#, no-wrap
msgid "public%\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-getting-started.adoc:424
#, fuzzy
msgid "Now, let's try to hit a protected resource anonymously."
msgstr "Ahora, intentemos atacar un recurso protegido de forma anónima."

#. type: delimited block -
#: upstream/_guides/security-getting-started.adoc:432
#, no-wrap
msgid ""
"$ curl -i -X GET http://localhost:8080/api/admin\n"
"HTTP/1.1 401 Unauthorized\n"
"Content-Length: 14\n"
"Content-Type: text/html;charset=UTF-8\n"
"WWW-Authenticate: Basic\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-getting-started.adoc:434
#, no-wrap
msgid "Not authorized%\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-getting-started.adoc:437
#, fuzzy
msgid "Note, if you are using the browser then you should see the browser displaying a Basic Authentication challenge form."
msgstr "Tenga en cuenta que, si está utilizando el navegador, debería ver que éste muestra un formulario de desafío de autenticación básica."

#. type: Plain text
#: upstream/_guides/security-getting-started.adoc:439
#, fuzzy
msgid "So far so good, now let's try with an allowed user."
msgstr "Hasta aquí todo bien, ahora probemos con un usuario permitido."

#. type: delimited block -
#: upstream/_guides/security-getting-started.adoc:446
#, no-wrap
msgid ""
"$ curl -i -X GET -u admin:admin http://localhost:8080/api/admin\n"
"HTTP/1.1 200 OK\n"
"Content-Length: 5\n"
"Content-Type: text/plain;charset=UTF-8\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-getting-started.adoc:448
#, no-wrap
msgid "admin%\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-getting-started.adoc:451
#, fuzzy
msgid "By providing the `admin:admin` credentials, the extension authenticated the user and loaded their roles.  The `admin` user is authorized to access to the protected resources."
msgstr "Al proporcionar las credenciales de `admin:admin`, la extensión autentificó al usuario y cargó sus roles. El usuario de `admin` está autorizado a acceder a los recursos protegidos."

#. type: Plain text
#: upstream/_guides/security-getting-started.adoc:453
#, fuzzy
msgid "The user `admin` should be forbidden to access a resource protected with `@RolesAllowed(\"user\")` because it doesn't have this role."
msgstr "El usuario `admin` debería tener prohibido el acceso a un recurso protegido con `@RolesAllowed(\"user\")` porque no tiene este rol."

#. type: delimited block -
#: upstream/_guides/security-getting-started.adoc:460
#, no-wrap
msgid ""
"$ curl -i -X GET -u admin:admin http://localhost:8080/api/users/me\n"
"HTTP/1.1 403 Forbidden\n"
"Content-Length: 34\n"
"Content-Type: text/html;charset=UTF-8\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-getting-started.adoc:462
#, no-wrap
msgid "Forbidden%\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-getting-started.adoc:465
#, fuzzy
msgid "Finally, using the user `user` works and the security context contains the principal details (username for instance)."
msgstr "Por último, el uso del usuario `user` funciona y el contexto de seguridad contiene los detalles principales (nombre de usuario, por ejemplo)."

#. type: delimited block -
#: upstream/_guides/security-getting-started.adoc:472
#, no-wrap
msgid ""
"$ curl -i -X GET -u user:user http://localhost:8080/api/users/me\n"
"HTTP/1.1 200 OK\n"
"Content-Length: 4\n"
"Content-Type: text/plain;charset=UTF-8\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-getting-started.adoc:474
#, no-wrap
msgid "user%\n"
msgstr ""

#. type: Title ==
#: upstream/_guides/security-getting-started.adoc:476
#, fuzzy, no-wrap
msgid "Security JPA Reference Guide "
msgstr "Guía de referencia de la APP de seguridad"

#. type: Plain text
#: upstream/_guides/security-getting-started.adoc:479
#, fuzzy
msgid "Now that you have run and tested the demo, please have a look at the more specific information about preparing your JPA identity store."
msgstr "Ahora que ha ejecutado y probado la demo, por favor, eche un vistazo a la información más específica sobre la preparación de su almacén de identidades JPA."

#. type: Title ===
#: upstream/_guides/security-getting-started.adoc:480
#, fuzzy, no-wrap
msgid "Supported model types"
msgstr "Tipos de modelos admitidos"

#. type: Plain text
#: upstream/_guides/security-getting-started.adoc:483
#, fuzzy
msgid "The `@UserDefinition` class must be a JPA entity (with Panache or not)."
msgstr "La clase `@UserDefinition` debe ser una entidad JPA (con Panache o no)."

#. type: Plain text
#: upstream/_guides/security-getting-started.adoc:484
#, fuzzy
msgid "The `@Username` and `@Password` field types must be of type `String`."
msgstr "Los tipos de campo `@Username` y `@Password` deben ser del tipo `String`."

#. type: Plain text
#: upstream/_guides/security-getting-started.adoc:485
#, fuzzy
msgid "The `@Roles` field must either be of type `String` or `Collection<String>` or alternately a `Collection<X>` where `X` is an entity class with one `String` field annotated with the `@RolesValue` annotation."
msgstr "El campo `@Roles` debe ser del tipo `String` o `Collection&amp;lt;String&amp;gt;` o, alternativamente, un `Collection&amp;lt;X&amp;gt;` donde `X` es una clase de entidad con un campo `String` anotado con la anotación `@RolesValue`."

#. type: Plain text
#: upstream/_guides/security-getting-started.adoc:486
#, fuzzy
msgid "Each `String` role element type will be parsed as a comma-separated list of roles."
msgstr "Cada tipo de elemento de rol de `String` se analizará como una lista de roles separada por comas."

#. type: Title ===
#: upstream/_guides/security-getting-started.adoc:487
#, fuzzy, no-wrap
msgid "Storing roles in another entity"
msgstr "Almacenamiento de roles en otra entidad"

#. type: Plain text
#: upstream/_guides/security-getting-started.adoc:490
#, fuzzy
msgid "You can also store roles in another entity:"
msgstr "También puede almacenar los roles en otra entidad:"

#. type: delimited block -
#: upstream/_guides/security-getting-started.adoc:499
#, no-wrap
msgid ""
"@UserDefinition\n"
"@Table(name = \"test_user\")\n"
"@Entity\n"
"public class User extends PanacheEntity {\n"
"    @Username\n"
"    public String name;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-getting-started.adoc:502
#, no-wrap
msgid ""
"    @Password\n"
"    public String pass;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-getting-started.adoc:507
#, no-wrap
msgid ""
"    @ManyToMany\n"
"    @Roles\n"
"    public List<Role> roles = new ArrayList<>();\n"
"}\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-getting-started.adoc:510
#, no-wrap
msgid ""
"@Entity\n"
"public class Role extends PanacheEntity {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-getting-started.adoc:513
#, no-wrap
msgid ""
"    @ManyToMany(mappedBy = \"roles\")\n"
"    public List<ExternalRolesUserEntity> users;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-getting-started.adoc:517
#, no-wrap
msgid ""
"    @RolesValue\n"
"    public String role;\n"
"}\n"
msgstr ""

#. type: Title ===
#: upstream/_guides/security-getting-started.adoc:519
#, fuzzy, no-wrap
msgid "Password storage and hashing"
msgstr "Almacenamiento de contraseñas y hashing"

#. type: Plain text
#: upstream/_guides/security-getting-started.adoc:523
#, fuzzy
msgid "By default, we consider passwords to be stored hashed with https://en.wikipedia.org/wiki/Bcrypt[bcrypt] under the https://en.wikipedia.org/wiki/Crypt_(C)[Modular Crypt Format] (MCF)."
msgstr "Por defecto, consideramos que las contraseñas se almacenan con hash con  link:https://en.wikipedia.org/wiki/Bcrypt[bcrypt] bajo el  link:https://en.wikipedia.org/wiki/Crypt_©[formato Modular Crypt Format] (MCF)."

#. type: Plain text
#: upstream/_guides/security-getting-started.adoc:527
#, fuzzy
msgid "When you need to create such a hashed password we provide the convenient `String BcryptUtil.bcryptHash(String password)` function, which defaults to creating a random salt and hashing in 10 iterations (though you can specify the iterations and salt too)."
msgstr "Cuando necesites crear una contraseña con hash, te ofrecemos la práctica función `String BcryptUtil.bcryptHash(String password)`, que por defecto crea una sal aleatoria y hace un hash en 10 iteraciones (aunque también puedes especificar las iteraciones y la sal)."

#. type: Plain text
#: upstream/_guides/security-getting-started.adoc:530
#, fuzzy
msgid "with MCF you don't need dedicated columns to store the hashing algorithm, the iterations count or the salt because they're all stored in the hashed value."
msgstr "Con MCF no se necesitan columnas dedicadas para almacenar el algoritmo de hashing, el recuento de iteraciones o la sal, ya que todo se almacena en el valor de hashed."

#. type: Plain text
#: upstream/_guides/security-getting-started.adoc:532
#, fuzzy
msgid "You also have the possibility to store password using different hashing algorithm `@Password(value = PasswordType.CUSTOM, provider = CustomPasswordProvider.class)`:"
msgstr "También tiene la posibilidad de almacenar la contraseña utilizando diferentes algoritmos de hashing `@Password(value = PasswordType.CUSTOM, provider = CustomPasswordProvider.class)`:"

#. type: delimited block -
#: upstream/_guides/security-getting-started.adoc:542
#, no-wrap
msgid ""
"@UserDefinition\n"
"@Table(name = \"test_user\")\n"
"@Entity\n"
"public class CustomPasswordUserEntity {\n"
"    @Id\n"
"    @GeneratedValue\n"
"    public Long id;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-getting-started.adoc:546
#, no-wrap
msgid ""
"    @Column(name = \"username\")\n"
"    @Username\n"
"    public String name;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-getting-started.adoc:550
#, no-wrap
msgid ""
"    @Column(name = \"password\")\n"
"    @Password(value = PasswordType.CUSTOM, provider = CustomPasswordProvider.class)\n"
"    public String pass;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-getting-started.adoc:554
#, no-wrap
msgid ""
"    @Roles\n"
"    public String role;\n"
"}\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-getting-started.adoc:562
#, no-wrap
msgid ""
"public class CustomPasswordProvider implements PasswordProvider {\n"
"    @Override\n"
"    public Password getPassword(String pass) {\n"
"        byte[] digest = DatatypeConverter.parseHexBinary(pass);\n"
"        return SimpleDigestPassword.createRaw(SimpleDigestPassword.ALGORITHM_SIMPLE_DIGEST_SHA_256, digest);\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-getting-started.adoc:566
#, fuzzy
msgid "WARN: you can also store passwords in clear text with `@Password(PasswordType.CLEAR)` but we strongly recommend against it in production."
msgstr "ADVERTENCIA: también se pueden almacenar contraseñas en texto claro con `@Password(PasswordType.CLEAR)`, pero se desaconseja encarecidamente en producción."

#. type: Title ==
#: upstream/_guides/security-getting-started.adoc:567
#, fuzzy, no-wrap
msgid "What is Next"
msgstr "Qué es lo que sigue"

#. type: Plain text
#: upstream/_guides/security-getting-started.adoc:570
#, fuzzy
msgid "You have learned how to create and test a secure Quarkus application by using xref:security-built-in-authentication.adoc#basic-auth[Basic HTTPAuthenticationMechanism], `JPA IdentityProvider`."
msgstr "Ha aprendido a crear y probar una aplicación segura de Quarkus utilizando  link:security-built-in-authentication.html#basic-auth[el mecanismo básico de autenticación HTTPAuthenticationMechanism], `JPA IdentityProvider`."

#. type: Plain text
#: upstream/_guides/security-getting-started.adoc:572
#, fuzzy
msgid "Next we recommend you to see how `OpenId Connect` can be used to provide a secure, single sign on access to your Quarkus endpoints. Please follow xref:security-openid-connect.adoc[Quarkus - Using OpenID Connect to Protect Service Applications using Bearer Token Authorization] and xref:security-openid-connect-web-authentication.adoc[Quarkus - Using OpenID Connect to Protect Web Applications using Authorization Code Flow] guides."
msgstr "A continuación, le recomendamos que vea cómo `OpenId Connect` puede ser utilizado para proporcionar un acceso seguro y de inicio de sesión único a sus puntos finales de Quarkus. Por favor, sigue las guías Quarkus - Using OpenID Connect to  link:security-openid-connect.html[Protect Service Applications using Bearer Token Authorization] y  link:security-openid-connect-web-authentication.html[Quarkus - Using OpenID Connect to Protect Web Applications using Authorization Code Flow]."

#. type: Plain text
#: upstream/_guides/security-getting-started.adoc:574
#, fuzzy
msgid "For a complete reference to Quarkus Security please read a xref:security.adoc[Quarkus Security] document."
msgstr "Para una referencia completa a Quarkus Security, por favor lea un documento de  link:security.html[Quarkus Security]."

#. type: Title ==
#: upstream/_guides/security-getting-started.adoc:575
#, fuzzy, no-wrap
msgid "References"
msgstr "Referencias"

#. type: Plain text
#: upstream/_guides/security-getting-started.adoc:578
#, fuzzy
msgid "xref:security.adoc[Quarkus Security]"
msgstr "link:security.html[Seguridad Quarkus]"

#. type: Plain text
#: upstream/_guides/security-getting-started.adoc:579
#, fuzzy
msgid "xref:security-openid-connect.adoc[Quarkus - Using OpenID Connect to Protect Service Applications using Bearer Token Authorization]"
msgstr "link:security-openid-connect.html[Quarkus - Uso de OpenID Connect para proteger las aplicaciones de servicios mediante la autorización de tokens de portador]"

#. type: Plain text
#: upstream/_guides/security-getting-started.adoc:580
#, fuzzy
msgid "xref:security-openid-connect-web-authentication.adoc[Quarkus - Using OpenID Connect to Protect Web Applications using Authorization Code Flow]"
msgstr "link:security-openid-connect-web-authentication.html[Quarkus - Uso de OpenID Connect para proteger las aplicaciones web mediante el flujo de código de autorización]"

#. type: Plain text
#: upstream/_guides/security-getting-started.adoc:581
#, fuzzy
msgid "xref:hibernate-orm-panache.adoc[Hibernate ORM with Panache]"
msgstr "link:hibernate-orm-panache.html[Hibernate ORM con Panache]"

#. type: Plain text
#: upstream/_guides/security-getting-started.adoc:582
#, fuzzy
msgid "xref:hibernate-orm.adoc[Hibernate ORM]"
msgstr "link:hibernate-orm.html[Hibernate ORM]"
